using LEA.Symmetric;

namespace LEA.Test.OpMode;

public class OfbModeTest
{
    private readonly TestVector[] Lea256OfbTestVectors =
    {
        new TestVector
        {
            Key = new byte[] { 0xEE, 0x4C, 0x87, 0x85, 0x6A, 0x4E, 0x56, 0xD7, 0x7E, 0x39, 0x63, 0x80, 0x4A, 0xB7, 0x84, 0x95, 0xE7, 0x8F, 0x2C, 0x49, 0x6, 0xC1, 0x31, 0xA9, 0xD3, 0xD1, 0xD3, 0x8A, 0x20, 0x63, 0xFB, 0xBF },
            IV = new byte[] { 0xBF, 0x8, 0xC0, 0x8F, 0x2F, 0x58, 0x2F, 0x66, 0x7C, 0x41, 0x4C, 0xCA, 0x60, 0x9E, 0x54, 0x91 },
            PlainText = new byte[] { 0xAE, 0xB, 0x45, 0x51, 0xF0, 0xF8, 0xA0, 0x19, 0x4F, 0xFD, 0x6E, 0x5E, 0xB4, 0x6D, 0x81, 0x38 },
            CipherText = new byte[] { 0x7D, 0xDA, 0x6, 0xB9, 0x8, 0x86, 0x64, 0x50, 0xE8, 0x15, 0xFE, 0x22, 0x69, 0x6C, 0xC2, 0x1C }
        },
        new TestVector
        {
            Key = new byte[] { 0x2D, 0x2E, 0xFC, 0xCF, 0x92, 0xC8, 0x16, 0xF, 0x68, 0xBB, 0x1A, 0xA4, 0x5, 0x16, 0xB2, 0x22, 0xF5, 0x45, 0x66, 0x83, 0x9D, 0x2B, 0x60, 0xD7, 0x1E, 0x71, 0x72, 0x37, 0x7D, 0x1D, 0x5A, 0xFB },
            IV = new byte[] { 0x0, 0x66, 0x44, 0x2D, 0xDB, 0xC6, 0x90, 0x3D, 0xB, 0x52, 0xD6, 0xF5, 0x83, 0x47, 0x27, 0xB0 },
            PlainText = new byte[] { 0x86, 0xE5, 0x96, 0xC7, 0x54, 0x80, 0xF7, 0x4D, 0x8, 0xD4, 0xE7, 0xFC, 0xC1, 0x99, 0xD, 0x6E, 0x0, 0x57, 0x9F, 0x91, 0x51, 0x7C, 0x27, 0x55, 0x2E, 0xAC, 0x87, 0xA7, 0x20, 0x58, 0x3A, 0xA3 },
            CipherText = new byte[] { 0xA0, 0xC7, 0xB9, 0x9A, 0xA5, 0x9, 0x30, 0x43, 0x25, 0x29, 0xE5, 0xF8, 0xC8, 0xBF, 0x1F, 0x13, 0xF8, 0x7, 0xBD, 0x93, 0xCB, 0xA2, 0x3A, 0x93, 0xE6, 0x7, 0x98, 0x2E, 0xD5, 0x82, 0x2C, 0x12 }
        },
        new TestVector
        {
            Key = new byte[] { 0x27, 0x92, 0xDE, 0x5, 0x5C, 0x1F, 0xEF, 0xE1, 0xD5, 0xCE, 0xD6, 0x95, 0xC9, 0x9, 0x22, 0xFB, 0xF4, 0xAA, 0x15, 0xE3, 0x3D, 0x10, 0x62, 0xC0, 0x97, 0x71, 0x35, 0xA1, 0x25, 0x71, 0x74, 0x63 },
            IV = new byte[] { 0xA1, 0xF4, 0x44, 0x25, 0xFE, 0x31, 0xD0, 0xFD, 0x4C, 0x9, 0x46, 0xE9, 0xDD, 0x96, 0x21, 0x9 },
            PlainText = new byte[] { 0xA6, 0x6, 0xAE, 0xB, 0xE7, 0xAA, 0xC9, 0xE6, 0xF, 0x4A, 0xE8, 0xCB, 0xDA, 0xBC, 0x5C, 0x58, 0xBC, 0xB4, 0xD3, 0x10, 0x82, 0xDE, 0x20, 0x8, 0x37, 0x2A, 0x3F, 0xE2, 0x44, 0x68, 0x93, 0xFF, 0xDC, 0x14, 0x73, 0xF1, 0x97, 0x73, 0xE5, 0x2F, 0x5D, 0xDF, 0xA9, 0xD, 0x86, 0x5E, 0x7A, 0xEB },
            CipherText = new byte[] { 0x67, 0xEE, 0x23, 0x34, 0x9E, 0xA9, 0x9E, 0x84, 0x8F, 0xED, 0x93, 0xAC, 0xD3, 0x7D, 0x78, 0xA1, 0xB, 0x70, 0xA8, 0x81, 0xA4, 0x44, 0xF3, 0x94, 0x4, 0x8A, 0x8, 0xA4, 0xAC, 0x8F, 0x53, 0xB3, 0x4A, 0x7C, 0xE7, 0xCF, 0xC5, 0x8F, 0xEF, 0xD3, 0xBD, 0xCE, 0x70, 0x48, 0x17, 0x23, 0x5E, 0x8 }
        },
        new TestVector
        {
            Key = new byte[] { 0x3F, 0x7A, 0x90, 0xAC, 0x30, 0x4D, 0x69, 0x6A, 0x5C, 0xDC, 0xC9, 0x67, 0x48, 0xA6, 0x0, 0x47, 0x5F, 0x7C, 0x6B, 0x7D, 0x95, 0x92, 0x3D, 0x4, 0x4B, 0xD7, 0x7F, 0x4F, 0x72, 0x82, 0x56, 0x82 },
            IV = new byte[] { 0xF4, 0xED, 0x85, 0xE2, 0x4F, 0xA7, 0x32, 0x8A, 0x83, 0xC5, 0xED, 0x61, 0x2F, 0x78, 0xEE, 0x48 },
            PlainText = new byte[] { 0xF7, 0xE5, 0x9E, 0x98, 0x28, 0x30, 0x5A, 0xCB, 0x9F, 0xDA, 0x73, 0x79, 0xE7, 0x4E, 0x79, 0x87, 0xA1, 0xB6, 0xB9, 0x9B, 0x29, 0x13, 0x4, 0xD2, 0x76, 0x8D, 0xB2, 0xB6, 0x42, 0x7, 0xE7, 0x6A, 0x6B, 0xF7, 0x15, 0x28, 0x9A, 0x75, 0xC2, 0xEE, 0x22, 0x92, 0x8C, 0x73, 0x2B, 0xEA, 0x6A, 0x60, 0xF, 0x7D, 0x34, 0xBD, 0x4, 0xBA, 0x66, 0xA9, 0xFC, 0xDD, 0x21, 0x4F, 0xC9, 0x7B, 0x72, 0x15 },
            CipherText = new byte[] { 0x2B, 0x43, 0x46, 0xA8, 0xC9, 0xC6, 0x57, 0x9F, 0xDC, 0x23, 0xA9, 0x1, 0xF8, 0x92, 0x86, 0xE4, 0x8C, 0x78, 0x66, 0xBE, 0x1D, 0x36, 0x11, 0x6F, 0x47, 0x83, 0x22, 0x1A, 0x2, 0x64, 0x8F, 0x39, 0xA5, 0xA7, 0x81, 0xFC, 0xF8, 0x32, 0x36, 0x74, 0x35, 0xD3, 0x9, 0x84, 0x8F, 0xA0, 0xE5, 0x93, 0xEC, 0x22, 0xB4, 0x1F, 0x86, 0xC5, 0x29, 0x6C, 0x99, 0x86, 0xA, 0x99, 0x41, 0xC0, 0xB5, 0xE }
        },
        new TestVector
        {
            Key = new byte[] { 0x85, 0x5B, 0xD7, 0x16, 0x31, 0x88, 0xFF, 0xD3, 0x9C, 0xA4, 0xD2, 0x25, 0x86, 0x7F, 0xB1, 0x77, 0x6, 0xE9, 0xFF, 0x31, 0x29, 0xC4, 0xE0, 0x77, 0xDC, 0x5D, 0x40, 0x14, 0xC, 0xFC, 0x18, 0xB1 },
            IV = new byte[] { 0xB, 0xB9, 0xEC, 0x4B, 0x36, 0x92, 0x99, 0xE4, 0xD5, 0xBB, 0x4D, 0x78, 0x42, 0x35, 0xD7, 0x32 },
            PlainText = new byte[] { 0x4E, 0xA2, 0x21, 0xE0, 0xE0, 0x58, 0xFA, 0xA5, 0xDF, 0xB4, 0x19, 0xED, 0x52, 0xB0, 0x5F, 0xA6, 0xC6, 0xB8, 0x5D, 0xAE, 0xF0, 0xBA, 0x16, 0x87, 0x94, 0x7D, 0x6, 0x52, 0xA6, 0x33, 0x63, 0xFB, 0xAE, 0x51, 0xA2, 0xB1, 0x71, 0x9E, 0x3D, 0x99, 0xCD, 0x8A, 0xB4, 0xC3, 0xE5, 0xC2, 0xD2, 0x5D, 0x7E, 0x1, 0x31, 0x26, 0xA9, 0x29, 0x0, 0x26, 0xA3, 0x92, 0x4, 0x9D, 0xF9, 0xA2, 0xDD, 0x39, 0xEF, 0x9E, 0x8B, 0x8B, 0x23, 0xBF, 0x30, 0xBC, 0x6E, 0x89, 0x17, 0x7C, 0xB, 0x58, 0xF6, 0x3C },
            CipherText = new byte[] { 0x46, 0x23, 0x25, 0xD8, 0x3E, 0xE7, 0x3A, 0xE4, 0xE8, 0xD9, 0x13, 0xFB, 0x79, 0x7F, 0x9E, 0xD0, 0xB3, 0xF5, 0x6A, 0xE9, 0x44, 0x35, 0x8B, 0xE1, 0xF4, 0x50, 0x4A, 0xE4, 0x1F, 0x74, 0x81, 0x7A, 0xE6, 0x43, 0x30, 0xC6, 0x3, 0x5B, 0x70, 0xCB, 0x9A, 0xDD, 0x8, 0x92, 0xC5, 0x31, 0x8C, 0x7D, 0x5, 0x20, 0x6, 0x68, 0x37, 0x60, 0x94, 0x69, 0xA5, 0xF0, 0x4C, 0xC2, 0xC, 0x1C, 0x68, 0x79, 0xB2, 0x92, 0x7, 0x7E, 0x51, 0xB6, 0xD9, 0x71, 0x9D, 0x8C, 0x12, 0x8F, 0x61, 0xD2, 0x87, 0x70 }
        },
        new TestVector
        {
            Key = new byte[] { 0xFB, 0x3C, 0x70, 0x9D, 0xA7, 0x6, 0xDE, 0x28, 0xC8, 0xA3, 0x4F, 0x3F, 0x84, 0xA9, 0xCD, 0x53, 0xD9, 0x30, 0xE3, 0x58, 0x3F, 0xE3, 0x5C, 0x76, 0x89, 0x57, 0x4C, 0x2, 0xD, 0x9B, 0x55, 0xAC },
            IV = new byte[] { 0x4, 0x10, 0x23, 0xFA, 0x34, 0x7A, 0x39, 0xF5, 0xCC, 0x58, 0xF0, 0x22, 0x8F, 0x71, 0xBC, 0xB3 },
            PlainText = new byte[] { 0x34, 0xB0, 0xB2, 0xFF, 0xD, 0x31, 0x47, 0x30, 0xE8, 0x9C, 0x5B, 0x3B, 0x33, 0xB2, 0x76, 0x16, 0x63, 0x25, 0x51, 0x25, 0x96, 0xAD, 0x98, 0xF5, 0x76, 0x58, 0xEE, 0x2C, 0x61, 0x22, 0x32, 0xC0, 0xC8, 0xC5, 0x0, 0x68, 0xD5, 0xD2, 0x7B, 0x50, 0x51, 0x1, 0x4A, 0x11, 0xC4, 0xC5, 0xE1, 0xE0, 0xDE, 0x24, 0x2, 0x5, 0x15, 0xC6, 0x83, 0x90, 0x90, 0x4C, 0x51, 0x47, 0x44, 0xE3, 0xB5, 0xE2, 0x5D, 0x18, 0xD6, 0x7B, 0xDF, 0xEE, 0x80, 0x40, 0x8D, 0x2D, 0x23, 0x6B, 0xA, 0xFE, 0x1F, 0x74, 0x3E, 0xB5, 0x3E, 0x84, 0xFB, 0xEE, 0x82, 0x2E, 0xE0, 0xDB, 0x22, 0x5A, 0x7E, 0xDC, 0xCF, 0x81 },
            CipherText = new byte[] { 0xB5, 0xA6, 0x5E, 0x7F, 0x46, 0x9, 0xA4, 0xD2, 0x6F, 0x24, 0xF6, 0xF3, 0x7F, 0xC9, 0x84, 0x95, 0x69, 0x90, 0xD, 0x2B, 0xBE, 0x63, 0x24, 0xAE, 0x8F, 0x89, 0x7A, 0x6B, 0xE1, 0x47, 0xD5, 0x31, 0x2B, 0xD9, 0xAE, 0xE5, 0x2A, 0xA, 0x26, 0xFB, 0xC6, 0x63, 0x8D, 0x9F, 0x41, 0x6, 0x58, 0xD2, 0x57, 0x75, 0x20, 0xF8, 0x35, 0xB5, 0xF7, 0xB2, 0xE9, 0x95, 0xFF, 0xCF, 0xDA, 0x3E, 0x61, 0xB6, 0x8E, 0xE8, 0x41, 0xCC, 0x19, 0x5C, 0xDA, 0xB9, 0x53, 0x1, 0xE1, 0x7D, 0x50, 0x3B, 0x46, 0xD5, 0x26, 0x73, 0x26, 0xCF, 0x14, 0xE8, 0x66, 0x5D, 0x1C, 0xD, 0xBA, 0xAD, 0x53, 0xBB, 0x75, 0xDB }
        },
        new TestVector
        {
            Key = new byte[] { 0xBA, 0x50, 0x3B, 0x20, 0x72, 0xAC, 0xDC, 0x66, 0x64, 0xCA, 0xEE, 0x30, 0x4B, 0x83, 0xB7, 0x38, 0x4A, 0x7F, 0xE, 0x89, 0x8E, 0x4C, 0x1E, 0x37, 0x30, 0xAE, 0x68, 0x4C, 0x58, 0x36, 0x7, 0x5 },
            IV = new byte[] { 0xA8, 0x16, 0x38, 0x3F, 0xD8, 0x34, 0x19, 0x2C, 0x9D, 0x7D, 0xB1, 0x4A, 0xD0, 0x7C, 0x31, 0x96 },
            PlainText = new byte[] { 0xCC, 0x2B, 0x79, 0xFD, 0x18, 0x9, 0xDE, 0x13, 0x46, 0x6C, 0x2B, 0x7, 0x1A, 0x19, 0xE5, 0xD7, 0xEF, 0x12, 0xD4, 0xC0, 0x57, 0xAF, 0xBE, 0xF9, 0x2, 0xF0, 0x76, 0xA0, 0xE1, 0x12, 0x16, 0xF5, 0x8A, 0x60, 0x88, 0xC6, 0xDF, 0x4C, 0x4B, 0x2A, 0xEA, 0xBE, 0x73, 0x72, 0xC, 0xAC, 0xF2, 0x5D, 0x57, 0xEB, 0x17, 0x8B, 0x38, 0x45, 0x54, 0x34, 0x59, 0xCB, 0x44, 0x1A, 0xC5, 0x6C, 0xEC, 0xBC, 0x4E, 0xC7, 0x42, 0xCD, 0x2C, 0x3E, 0xEB, 0xE4, 0xE6, 0x4C, 0x49, 0x75, 0x76, 0x18, 0xB5, 0x0, 0xA8, 0x4A, 0x9, 0x88, 0xC3, 0x1D, 0x62, 0x47, 0x6B, 0xB5, 0x24, 0xA0, 0xC6, 0xB4, 0x3E, 0x55, 0xDE, 0x8, 0xAF, 0xFA, 0x46, 0x6, 0x49, 0xAA, 0x1, 0xBD, 0xB4, 0xF8, 0x9F, 0x84, 0xB7, 0x28 },
            CipherText = new byte[] { 0xA0, 0x6, 0xC1, 0xAA, 0x97, 0x8, 0x5B, 0x21, 0x12, 0x9C, 0xF3, 0xF3, 0xE4, 0x2F, 0x8, 0xB8, 0x38, 0xD5, 0x49, 0x8C, 0x5D, 0x65, 0xDE, 0x1A, 0xD, 0x6A, 0x42, 0x1D, 0xC2, 0xF9, 0xAE, 0xE2, 0x2, 0xDE, 0xC2, 0x32, 0x19, 0x28, 0xC1, 0xD1, 0x3C, 0xB5, 0x5F, 0xDF, 0x90, 0x80, 0xC3, 0x54, 0xAB, 0x84, 0x17, 0xEC, 0xC, 0x93, 0x63, 0x27, 0x35, 0x53, 0xCD, 0x8, 0xE7, 0x9F, 0x3B, 0xBF, 0x6C, 0x7, 0xDC, 0xE7, 0xC8, 0xA7, 0x24, 0x86, 0xD7, 0x33, 0xBE, 0xF5, 0x77, 0x38, 0x9E, 0x44, 0x69, 0x69, 0xAD, 0xF6, 0x31, 0x7B, 0x33, 0x5B, 0x9, 0x15, 0x2, 0x79, 0x87, 0x9B, 0x35, 0x1C, 0xF4, 0x6B, 0x83, 0x46, 0xDB, 0xF1, 0xFE, 0x43, 0x1B, 0x16, 0xA4, 0x2F, 0x21, 0xD, 0xC, 0x27 }
        },
        new TestVector
        {
            Key = new byte[] { 0xA9, 0xD6, 0xB3, 0xA0, 0x3F, 0x60, 0x70, 0x99, 0x0, 0x57, 0x1C, 0x1A, 0x2A, 0xF, 0x91, 0x27, 0x2, 0xCA, 0xD7, 0x36, 0x77, 0xCE, 0xEA, 0xE2, 0x2, 0xBA, 0xBD, 0xE3, 0xD0, 0x19, 0x7E, 0x3E },
            IV = new byte[] { 0x23, 0x38, 0x1C, 0xB9, 0xF6, 0x35, 0x7, 0x92, 0xE0, 0x59, 0x37, 0x70, 0x3A, 0xA7, 0x6F, 0x9A },
            PlainText = new byte[] { 0x84, 0xB5, 0xC3, 0x67, 0x5, 0xBB, 0x58, 0xF6, 0xB2, 0xEA, 0x6B, 0x1E, 0x51, 0xFF, 0x94, 0xA8, 0xDE, 0x17, 0x4C, 0xBC, 0x2E, 0xC5, 0xAE, 0x9A, 0xD2, 0x62, 0x7A, 0x8B, 0x3E, 0xA4, 0x5F, 0x16, 0x2B, 0x72, 0x7A, 0x76, 0x39, 0xF7, 0x1A, 0x4C, 0xD9, 0xF6, 0xC6, 0x92, 0x6A, 0x5D, 0x81, 0xD0, 0xA2, 0x1C, 0x4C, 0x92, 0x30, 0x37, 0xED, 0x19, 0x9F, 0x1A, 0xEF, 0x51, 0x7E, 0x2E, 0xEA, 0x3, 0xBE, 0xA9, 0x4, 0x4C, 0x5B, 0xAA, 0xB8, 0x4E, 0x3F, 0x85, 0xD6, 0x25, 0x63, 0x5B, 0xCB, 0x1C, 0x37, 0xEF, 0x23, 0x21, 0x44, 0xB4, 0x4C, 0x77, 0xF, 0x2B, 0x9D, 0xAB, 0x41, 0x6B, 0x96, 0xC9, 0x6, 0x1, 0x6A, 0xCF, 0xB3, 0xFB, 0xBA, 0x62, 0xAB, 0x40, 0xA4, 0xC0, 0x83, 0x23, 0xFC, 0xF6, 0x64, 0x37, 0xD9, 0x53, 0xB1, 0x64, 0x54, 0x1C, 0xEA, 0x3A, 0x8C, 0x81, 0xD1, 0x86, 0xEE, 0xD0 },
            CipherText = new byte[] { 0x54, 0x2B, 0x84, 0x82, 0xBD, 0x55, 0x9C, 0x4D, 0xC6, 0x51, 0x8A, 0xE5, 0x5D, 0x47, 0x5C, 0x59, 0xBD, 0x3F, 0xA7, 0x89, 0xC4, 0x78, 0x82, 0x95, 0xC9, 0x7E, 0x8B, 0xDA, 0xC4, 0x20, 0x29, 0x46, 0x2D, 0xA0, 0xDA, 0x36, 0xFB, 0x6A, 0x50, 0x29, 0xED, 0xEE, 0xD9, 0x9D, 0x5, 0x7F, 0xBB, 0x6, 0xCB, 0x93, 0xC9, 0x5E, 0x14, 0xDE, 0x5C, 0xBC, 0xFD, 0x37, 0x5D, 0x22, 0x2, 0xD1, 0x97, 0x7A, 0x8E, 0xEF, 0xAB, 0xD7, 0xDE, 0xC, 0xEC, 0xEF, 0x25, 0x95, 0x9A, 0xDE, 0x39, 0x90, 0x17, 0x10, 0x1D, 0x89, 0x8E, 0x11, 0xAB, 0x2F, 0xFA, 0xB2, 0x75, 0x13, 0xA1, 0xB6, 0x3A, 0x94, 0x77, 0xD4, 0x83, 0xAA, 0x30, 0x8D, 0x9B, 0xBD, 0x3D, 0xD7, 0xA1, 0xC0, 0x87, 0xC8, 0x2D, 0xED, 0xB5, 0x1D, 0x60, 0xCF, 0x1C, 0xFD, 0x73, 0x31, 0x41, 0xA7, 0x14, 0x48, 0x60, 0x13, 0x84, 0x34, 0x8A, 0x8E }
        },
        new TestVector
        {
            Key = new byte[] { 0xCB, 0x23, 0xB3, 0xE9, 0x88, 0x13, 0xA9, 0xF2, 0xE6, 0xCE, 0x37, 0x4C, 0x13, 0xDA, 0x9B, 0xC5, 0xF2, 0x9C, 0x77, 0xF, 0xC1, 0x6E, 0x8C, 0x71, 0xF8, 0xF2, 0xC5, 0xBC, 0x74, 0xA5, 0x77, 0x81 },
            IV = new byte[] { 0xD4, 0xB7, 0xE7, 0x81, 0x24, 0x1A, 0xD, 0x65, 0xB9, 0xD9, 0x97, 0xAF, 0x5B, 0xAB, 0x31, 0xF1 },
            PlainText = new byte[] { 0xAA, 0xC8, 0x4, 0x3C, 0xBA, 0xFB, 0x7C, 0xDC, 0x1, 0xF8, 0x4F, 0x42, 0x73, 0xF1, 0xBB, 0x42, 0xEB, 0x64, 0xF, 0x7F, 0xCD, 0x37, 0x6C, 0x23, 0xE9, 0x6, 0xCD, 0xD3, 0xA3, 0xBC, 0x45, 0xE2, 0x51, 0x60, 0x88, 0xC4, 0xE5, 0x32, 0xAD, 0xC6, 0xCC, 0xF7, 0x32, 0xFD, 0x16, 0x91, 0x41, 0x7C, 0xD6, 0xD2, 0x31, 0xCA, 0xCC, 0x92, 0x50, 0x94, 0x41, 0xFF, 0xE0, 0x9E, 0x33, 0x35, 0x5F, 0xFF, 0xB2, 0xF, 0xC, 0x8E, 0x8A, 0x3C, 0xA6, 0x98, 0x22, 0x95, 0x77, 0xD4, 0xA4, 0xAD, 0x91, 0x98, 0x5E, 0xAA, 0x58, 0x4C, 0x69, 0x54, 0x40, 0x20, 0x88, 0x6C, 0xD8, 0xFA, 0x52, 0x3F, 0x8, 0xB2, 0x94, 0x7B, 0x96, 0x82, 0xF1, 0x40, 0xEF, 0xB8, 0xCB, 0x7A, 0x25, 0xAE, 0x67, 0x6F, 0x34, 0xFC, 0x4B, 0x94, 0x89, 0xEC, 0xEB, 0xA5, 0xC5, 0x2F, 0x85, 0xF4, 0xBE, 0xCE, 0x4A, 0x2, 0xC6, 0x63, 0xBE, 0x4C, 0x31, 0x88, 0x61, 0x67, 0x11, 0x90, 0x8F, 0x4F, 0x44, 0x75, 0xA5, 0xFD, 0xB1, 0x12 },
            CipherText = new byte[] { 0xBF, 0xF4, 0xE1, 0x45, 0xDB, 0x1B, 0xC9, 0x69, 0x57, 0x4F, 0xD4, 0x8F, 0x0, 0xE, 0xCB, 0x5F, 0x65, 0x25, 0x15, 0xCF, 0xFC, 0x37, 0x69, 0xE6, 0x55, 0x39, 0x8C, 0xEE, 0x93, 0x74, 0x25, 0x3C, 0xA0, 0xAF, 0xF8, 0x23, 0xA9, 0xC3, 0xDE, 0x1C, 0x5B, 0xBD, 0x21, 0xD2, 0xED, 0x27, 0xF1, 0x60, 0xCC, 0xEA, 0x76, 0x1E, 0x93, 0xC5, 0xFC, 0xD4, 0x92, 0x11, 0x8B, 0x1C, 0xDB, 0xA5, 0x61, 0xCF, 0x13, 0xF2, 0x61, 0x50, 0xF9, 0x9C, 0x2E, 0x2E, 0xB2, 0xCA, 0xB0, 0x85, 0x6E, 0xF2, 0xFD, 0x3A, 0xBD, 0xC5, 0x3, 0x71, 0x33, 0x13, 0x92, 0x57, 0xCB, 0x95, 0xC1, 0x15, 0xAE, 0xB2, 0x35, 0x92, 0xC8, 0x2F, 0x91, 0xC4, 0x31, 0x71, 0xAB, 0xD4, 0xA7, 0x4E, 0x30, 0x34, 0xBE, 0x5A, 0x19, 0xFE, 0xBA, 0xA6, 0xB6, 0x93, 0x2C, 0xBF, 0xA5, 0x1, 0x10, 0x42, 0x7E, 0xF3, 0xEA, 0x6E, 0xC, 0xE6, 0xAC, 0x53, 0x4C, 0xEA, 0x36, 0x7F, 0xD5, 0x35, 0x4, 0x14, 0x18, 0x4A, 0x43, 0xFF, 0xE2, 0x4C }
        },
        new TestVector
        {
            Key = new byte[] { 0x65, 0x37, 0xCE, 0x92, 0x9C, 0xAC, 0x66, 0x29, 0x1, 0x40, 0x99, 0x2, 0x61, 0xA5, 0x24, 0x78, 0xF9, 0x2B, 0xE2, 0x88, 0x24, 0xD9, 0x93, 0x86, 0x36, 0xBC, 0xDD, 0x10, 0xA7, 0x7F, 0x90, 0x41 },
            IV = new byte[] { 0x74, 0x3C, 0x2E, 0x26, 0xC2, 0x92, 0xAB, 0x76, 0xC4, 0xF8, 0x71, 0x7D, 0xE0, 0x50, 0xA7, 0x5A },
            PlainText = new byte[] { 0xD, 0xC0, 0xB3, 0x6A, 0x80, 0xBD, 0xFD, 0x4, 0x87, 0x68, 0xF6, 0x67, 0xB5, 0x1E, 0x5A, 0xF0, 0x3F, 0x4A, 0xB2, 0x91, 0xA6, 0x7E, 0x1C, 0x7E, 0x96, 0xC3, 0x4E, 0x29, 0xF, 0x2D, 0xD9, 0x71, 0xC2, 0xB2, 0xAB, 0x16, 0xBE, 0x3B, 0xD8, 0x71, 0x4B, 0xFC, 0x9A, 0x62, 0x16, 0x1, 0x96, 0x89, 0x8F, 0xA, 0x60, 0xB9, 0x90, 0x99, 0x42, 0xA9, 0x3F, 0x49, 0x39, 0xED, 0x35, 0x61, 0x41, 0x25, 0xE0, 0xA9, 0xD2, 0x75, 0x25, 0x7D, 0xAB, 0x35, 0x4A, 0x1F, 0xCE, 0xE9, 0x14, 0x52, 0xCC, 0x73, 0x2C, 0x24, 0x42, 0x87, 0xC7, 0xB, 0xA4, 0x60, 0x86, 0x33, 0x39, 0xB1, 0x9B, 0x17, 0x67, 0xDF, 0x2E, 0x4F, 0x31, 0x6D, 0xFF, 0xA8, 0xFE, 0xB8, 0x4C, 0x7A, 0x9C, 0xE4, 0xF5, 0x36, 0x84, 0x16, 0xDE, 0x3F, 0x60, 0xE3, 0x95, 0xFB, 0xCA, 0x9, 0x35, 0x29, 0x57, 0x5D, 0x8A, 0x75, 0xD4, 0x5, 0x75, 0x49, 0xCF, 0xE7, 0x92, 0xE7, 0x5A, 0x61, 0x19, 0xB5, 0xB, 0x3B, 0x2, 0xD7, 0x47, 0xDA, 0x6D, 0x3, 0xC0, 0xB6, 0x40, 0x91, 0x3D, 0xE, 0x12, 0xD2, 0x9A, 0xDA, 0x48, 0xA3, 0xF, 0x1 },
            CipherText = new byte[] { 0xC5, 0xB7, 0xED, 0xE4, 0xF3, 0xB7, 0xCD, 0xC2, 0xAA, 0x55, 0xD, 0xC1, 0xB0, 0xEF, 0x71, 0xE9, 0x80, 0x8F, 0xD2, 0xB7, 0x61, 0x45, 0xA6, 0x45, 0xF5, 0x65, 0x79, 0xBC, 0x17, 0xB2, 0xB8, 0xA0, 0x56, 0x2, 0x38, 0x49, 0xB6, 0xF7, 0xF5, 0x2E, 0x53, 0xD5, 0x8E, 0x2C, 0x6E, 0x6B, 0x49, 0xC9, 0x3A, 0xAB, 0xA4, 0xBE, 0x27, 0x3E, 0x9A, 0x56, 0x65, 0xD4, 0xCA, 0x94, 0x69, 0x74, 0x51, 0xA6, 0x8A, 0x72, 0x7A, 0x85, 0x9B, 0x9D, 0xD6, 0x61, 0x37, 0xF2, 0x55, 0x2F, 0x55, 0x99, 0x21, 0x43, 0x20, 0x3, 0x5E, 0xB0, 0xDC, 0xE1, 0x4E, 0x7B, 0xDA, 0x46, 0xBC, 0x14, 0xC2, 0xAB, 0xB7, 0x84, 0xE0, 0x7A, 0xBB, 0x1F, 0x4C, 0x22, 0x60, 0x11, 0x41, 0xCB, 0x9F, 0x50, 0x78, 0xA7, 0x13, 0x68, 0xB5, 0x9F, 0xFB, 0x14, 0x78, 0xEA, 0x14, 0x5A, 0xA7, 0x71, 0x31, 0x84, 0x1C, 0x1D, 0xF3, 0xC5, 0xC5, 0xCF, 0x5A, 0x1C, 0xE8, 0x82, 0xE5, 0xD0, 0xA7, 0x4B, 0x39, 0xD9, 0x96, 0x6D, 0xB5, 0x28, 0x3E, 0xFF, 0x2C, 0x65, 0x5C, 0x3, 0xDD, 0xBD, 0x22, 0x6E, 0x8, 0x7D, 0x3A, 0x5F, 0xF1, 0x95 }
        }
    };
    private readonly TestVector[] Lea192OfbTestVectors =
    {
        new TestVector
        {
            Key = new byte[] { 0xC3, 0x37, 0x80, 0x67, 0x61, 0x96, 0xFB, 0x72, 0x9, 0x84, 0xC1, 0xB3, 0xCD, 0xDA, 0x14, 0xEF, 0xB4, 0x94, 0xDA, 0xA, 0x60, 0xDD, 0x59, 0xBF },
            IV = new byte[] { 0xEE, 0x6C, 0x3F, 0x94, 0x1E, 0x13, 0xE5, 0xC, 0xB4, 0x95, 0xD4, 0x1E, 0x1E, 0xB9, 0x89, 0xE6 },
            PlainText = new byte[] { 0x56, 0x9C, 0x75, 0x9B, 0xA, 0x4B, 0x48, 0xC1, 0xFB, 0x91, 0x6F, 0x9F, 0xA3, 0xE, 0xDB, 0xF4 },
            CipherText = new byte[] { 0x21, 0x4B, 0x19, 0x2F, 0x62, 0x14, 0x95, 0x50, 0x71, 0xC5, 0x14, 0xB6, 0xE, 0x6F, 0x32, 0x61 }
        },
        new TestVector
        {
            Key = new byte[] { 0x1A, 0x89, 0x5, 0xE6, 0x3A, 0x88, 0x2F, 0x3B, 0x2, 0x1D, 0xEC, 0xCB, 0x38, 0x2, 0xE2, 0x35, 0x52, 0xE8, 0xCF, 0xD2, 0x97, 0xD, 0xCA, 0xE7 },
            IV = new byte[] { 0x82, 0xD, 0xCC, 0x1F, 0x67, 0xFA, 0x6E, 0x38, 0x58, 0xAE, 0xF4, 0xFC, 0x4A, 0x60, 0x8B, 0x73 },
            PlainText = new byte[] { 0x74, 0x76, 0xCF, 0x57, 0xF8, 0x9A, 0x90, 0xC8, 0xC5, 0x10, 0xD6, 0x41, 0xBC, 0x47, 0x22, 0xCB, 0x12, 0xAE, 0xF7, 0x70, 0xF5, 0xC8, 0x99, 0xF3, 0x72, 0x83, 0x15, 0xBE, 0x96, 0xC6, 0x81, 0x1C },
            CipherText = new byte[] { 0x3C, 0x4B, 0x4, 0x22, 0xA5, 0xE2, 0x1A, 0xAC, 0x74, 0x14, 0x7F, 0xA1, 0x43, 0x9E, 0x8C, 0xD9, 0x94, 0x11, 0x12, 0x87, 0x99, 0x3F, 0x6F, 0x87, 0x41, 0x5F, 0x25, 0xE3, 0x29, 0x78, 0xE, 0xCA }
        },
        new TestVector
        {
            Key = new byte[] { 0xD3, 0x49, 0x85, 0xA8, 0xA6, 0xA9, 0x1B, 0x6, 0x77, 0xBC, 0x92, 0xD0, 0xC1, 0x22, 0xD9, 0xD3, 0x72, 0x1C, 0xFA, 0x7C, 0x95, 0xA1, 0xE5, 0x8D },
            IV = new byte[] { 0x2E, 0xAF, 0x6F, 0x14, 0x65, 0xE0, 0x9A, 0x9E, 0xE7, 0x3D, 0x17, 0xA8, 0x8A, 0x56, 0x9, 0x56 },
            PlainText = new byte[] { 0x30, 0x93, 0xC, 0x68, 0xED, 0xC5, 0x76, 0x69, 0x6C, 0x0, 0xDD, 0x29, 0x8E, 0xAD, 0xD9, 0x6E, 0x55, 0xDB, 0xA, 0xE7, 0x1, 0xD6, 0x5D, 0x61, 0x78, 0xFB, 0x8C, 0x3D, 0xEB, 0xCA, 0xE4, 0x22, 0xB7, 0x3D, 0x4B, 0xEF, 0x89, 0x58, 0x81, 0xF4, 0xC6, 0x2, 0xA6, 0x61, 0x2A, 0x13, 0xFD, 0xFE },
            CipherText = new byte[] { 0x3A, 0xC1, 0x31, 0xB5, 0x43, 0x3, 0x9D, 0xB3, 0x5C, 0x84, 0x65, 0x33, 0xC, 0x8A, 0x28, 0x2C, 0x44, 0x26, 0xFE, 0xC4, 0x34, 0xE2, 0x8D, 0x26, 0xB8, 0xB1, 0xB, 0x37, 0x0, 0xE2, 0x3, 0x29, 0x3B, 0x33, 0xCD, 0x4E, 0x6A, 0x6C, 0xD1, 0xB2, 0xF2, 0x7B, 0xFC, 0xA3, 0x25, 0xD6, 0xC4, 0xFC }
        },
        new TestVector
        {
            Key = new byte[] { 0xAF, 0xAE, 0xEF, 0x1D, 0xB0, 0xD1, 0x53, 0xCE, 0x4E, 0x2A, 0xEC, 0x51, 0x13, 0x2D, 0x33, 0xD1, 0xD5, 0x63, 0x57, 0x4F, 0xDD, 0x5, 0x83, 0xDC },
            IV = new byte[] { 0x49, 0xC9, 0x5F, 0xB, 0xAF, 0xFC, 0xD9, 0xA6, 0x3, 0xD1, 0x25, 0xA0, 0xBB, 0xF9, 0x2, 0x4B },
            PlainText = new byte[] { 0x30, 0x73, 0x40, 0xCB, 0x48, 0xA6, 0x7F, 0xCB, 0x52, 0xAD, 0x39, 0x6E, 0x31, 0xF2, 0x3, 0x88, 0xBD, 0xFE, 0xF, 0xF, 0x66, 0x8F, 0xF6, 0xCC, 0x1B, 0xEB, 0xB4, 0x56, 0x6A, 0x75, 0xF4, 0x41, 0xE8, 0x7E, 0x8F, 0x93, 0xD3, 0x5D, 0x4F, 0x77, 0xF6, 0xC2, 0xF8, 0x36, 0xCD, 0x47, 0x89, 0x62, 0xEA, 0x48, 0xBF, 0x55, 0x97, 0xF5, 0xDB, 0xDA, 0xBD, 0xA5, 0xA5, 0x29, 0x4, 0x6E, 0xB1, 0x19 },
            CipherText = new byte[] { 0xFD, 0x2A, 0x8B, 0x1C, 0xB, 0x5D, 0xFE, 0xAD, 0x27, 0x43, 0xFB, 0x1B, 0x20, 0x4B, 0x31, 0x91, 0x3C, 0x86, 0xB, 0x64, 0x6, 0x9E, 0x3F, 0x48, 0xC6, 0x8C, 0x5C, 0xC7, 0x39, 0xC2, 0x6A, 0x5D, 0x7D, 0x22, 0xF5, 0x4, 0xAA, 0x47, 0x60, 0xB, 0xCB, 0x1E, 0x3A, 0xB6, 0xC5, 0x5B, 0xF2, 0xB4, 0xC, 0x86, 0xD9, 0xF9, 0x90, 0x5A, 0x19, 0x0, 0xE5, 0x7C, 0x74, 0xB2, 0xD6, 0xB2, 0x79, 0x9A }
        },
        new TestVector
        {
            Key = new byte[] { 0x3C, 0xF2, 0xE1, 0x91, 0xFC, 0x7B, 0x2B, 0x3F, 0x88, 0x4B, 0x9C, 0x8D, 0xF8, 0x2D, 0x9D, 0xD1, 0x97, 0x50, 0x76, 0xC4, 0x8A, 0x55, 0x10, 0x36 },
            IV = new byte[] { 0xB2, 0xA7, 0xFF, 0x0, 0xD3, 0xB, 0xBF, 0x39, 0xF5, 0x78, 0x3E, 0xAD, 0xA, 0x28, 0x9B, 0x8A },
            PlainText = new byte[] { 0xD2, 0xEF, 0x2E, 0x5D, 0xFC, 0xCC, 0xC8, 0x3D, 0x8E, 0xBE, 0x3C, 0x46, 0x86, 0xD8, 0x1E, 0x4A, 0xC1, 0x98, 0xCA, 0xC2, 0x1D, 0x75, 0xA8, 0xB, 0xDB, 0xB7, 0xAF, 0xCF, 0x47, 0x8B, 0x28, 0xC1, 0x9A, 0x57, 0xB5, 0x8D, 0x1F, 0x4B, 0x91, 0xE, 0x95, 0x39, 0x19, 0xC2, 0xD5, 0xA6, 0x8C, 0x7C, 0xB4, 0x21, 0xF, 0x59, 0x2B, 0xD3, 0xF4, 0xF5, 0xB5, 0x58, 0x3B, 0xDF, 0xF9, 0xCD, 0x59, 0x4A, 0xA9, 0x2A, 0x39, 0x5, 0xAA, 0xD2, 0x81, 0xAD, 0x75, 0x69, 0x16, 0x21, 0xBD, 0xE6, 0xE2, 0x36 },
            CipherText = new byte[] { 0x7F, 0x62, 0x6E, 0x2, 0x60, 0x4D, 0xAF, 0x54, 0xA0, 0x48, 0xCB, 0xA8, 0x5F, 0xB0, 0xAC, 0x8, 0xCF, 0xB5, 0xA0, 0xB8, 0xCD, 0xE3, 0xC9, 0x2B, 0x71, 0x43, 0x47, 0xAF, 0x3B, 0x46, 0x2E, 0x63, 0x1, 0x51, 0xD2, 0xAA, 0xBE, 0xD0, 0x1C, 0xE1, 0x87, 0x86, 0xEB, 0x56, 0xCC, 0xCA, 0x9B, 0x2F, 0xB8, 0x6F, 0x26, 0x97, 0xB5, 0x7, 0x47, 0xA5, 0xF1, 0x53, 0x22, 0x8D, 0x19, 0xF9, 0xA, 0xA4, 0xDC, 0xB9, 0x78, 0xAA, 0xE5, 0xDF, 0xB, 0xD9, 0xF5, 0x9, 0xB8, 0x15, 0xC2, 0x5B, 0x26, 0xD7 }
        },
        new TestVector
        {
            Key = new byte[] { 0x52, 0xE9, 0xD5, 0xAC, 0x45, 0x4E, 0x29, 0x61, 0x4D, 0x2, 0xEB, 0xC5, 0x69, 0x15, 0xB7, 0x8E, 0xC7, 0x11, 0xC3, 0xAD, 0xE5, 0x8B, 0x1E, 0x80 },
            IV = new byte[] { 0xF6, 0xF7, 0x3A, 0x49, 0x87, 0xC1, 0xA9, 0xDF, 0x62, 0x99, 0x24, 0xA3, 0xB2, 0xE, 0xD1, 0xB6 },
            PlainText = new byte[] { 0x69, 0x5E, 0xC6, 0x69, 0xDF, 0x8C, 0xC9, 0xF5, 0xBB, 0xB4, 0x59, 0x6D, 0x17, 0x9C, 0xF3, 0xF0, 0xDF, 0x8B, 0x8E, 0x23, 0x7A, 0x5E, 0x68, 0xDE, 0xAD, 0xD8, 0x4, 0x26, 0xBC, 0x3A, 0x73, 0x5C, 0xD2, 0x13, 0xD4, 0xB3, 0xA2, 0x5A, 0x17, 0xE8, 0x4F, 0xBA, 0x6, 0x2D, 0x89, 0x2D, 0x85, 0x66, 0xFA, 0xCC, 0x18, 0x97, 0xE0, 0xE6, 0xA7, 0x9D, 0xFB, 0x4F, 0x7E, 0x1D, 0xA9, 0xFA, 0x98, 0xBB, 0x50, 0xCA, 0x1D, 0x8C, 0xFC, 0xA6, 0x29, 0xCD, 0x49, 0xCC, 0xCF, 0xD5, 0x84, 0x67, 0x5E, 0x48, 0xD, 0x63, 0xE2, 0x8E, 0xFF, 0x80, 0xEE, 0x83, 0x13, 0xA5, 0x99, 0x70, 0xC2, 0x78, 0xC7, 0x3B },
            CipherText = new byte[] { 0x34, 0xFE, 0x5B, 0x31, 0xB3, 0x33, 0xC8, 0x41, 0xBF, 0x5C, 0x4B, 0x48, 0xFE, 0x5, 0x30, 0x12, 0xFE, 0xEE, 0x5, 0x2E, 0x42, 0x35, 0x55, 0x51, 0x84, 0xE3, 0x5A, 0xEF, 0x93, 0x22, 0xBE, 0xFF, 0xCC, 0x4E, 0xF4, 0xFA, 0x1, 0xFD, 0x1A, 0x78, 0x7E, 0x4, 0x8A, 0xE6, 0x2C, 0x3C, 0x64, 0x34, 0x21, 0x86, 0x83, 0x36, 0x1F, 0x61, 0x87, 0x5A, 0x82, 0x4B, 0x6F, 0xC8, 0xC2, 0xD, 0xEA, 0x21, 0x9E, 0x42, 0x85, 0xCA, 0x7, 0x47, 0xA4, 0x21, 0x63, 0x57, 0x4, 0x82, 0x21, 0x3A, 0xAF, 0x43, 0xE5, 0xA6, 0xAE, 0x7D, 0x71, 0x7F, 0x7D, 0x2F, 0xE5, 0xB0, 0x55, 0x73, 0xD, 0x9C, 0xEE, 0x98 }
        },
        new TestVector
        {
            Key = new byte[] { 0xAA, 0x2B, 0xAA, 0xDA, 0x33, 0x98, 0x88, 0xD, 0x72, 0x91, 0xBE, 0x4D, 0x4E, 0x71, 0x5, 0xFF, 0xE1, 0xF7, 0xF4, 0xEE, 0x21, 0x55, 0xC6, 0xF8 },
            IV = new byte[] { 0xBF, 0x83, 0x5E, 0x8, 0x4F, 0xD9, 0x88, 0x44, 0xAA, 0xDD, 0x82, 0x87, 0x90, 0x5A, 0xBB, 0x11 },
            PlainText = new byte[] { 0x92, 0xB2, 0xDA, 0x7D, 0x2F, 0x74, 0x2, 0xF4, 0x3E, 0x31, 0x54, 0xA1, 0x8C, 0x8C, 0xB6, 0x64, 0xC5, 0x91, 0xD3, 0xCB, 0x98, 0x48, 0x63, 0x3E, 0x16, 0x89, 0xAD, 0x79, 0x5B, 0x11, 0x4A, 0x40, 0x71, 0xD6, 0x2B, 0x4D, 0x71, 0x98, 0xDE, 0x8E, 0xEB, 0xB9, 0xC, 0x8D, 0x88, 0x4E, 0x47, 0x30, 0xEE, 0x76, 0x2, 0xA2, 0xE4, 0xEB, 0xE1, 0x91, 0xB7, 0xD6, 0x34, 0x9A, 0xDC, 0xE8, 0xBE, 0x1, 0xD6, 0xA6, 0xBA, 0xA6, 0x5B, 0x4, 0x20, 0x34, 0xB2, 0x36, 0x24, 0x9C, 0x5F, 0xC3, 0xFF, 0xC2, 0x2, 0xDB, 0xF3, 0x75, 0x7D, 0xEA, 0x89, 0xA5, 0x55, 0x6D, 0x1E, 0xD0, 0x5B, 0x5, 0x9D, 0xBE, 0x8B, 0xC9, 0x8E, 0x6E, 0x34, 0xE1, 0x50, 0x50, 0x59, 0x51, 0xA2, 0xB5, 0x57, 0x12, 0x69, 0x83 },
            CipherText = new byte[] { 0x2A, 0xD3, 0xC3, 0x99, 0xDE, 0xCB, 0x5C, 0x1B, 0xFC, 0x13, 0x2, 0x4E, 0x22, 0xAD, 0x22, 0x7C, 0xD1, 0x86, 0x79, 0xEB, 0x1E, 0xC5, 0x8, 0x30, 0xEF, 0xAD, 0xFA, 0x41, 0x6E, 0xAB, 0x36, 0xBA, 0x8F, 0x6B, 0x4E, 0xC2, 0x40, 0x63, 0xC2, 0xFF, 0x9, 0xE5, 0x7A, 0xE0, 0x3, 0x8D, 0xE0, 0x10, 0x79, 0xFC, 0x71, 0x64, 0x1C, 0x54, 0xF7, 0x19, 0x21, 0xF1, 0x9F, 0xE7, 0x2E, 0x69, 0x98, 0xDC, 0xF8, 0x57, 0x90, 0x2A, 0xC3, 0x8F, 0xCF, 0x71, 0x56, 0x1A, 0x6, 0xBD, 0x85, 0x5, 0xD, 0xD4, 0x55, 0x9F, 0x41, 0x58, 0x34, 0x22, 0x4F, 0x81, 0x13, 0x18, 0x56, 0x8B, 0x46, 0x76, 0xC2, 0x10, 0x4B, 0x87, 0x6C, 0xF5, 0x3A, 0x8A, 0xD3, 0x3E, 0x57, 0x23, 0x25, 0x1A, 0x2A, 0x1F, 0x7D, 0x5D }
        },
        new TestVector
        {
            Key = new byte[] { 0xC9, 0x67, 0xAD, 0x2D, 0xA9, 0x6E, 0xE4, 0xE2, 0xB8, 0xF5, 0x73, 0x5, 0x1F, 0x90, 0x72, 0xDE, 0x56, 0xE8, 0xAF, 0x8F, 0x45, 0x56, 0xF6, 0x49 },
            IV = new byte[] { 0xA9, 0xB1, 0x90, 0xBF, 0xBA, 0x64, 0xA, 0xDB, 0xB, 0xC3, 0x38, 0xB0, 0xB1, 0x9F, 0x78, 0xB1 },
            PlainText = new byte[] { 0xA7, 0x17, 0x3B, 0x20, 0x71, 0xB2, 0xC2, 0xC9, 0x0, 0xAB, 0x26, 0xEF, 0xD6, 0x8C, 0x9B, 0x87, 0x6A, 0xFE, 0xF5, 0xA4, 0xCE, 0xE0, 0x6C, 0x33, 0x8F, 0x96, 0x9C, 0xE8, 0xDD, 0xA4, 0xD0, 0x78, 0xEB, 0x7B, 0x7F, 0x9, 0x99, 0x92, 0x17, 0xE6, 0x51, 0xB9, 0xFA, 0x78, 0x2E, 0xAB, 0xC6, 0x72, 0x64, 0xE2, 0xDA, 0x4B, 0xDC, 0xAF, 0x16, 0xF1, 0x1E, 0x89, 0xE1, 0xBC, 0x74, 0xA6, 0x71, 0xA0, 0x4C, 0xC8, 0x47, 0xA8, 0xDF, 0x5A, 0xF8, 0x9F, 0x10, 0xBB, 0x33, 0x10, 0x97, 0xDA, 0x0, 0x72, 0x5E, 0x3, 0x46, 0x9C, 0x2B, 0xF8, 0x90, 0x7F, 0x80, 0x44, 0x10, 0x13, 0xC0, 0xCC, 0xE5, 0x92, 0x92, 0xA7, 0x99, 0xE5, 0x8A, 0x2F, 0xEE, 0x5B, 0x7, 0x58, 0xDA, 0xA1, 0x57, 0x41, 0xD0, 0xEF, 0x22, 0x9, 0x41, 0x7F, 0x5, 0xE4, 0x63, 0x43, 0x7D, 0x6E, 0x31, 0xD7, 0x7, 0x3F, 0xB3, 0xB5 },
            CipherText = new byte[] { 0x39, 0x81, 0x7A, 0x22, 0x14, 0xC0, 0x26, 0x4B, 0x58, 0xBB, 0x8F, 0xDD, 0x2D, 0x66, 0xFC, 0xDB, 0x24, 0xD1, 0xA9, 0xB9, 0xD5, 0xF6, 0x25, 0xE4, 0xF6, 0x45, 0x7F, 0xB3, 0xD6, 0xD2, 0xFF, 0xF0, 0x8, 0x6A, 0x91, 0x45, 0x5A, 0x39, 0xE9, 0x51, 0x1C, 0xC2, 0xFB, 0x34, 0xE1, 0xF8, 0x4D, 0x64, 0xA1, 0x4D, 0xA1, 0x60, 0x26, 0xEF, 0xE, 0xFD, 0x17, 0xFE, 0xA1, 0x89, 0x42, 0x30, 0x8E, 0x6B, 0x84, 0xA5, 0x6F, 0x3A, 0xBD, 0xD1, 0x73, 0xF2, 0xEE, 0xB8, 0xD2, 0x4E, 0x6B, 0xB3, 0x6F, 0xA1, 0x44, 0xE0, 0xA2, 0x50, 0x73, 0x75, 0x5E, 0x88, 0x17, 0xB0, 0x3B, 0x8B, 0x1C, 0x7F, 0xFE, 0x2B, 0x82, 0x9A, 0xFB, 0x9F, 0x7C, 0x33, 0x80, 0x8C, 0x3E, 0xFF, 0xB6, 0x5E, 0xF, 0xDF, 0xB6, 0x7A, 0x97, 0x8E, 0x66, 0x6B, 0xF3, 0xB8, 0x37, 0x98, 0xA2, 0x5B, 0xDD, 0x50, 0xA8, 0xF6, 0x8F, 0x81 }
        },
        new TestVector
        {
            Key = new byte[] { 0x85, 0xBF, 0x7F, 0xA8, 0xE4, 0x3B, 0x80, 0x83, 0xFC, 0x39, 0xF6, 0x12, 0xB7, 0x9, 0xBE, 0x51, 0x76, 0x9D, 0xD4, 0xDC, 0xB0, 0x9B, 0x16, 0xA7 },
            IV = new byte[] { 0xDC, 0xAF, 0x4A, 0xEF, 0x92, 0x26, 0x63, 0x70, 0xED, 0xB9, 0x0, 0xD9, 0x33, 0xA6, 0x36, 0x7D },
            PlainText = new byte[] { 0xB8, 0x6, 0x8F, 0x4B, 0xFF, 0x5A, 0x52, 0x0, 0x23, 0x67, 0x5, 0x9B, 0x75, 0x44, 0x31, 0x11, 0x67, 0xB1, 0x65, 0x43, 0xA9, 0xAA, 0x7D, 0x2D, 0x91, 0x3C, 0x24, 0x60, 0xC0, 0x98, 0x98, 0xB2, 0x3, 0x66, 0xAE, 0x34, 0x77, 0x5B, 0x15, 0x64, 0xF1, 0xE, 0xDE, 0xA4, 0x9C, 0x7, 0x3C, 0xEB, 0xE4, 0x19, 0x89, 0xBB, 0x93, 0xF3, 0x8A, 0x53, 0x3A, 0xF1, 0xF4, 0x25, 0xD3, 0x38, 0x2F, 0x8A, 0xA4, 0x1, 0x59, 0xB5, 0x67, 0x35, 0x8E, 0xE5, 0xA7, 0x3B, 0x67, 0xDF, 0x6D, 0xD, 0xC0, 0x9C, 0x1C, 0x92, 0xBF, 0x3F, 0x9A, 0x28, 0x12, 0x4A, 0xB0, 0x7F, 0x77, 0x10, 0xB4, 0xAE, 0x82, 0x6E, 0x65, 0x80, 0x9B, 0xB6, 0x16, 0xF, 0x46, 0xEC, 0xF, 0x95, 0xA7, 0x35, 0x30, 0x7E, 0x45, 0x8C, 0xD7, 0xC2, 0xE, 0xB7, 0x4, 0x71, 0x9B, 0x79, 0xBB, 0x90, 0xB6, 0xA, 0xAA, 0x23, 0x19, 0xC4, 0xC, 0x8B, 0x79, 0x1F, 0xCD, 0x12, 0xC3, 0xDF, 0xEF, 0xC5, 0xA6, 0x8C, 0x2C, 0x82, 0x51, 0x23 },
            CipherText = new byte[] { 0x9B, 0x74, 0xEC, 0x51, 0xC7, 0x82, 0x45, 0x4D, 0x9, 0x74, 0xFD, 0x3, 0x8A, 0x29, 0x79, 0xA8, 0xEF, 0x11, 0x21, 0xC5, 0xA5, 0xDC, 0x1D, 0xA4, 0x4D, 0x35, 0x1E, 0xF1, 0x4A, 0x76, 0xF5, 0x8D, 0xE4, 0x5A, 0x2A, 0xFA, 0x69, 0xCB, 0xD5, 0xC4, 0x4B, 0x6D, 0x68, 0xA6, 0x26, 0xE6, 0x9B, 0x54, 0x91, 0x5E, 0x41, 0x36, 0xB3, 0xEA, 0xD1, 0xD7, 0x73, 0x56, 0x46, 0x97, 0xF2, 0xC0, 0x43, 0xCC, 0x36, 0xE8, 0xA9, 0xF6, 0x89, 0x81, 0x17, 0x56, 0x5C, 0x1A, 0xD5, 0x3B, 0x2, 0xA5, 0x97, 0xEF, 0xB5, 0x43, 0xA0, 0x70, 0xF5, 0x5A, 0xBD, 0x3B, 0x97, 0x6F, 0xDC, 0x96, 0x5A, 0xA0, 0xF4, 0xE7, 0x52, 0x5F, 0x47, 0x2C, 0x7F, 0x98, 0xE3, 0x17, 0xC0, 0x3, 0x28, 0xAA, 0x94, 0x58, 0xB2, 0x76, 0xBA, 0xDB, 0x9D, 0x3, 0xCF, 0x2E, 0xC6, 0xBE, 0x4E, 0x65, 0xE4, 0x8, 0x4, 0x4C, 0x3, 0x18, 0x81, 0x44, 0xDD, 0x9E, 0x99, 0x12, 0x23, 0xBA, 0xF2, 0x12, 0xB1, 0x33, 0xC5, 0xA1, 0x1A, 0x11 }
        },
        new TestVector
        {
            Key = new byte[] { 0xDD, 0x51, 0x7E, 0xB, 0x1A, 0xF7, 0xAF, 0x4A, 0x23, 0xC9, 0xB7, 0xF9, 0xFE, 0xBF, 0x7D, 0xF5, 0x62, 0xC9, 0xFD, 0xD8, 0xD4, 0x66, 0x8F, 0x28 },
            IV = new byte[] { 0x10, 0x72, 0x6C, 0xCE, 0xAA, 0x3F, 0x6E, 0xC9, 0xF5, 0xE8, 0x17, 0x23, 0x24, 0xE2, 0xD5, 0x24 },
            PlainText = new byte[] { 0xAF, 0xD4, 0x84, 0xC7, 0xF9, 0xA9, 0x35, 0x6A, 0x2F, 0xE3, 0x2E, 0xC9, 0x73, 0x32, 0x32, 0x2D, 0x3A, 0x45, 0x2, 0xE1, 0xF2, 0xE0, 0x23, 0xE6, 0xE9, 0x2F, 0xE2, 0xE7, 0x6A, 0x5A, 0x96, 0x6F, 0x29, 0x59, 0x25, 0x5A, 0xE0, 0xA, 0xC9, 0x8A, 0x3B, 0x80, 0x14, 0xDB, 0xF2, 0x9E, 0x32, 0x58, 0x34, 0xE5, 0x6F, 0xAF, 0x4C, 0x8B, 0xF8, 0xE2, 0x7F, 0xCD, 0xE6, 0x40, 0x33, 0x86, 0x78, 0x94, 0x57, 0xFF, 0xA0, 0x9C, 0xFE, 0x9, 0xC2, 0xBC, 0x4D, 0x49, 0xB8, 0xF4, 0x98, 0xD4, 0x19, 0x10, 0xC8, 0xFC, 0xBB, 0x1E, 0x0, 0x69, 0x76, 0x25, 0x80, 0x6B, 0x2B, 0x14, 0xC9, 0x8E, 0x5, 0xF9, 0x1, 0x6F, 0xFF, 0x73, 0x9A, 0xCF, 0xA7, 0x6A, 0x2F, 0xE6, 0x21, 0xFD, 0xAE, 0xF9, 0x6E, 0xBC, 0xBC, 0x2F, 0xEF, 0x18, 0x55, 0xA1, 0x24, 0x17, 0xB3, 0xB0, 0xBA, 0x4D, 0x72, 0x9B, 0xC5, 0x7, 0xF1, 0x51, 0x4A, 0xC9, 0xFB, 0x83, 0x0, 0xFB, 0xA7, 0xFE, 0x57, 0xDF, 0x7C, 0x38, 0xBA, 0xC6, 0xD9, 0x28, 0x11, 0x84, 0x94, 0x5B, 0x8B, 0x21, 0xE2, 0x45, 0x9A, 0xD1, 0x77, 0xD5, 0x3F, 0x26 },
            CipherText = new byte[] { 0xF5, 0x5E, 0x6D, 0x17, 0x25, 0x28, 0x99, 0x69, 0x1E, 0x22, 0xAA, 0xF0, 0x2B, 0x35, 0x4D, 0x30, 0xE2, 0x20, 0x8A, 0xB3, 0x9F, 0xAC, 0xDB, 0xCC, 0xFF, 0xDA, 0x12, 0xD, 0xD2, 0x84, 0x25, 0xFD, 0x9, 0xF8, 0x43, 0x41, 0x5D, 0xA4, 0x6, 0xE8, 0x66, 0x28, 0x64, 0x74, 0x68, 0x10, 0x46, 0x43, 0x31, 0x4B, 0x62, 0xDC, 0xB7, 0xF6, 0x4D, 0x69, 0x57, 0x7D, 0x95, 0x35, 0x2A, 0x84, 0x9B, 0x62, 0x1A, 0xA1, 0xF2, 0x22, 0xAB, 0xDD, 0x3B, 0x9D, 0x41, 0x4D, 0x53, 0xEC, 0x7C, 0x1, 0xAF, 0xA8, 0xC1, 0x9F, 0x7E, 0xB, 0xB8, 0x34, 0x64, 0x1C, 0x55, 0x77, 0x8B, 0xCA, 0x48, 0x59, 0xF, 0x88, 0xC3, 0xE5, 0x4A, 0xAC, 0xEC, 0xF9, 0x4, 0xEB, 0x15, 0xB2, 0xF2, 0x77, 0xB0, 0xE3, 0x15, 0x80, 0xA1, 0x41, 0xC, 0x4C, 0x8D, 0x43, 0x24, 0x64, 0x69, 0x11, 0x4A, 0xB4, 0xB, 0x9A, 0x3A, 0xB0, 0x8, 0xB3, 0x75, 0xB3, 0xC2, 0xF2, 0x29, 0x7B, 0xBD, 0x24, 0x4F, 0x62, 0x91, 0xB4, 0xD6, 0xCC, 0xF9, 0xF0, 0xB, 0x2B, 0xAB, 0x93, 0xBB, 0xE2, 0xFC, 0xEE, 0xEA, 0x6A, 0xC8, 0x59, 0x1, 0xEC }
        }
    };
    private readonly TestVector[] Lea128OfbTestVectors =
    {
        new TestVector
        {
            Key = new byte[] { 0x22, 0x98, 0xE5, 0x9E, 0x84, 0xCD, 0x71, 0xBC, 0x27, 0x30, 0xAB, 0x25, 0xEC, 0x28, 0x30, 0x8F },
            IV = new byte[] { 0xFC, 0x4A, 0xE, 0x65, 0x69, 0x72, 0x84, 0x77, 0x13, 0x13, 0xA, 0xF1, 0xC9, 0xCB, 0x91, 0x89 },
            PlainText = new byte[] { 0xB1, 0x3B, 0xC, 0xFD, 0xEA, 0x15, 0x2F, 0xBD, 0x6F, 0x76, 0x77, 0xE4, 0x3F, 0x77, 0x6A, 0x6D },
            CipherText = new byte[] { 0xB4, 0xBE, 0xBF, 0x4A, 0x20, 0xE, 0xD5, 0xA3, 0xC1, 0xBA, 0xFF, 0x2, 0xA8, 0xE0, 0x6B, 0xD0 }
        },
        new TestVector
        {
            Key = new byte[] { 0xBB, 0xFF, 0x20, 0xA4, 0x4F, 0xDB, 0x2, 0xDA, 0x54, 0x10, 0xD2, 0x5D, 0x35, 0x6F, 0xEC, 0xA8 },
            IV = new byte[] { 0xD1, 0x6B, 0xCB, 0xD6, 0x21, 0x28, 0xCE, 0x5D, 0x1B, 0xD4, 0x3C, 0xF8, 0xD6, 0x3A, 0x87, 0xE5 },
            PlainText = new byte[] { 0xEE, 0x94, 0xCD, 0x51, 0x2A, 0xA1, 0xA4, 0x11, 0x5C, 0xF8, 0x17, 0x92, 0x89, 0x9C, 0xEC, 0x13, 0x4A, 0xD0, 0x29, 0x11, 0x72, 0x2D, 0xD6, 0x3, 0xF1, 0xF1, 0x3, 0x48, 0xF9, 0x9A, 0xD, 0x5E },
            CipherText = new byte[] { 0x7, 0x2E, 0x4F, 0x8C, 0x29, 0xA3, 0xC8, 0x2E, 0x6A, 0x63, 0x97, 0xA9, 0xBE, 0x5B, 0x49, 0x47, 0x52, 0x14, 0x92, 0x1E, 0x75, 0x9E, 0x35, 0xEB, 0x36, 0x14, 0x6A, 0x92, 0x84, 0xEB, 0x6, 0x6D }
        },
        new TestVector
        {
            Key = new byte[] { 0x5F, 0xB4, 0x1E, 0x54, 0x43, 0xEF, 0xF3, 0x82, 0xF3, 0x74, 0xE2, 0x77, 0xD, 0x79, 0x1B, 0x33 },
            IV = new byte[] { 0xE4, 0x13, 0x2E, 0x97, 0x25, 0x4C, 0xCD, 0x19, 0xBB, 0x76, 0xD3, 0xBC, 0xEF, 0xBF, 0x86, 0x40 },
            PlainText = new byte[] { 0xD4, 0x5, 0x19, 0x95, 0xE2, 0xEB, 0x76, 0x96, 0xE1, 0x2C, 0x3A, 0xF4, 0x9, 0x2F, 0x0, 0x70, 0x67, 0xDC, 0xE2, 0x4E, 0x82, 0xAF, 0x3D, 0x6, 0x3F, 0xA, 0xB5, 0x3C, 0x2, 0xD0, 0x79, 0xF2, 0x16, 0x2F, 0xC8, 0xFD, 0x4F, 0xBD, 0xB5, 0xB5, 0xED, 0xC7, 0x27, 0xF1, 0xC4, 0xE5, 0x23, 0x33 },
            CipherText = new byte[] { 0x47, 0xD1, 0x91, 0xD0, 0x99, 0xF3, 0xD8, 0xAD, 0x50, 0x73, 0xD3, 0xD1, 0xBA, 0x2B, 0x4C, 0x70, 0x47, 0x4C, 0x46, 0x51, 0x29, 0x9F, 0xE7, 0x2C, 0xE8, 0xD3, 0x2B, 0x37, 0x8F, 0xA5, 0x81, 0x3E, 0xE8, 0x34, 0xB1, 0xF0, 0xA6, 0xB1, 0x5E, 0x7F, 0x7, 0xD0, 0x8B, 0x6B, 0xD8, 0xE7, 0x13, 0xAB }
        },
        new TestVector
        {
            Key = new byte[] { 0x9A, 0xD2, 0x4E, 0x1F, 0xD1, 0x7B, 0xAD, 0x32, 0x46, 0x56, 0xB0, 0xB0, 0x78, 0xF5, 0x6F, 0xDE },
            IV = new byte[] { 0xED, 0xDB, 0x33, 0x72, 0xD1, 0x8E, 0x38, 0x48, 0xE1, 0xEE, 0xB1, 0x56, 0x87, 0xC4, 0xD, 0xE2 },
            PlainText = new byte[] { 0x46, 0x9E, 0x79, 0xF2, 0x59, 0xDB, 0xA6, 0x5, 0x97, 0x2, 0xCC, 0x0, 0x9A, 0x58, 0xEF, 0x6B, 0x20, 0xB1, 0x61, 0xDD, 0xB1, 0x86, 0x88, 0xB5, 0x83, 0x48, 0xE1, 0xB, 0x9A, 0xF4, 0x45, 0xE7, 0x33, 0xE8, 0x6B, 0xB0, 0x63, 0xF5, 0xAF, 0xE7, 0xFC, 0xB5, 0x11, 0x15, 0xB0, 0x1E, 0x81, 0x1, 0x79, 0x58, 0x5A, 0x27, 0x38, 0xCC, 0x2C, 0x66, 0x9C, 0x7E, 0xBE, 0xF9, 0x45, 0x9C, 0x53, 0xA8 },
            CipherText = new byte[] { 0x15, 0x2B, 0x9E, 0x75, 0x7, 0x56, 0x7F, 0x48, 0x68, 0xD, 0xE0, 0x8D, 0xF7, 0x5F, 0x18, 0x69, 0xA9, 0x88, 0xFD, 0x40, 0x12, 0x63, 0xE6, 0x4F, 0x9B, 0x2F, 0xA9, 0x23, 0x8, 0xC3, 0x1F, 0x71, 0x6C, 0x5D, 0x94, 0x5A, 0x77, 0x9B, 0x5E, 0x12, 0xB3, 0x84, 0xD, 0xEA, 0x28, 0x1A, 0xD2, 0x23, 0xD4, 0xC, 0x83, 0x36, 0xD4, 0xAB, 0xBE, 0xA8, 0xA8, 0xF3, 0x36, 0x3B, 0xCC, 0xF2, 0x85, 0xCD }
        },
        new TestVector
        {
            Key = new byte[] { 0x29, 0x57, 0x2D, 0x3F, 0x37, 0xF1, 0x50, 0x40, 0x3B, 0x17, 0x88, 0xD5, 0x2, 0x72, 0xAD, 0x8 },
            IV = new byte[] { 0xBE, 0x79, 0x26, 0x36, 0xAB, 0x89, 0xAC, 0xC1, 0xF3, 0x37, 0x50, 0x6, 0xD0, 0xE5, 0xC0, 0x8F },
            PlainText = new byte[] { 0xF0, 0x93, 0xC6, 0x89, 0x1D, 0xF8, 0x11, 0x78, 0x1D, 0xD1, 0x38, 0x29, 0xD7, 0x7A, 0xFC, 0xE8, 0xB8, 0xBB, 0xCE, 0xF4, 0x55, 0xE4, 0x91, 0x30, 0x52, 0x1C, 0xA0, 0x1B, 0x82, 0xF6, 0x13, 0x2, 0x4F, 0x45, 0x3E, 0x75, 0x5D, 0x32, 0x7B, 0xF7, 0x6A, 0x8B, 0x2A, 0xF9, 0x79, 0x5E, 0xF5, 0xA, 0x2F, 0xC7, 0x59, 0x48, 0x7D, 0x6, 0x61, 0x1A, 0x7F, 0xD4, 0xB5, 0x21, 0xA4, 0xF8, 0xD4, 0x6B, 0x10, 0x15, 0x9E, 0xEA, 0x3E, 0xC6, 0x15, 0x25, 0xEA, 0xEC, 0x64, 0x2E, 0x2E, 0x47, 0x21, 0xD4 },
            CipherText = new byte[] { 0xBF, 0xFB, 0x61, 0x58, 0xF1, 0xD0, 0xF1, 0x32, 0x78, 0xC7, 0xD1, 0x8C, 0x9A, 0x5B, 0xE, 0xB1, 0x7E, 0xBA, 0xED, 0x4D, 0x5B, 0x61, 0x7D, 0x98, 0xC5, 0xE7, 0x11, 0xB7, 0xAC, 0x45, 0x38, 0xC, 0xFB, 0x9A, 0x7F, 0x39, 0xAC, 0x72, 0x77, 0x8C, 0x48, 0xCD, 0xC0, 0x47, 0xFB, 0x9C, 0x8C, 0x5E, 0xBA, 0x38, 0xC7, 0x1, 0xEE, 0x40, 0xD7, 0x53, 0x4D, 0x23, 0x6A, 0xD, 0xFE, 0x8, 0xB6, 0x8E, 0x21, 0x88, 0x29, 0xC0, 0xCC, 0xE4, 0xAE, 0x33, 0x2A, 0x38, 0x86, 0xBA, 0x3B, 0xED, 0x8F, 0xAE }
        },
        new TestVector
        {
            Key = new byte[] { 0xEB, 0x44, 0xCF, 0x19, 0x6A, 0x16, 0xA7, 0xE7, 0x43, 0x8, 0x98, 0xFE, 0x7E, 0x12, 0x8C, 0x31 },
            IV = new byte[] { 0xF9, 0xAA, 0xED, 0xD2, 0x9, 0xDC, 0x67, 0x6B, 0x64, 0x9D, 0xF0, 0xAE, 0x3F, 0x5D, 0x6, 0xAF },
            PlainText = new byte[] { 0xB3, 0xDB, 0x38, 0x51, 0x65, 0x3D, 0xE8, 0xFE, 0x66, 0x60, 0x4F, 0x9C, 0x58, 0x6D, 0xC2, 0xBC, 0xD3, 0xAD, 0x33, 0x14, 0x7, 0x9E, 0xFA, 0x2F, 0xA2, 0x46, 0xD6, 0x63, 0xF4, 0xC7, 0x2E, 0x4, 0x50, 0x34, 0x9D, 0xD7, 0xB6, 0xA3, 0xAE, 0xC9, 0xB0, 0x83, 0xE4, 0xE1, 0x7A, 0x30, 0xFE, 0x74, 0x65, 0xC5, 0x78, 0x98, 0x7D, 0x32, 0x55, 0xDA, 0x6A, 0x8E, 0x1C, 0x34, 0x94, 0xAE, 0x21, 0x39, 0x8B, 0xF6, 0x5, 0x93, 0xA5, 0x6F, 0x80, 0xAF, 0xE9, 0x1A, 0x5E, 0xB7, 0x2B, 0x84, 0xC8, 0xC1, 0x79, 0x9B, 0xC5, 0x46, 0xB6, 0xC0, 0x1, 0xD5, 0x85, 0x1D, 0xCC, 0x8, 0x69, 0x39, 0x65, 0xB8 },
            CipherText = new byte[] { 0x1B, 0xDE, 0xB3, 0xF4, 0x44, 0x56, 0x0, 0x9C, 0x6D, 0x84, 0x8C, 0x29, 0xB2, 0x7C, 0x8A, 0xD0, 0xDC, 0xFD, 0xA6, 0x71, 0x59, 0x45, 0x74, 0xA0, 0x87, 0x32, 0xFE, 0xC0, 0x82, 0x18, 0xA5, 0x0, 0x3D, 0x56, 0x92, 0xE6, 0x80, 0x33, 0x90, 0x84, 0xB9, 0xAA, 0x59, 0xF5, 0xC7, 0x3A, 0x41, 0xA3, 0xE1, 0x3C, 0xE6, 0x7C, 0x2A, 0xB2, 0x15, 0x66, 0x9A, 0xB8, 0x6C, 0x7D, 0x46, 0xB4, 0x2D, 0x99, 0x39, 0xEF, 0xBD, 0xDA, 0x4E, 0x79, 0x19, 0xB0, 0xB9, 0x4A, 0xE2, 0x76, 0x3D, 0x32, 0xFC, 0x4A, 0x94, 0xC2, 0x5C, 0xB9, 0x4C, 0x5A, 0xE3, 0xB4, 0xD0, 0xF6, 0xCB, 0xEB, 0x1A, 0xEA, 0xC3, 0xF4 }
        },
        new TestVector
        {
            Key = new byte[] { 0x2A, 0xC9, 0x79, 0x6D, 0x7A, 0xCA, 0xE7, 0x18, 0xD8, 0xCC, 0xC6, 0x5, 0xB5, 0x91, 0xA9, 0xB },
            IV = new byte[] { 0xD5, 0xD6, 0x21, 0x6, 0xF9, 0x71, 0x84, 0x87, 0xBB, 0x9C, 0xED, 0xC9, 0xB9, 0x91, 0x84, 0xE7 },
            PlainText = new byte[] { 0xF5, 0x57, 0x0, 0x4D, 0x7C, 0xDB, 0x6A, 0x6C, 0x46, 0x42, 0x23, 0xB3, 0x5E, 0x7E, 0x28, 0xBA, 0x42, 0x1F, 0x95, 0xC0, 0x8D, 0x6C, 0x68, 0x57, 0xD3, 0xB3, 0x88, 0x5E, 0xCD, 0xDD, 0x6, 0x30, 0xB6, 0x45, 0xA2, 0x1B, 0xF4, 0xCB, 0x91, 0x14, 0xFB, 0x24, 0x7D, 0xA8, 0x6F, 0x74, 0xCE, 0x36, 0x88, 0x1E, 0x28, 0x5C, 0xBB, 0xDA, 0x34, 0xAF, 0x97, 0x9, 0xA4, 0xAF, 0xED, 0x46, 0x71, 0xFA, 0x33, 0x3E, 0x67, 0xBF, 0x2A, 0xC1, 0xE4, 0x76, 0xBF, 0x19, 0xDD, 0xCE, 0x2F, 0x9A, 0x21, 0xE7, 0x6F, 0x7A, 0xE2, 0xC2, 0xCB, 0xE3, 0x71, 0xF6, 0xCD, 0x47, 0x49, 0xA4, 0x60, 0xF4, 0x4F, 0xAC, 0x35, 0xE8, 0x58, 0x21, 0x66, 0xE6, 0xEC, 0xFB, 0x5A, 0xC9, 0x4A, 0xC, 0xE8, 0x19, 0xAB, 0x36 },
            CipherText = new byte[] { 0x5F, 0x16, 0x95, 0xAA, 0x50, 0x5F, 0x9A, 0x43, 0x26, 0x22, 0x9B, 0x9B, 0x31, 0xB6, 0x6, 0xE, 0xE4, 0xBC, 0x1E, 0x3B, 0xC7, 0xD5, 0xD6, 0xEA, 0xAF, 0x9D, 0xB7, 0x15, 0x75, 0x69, 0xA7, 0xA8, 0xE6, 0xD3, 0x36, 0x94, 0xBD, 0xC8, 0x80, 0xFB, 0xFE, 0x5A, 0x18, 0xD2, 0x18, 0x9C, 0x2E, 0xA, 0xB5, 0x47, 0x2, 0xC2, 0x15, 0xB7, 0xBF, 0x9B, 0x9B, 0x6D, 0xD6, 0xEE, 0x4D, 0x2C, 0xF2, 0x9A, 0x93, 0xCD, 0x7, 0x88, 0x96, 0x6A, 0x1E, 0x32, 0x46, 0xBA, 0x52, 0xF9, 0xE, 0x28, 0x9C, 0xE5, 0x53, 0xB1, 0xCB, 0xC8, 0x5F, 0x6D, 0xF7, 0xB9, 0xD6, 0xA1, 0x14, 0x1C, 0x1B, 0xE3, 0x4F, 0x3A, 0x81, 0xA6, 0xCF, 0x1A, 0xEF, 0x7, 0xC2, 0x73, 0x12, 0x61, 0xE9, 0x26, 0x80, 0xB2, 0xBC, 0xBD }
        },
        new TestVector
        {
            Key = new byte[] { 0xBF, 0xDC, 0xCB, 0xDA, 0x5, 0xAE, 0xA6, 0x93, 0x3E, 0x14, 0x7F, 0x25, 0x70, 0xE, 0x27, 0xB0 },
            IV = new byte[] { 0x84, 0xEB, 0x7C, 0x2A, 0xF0, 0x61, 0x30, 0xB, 0x93, 0xDD, 0xCC, 0x4A, 0xE0, 0x18, 0xF4, 0x89 },
            PlainText = new byte[] { 0x3F, 0xEB, 0xEC, 0x8D, 0xB0, 0x64, 0x5B, 0xF0, 0xB2, 0x19, 0x4F, 0x1A, 0x63, 0xBC, 0x82, 0x6D, 0xE8, 0xF0, 0xDC, 0xC0, 0xF, 0x5B, 0x38, 0xF, 0x33, 0xFD, 0x6B, 0x70, 0x61, 0xC0, 0x82, 0x49, 0xB8, 0x50, 0x4C, 0xC1, 0x16, 0x2C, 0x19, 0x74, 0xF1, 0xFE, 0xC0, 0x6B, 0x82, 0x28, 0xE7, 0x4B, 0x29, 0x9F, 0x7E, 0xCC, 0xD, 0xFC, 0x8D, 0x6D, 0x3, 0xD0, 0x30, 0x67, 0xB1, 0x38, 0xDF, 0xDF, 0xF3, 0xB2, 0xF3, 0x5F, 0x7D, 0x2F, 0x66, 0x87, 0xC2, 0x6A, 0xDB, 0x0, 0x15, 0x77, 0xDE, 0xB2, 0xE, 0x9F, 0x6C, 0x37, 0x30, 0x6B, 0xB6, 0x8F, 0xC8, 0xFF, 0x22, 0x15, 0x18, 0xA9, 0x93, 0xB1, 0xB5, 0xBA, 0xEA, 0x50, 0x2E, 0x95, 0xCD, 0x91, 0xEE, 0x5, 0xA7, 0xC1, 0x64, 0xD4, 0xEF, 0xA, 0x61, 0x99, 0xAE, 0xE7, 0xC1, 0xD1, 0x3B, 0xDB, 0x4D, 0x31, 0x49, 0x63, 0xE0, 0x3B, 0x24, 0x29 },
            CipherText = new byte[] { 0x59, 0xBE, 0x86, 0x83, 0x13, 0x45, 0xF4, 0xB3, 0xDF, 0x66, 0xF4, 0x13, 0xCC, 0x5, 0xE6, 0x5A, 0x8D, 0xA0, 0xCD, 0x7E, 0x51, 0x55, 0x26, 0x12, 0xB4, 0xA6, 0x2F, 0xAD, 0x82, 0xF3, 0x5A, 0x8A, 0x32, 0xCA, 0xE7, 0xE4, 0x8A, 0x68, 0x28, 0xE8, 0xB1, 0x68, 0x28, 0xDC, 0x1C, 0x31, 0x64, 0xF2, 0x37, 0xF2, 0xAD, 0x70, 0xC6, 0x5E, 0x10, 0x86, 0x38, 0xFD, 0x83, 0x2A, 0xC7, 0x7B, 0x99, 0xFA, 0xA7, 0x6C, 0x9D, 0x4E, 0x3C, 0x60, 0x5B, 0x9F, 0x62, 0x61, 0x94, 0xED, 0x2D, 0xE4, 0x8B, 0x7C, 0x6F, 0x98, 0xE1, 0xCC, 0xD4, 0xAD, 0xB4, 0xC9, 0x79, 0x72, 0xCB, 0xA3, 0x6F, 0x18, 0x2E, 0x8A, 0x7F, 0xDF, 0x7F, 0xDE, 0xD8, 0xDB, 0x2D, 0xF3, 0x8E, 0x96, 0x1D, 0xDF, 0x23, 0x90, 0x89, 0x49, 0x9C, 0x82, 0x72, 0x50, 0x68, 0x7A, 0x25, 0xA1, 0x77, 0x35, 0x9B, 0xF6, 0xA0, 0x76, 0x55, 0xC4 }
        },
        new TestVector
        {
            Key = new byte[] { 0xC9, 0x10, 0x38, 0x7A, 0x71, 0x85, 0xD3, 0xFA, 0x3E, 0x78, 0x2C, 0x97, 0xB6, 0x65, 0xA3, 0xBB },
            IV = new byte[] { 0xE8, 0x34, 0x4A, 0xC6, 0x7, 0x55, 0xA5, 0xBB, 0x59, 0xF, 0xAE, 0x39, 0x4F, 0x15, 0x1C, 0xAE },
            PlainText = new byte[] { 0xF6, 0x5B, 0xE5, 0xC7, 0x8E, 0x27, 0x2, 0x2B, 0x77, 0x6B, 0x72, 0x68, 0x55, 0x52, 0x81, 0x2D, 0x6C, 0x19, 0x4A, 0xBB, 0x4C, 0x20, 0x7B, 0x96, 0xB3, 0x41, 0x58, 0x80, 0xAF, 0x60, 0x3, 0xA7, 0x3, 0x43, 0xFA, 0x1E, 0xCC, 0xA4, 0xE1, 0x8A, 0x64, 0x85, 0x82, 0x1E, 0x87, 0xC4, 0x12, 0xC9, 0xB4, 0xEF, 0xB5, 0xAD, 0xD6, 0x59, 0x45, 0xD4, 0x24, 0x6E, 0x4F, 0x1E, 0x46, 0x43, 0x5F, 0x7E, 0xB9, 0x72, 0x7E, 0x66, 0x74, 0x24, 0xF8, 0x80, 0xCC, 0x6F, 0x63, 0x9F, 0x95, 0xE3, 0xDC, 0xF5, 0x8A, 0x5F, 0x94, 0x86, 0xEF, 0x29, 0x8C, 0xDC, 0x74, 0x3E, 0x9C, 0xFD, 0x5D, 0xE7, 0xBA, 0x9A, 0xE0, 0x8D, 0x79, 0x89, 0xCE, 0xCE, 0xD0, 0x76, 0x76, 0xD1, 0x1D, 0xD5, 0xC7, 0xD6, 0x69, 0x1A, 0xB4, 0x11, 0xEE, 0x2D, 0xDD, 0xB8, 0xD6, 0x18, 0x6B, 0x5B, 0x46, 0x3, 0x3B, 0x74, 0x9B, 0x63, 0x40, 0x3F, 0xF4, 0x6E, 0x22, 0xCB, 0xF0, 0xD2, 0x2B, 0x51, 0xB9, 0xA6, 0x64, 0xC6, 0x41, 0xA1 },
            CipherText = new byte[] { 0xD0, 0x50, 0xF, 0xC3, 0x75, 0x62, 0xCB, 0x83, 0x8A, 0x20, 0x6C, 0x50, 0x11, 0x62, 0x9A, 0xD1, 0x91, 0xBD, 0xBC, 0x47, 0x42, 0x85, 0x90, 0x59, 0x7E, 0xFE, 0x37, 0x8B, 0x6D, 0x5, 0x22, 0x1E, 0xB, 0x90, 0x8D, 0x63, 0x62, 0xC9, 0x3A, 0x8E, 0xA6, 0xE7, 0x42, 0x5F, 0x3E, 0xED, 0x4F, 0xD9, 0x61, 0x5E, 0xD6, 0xDD, 0x58, 0xA0, 0x42, 0xC, 0xC, 0xF0, 0x47, 0xD2, 0xAD, 0x73, 0xA9, 0x60, 0x7B, 0xF5, 0x46, 0x53, 0x1E, 0xF3, 0xF3, 0x66, 0x80, 0x6F, 0x4E, 0x61, 0x5D, 0xFD, 0x0, 0xF8, 0xED, 0x26, 0x8, 0x43, 0x1E, 0x23, 0xD4, 0xC1, 0x83, 0x46, 0xE1, 0xD1, 0x5F, 0x86, 0xC1, 0x56, 0xC1, 0x8A, 0x7F, 0x64, 0x34, 0xDF, 0x94, 0xEF, 0x17, 0x6D, 0x18, 0xB8, 0xCC, 0xB5, 0x81, 0x3E, 0x95, 0x4E, 0xA9, 0xF6, 0xE2, 0xB3, 0x8A, 0xE3, 0xDF, 0xF4, 0x42, 0x83, 0xD1, 0x24, 0xFF, 0x68, 0xBE, 0x3A, 0x81, 0x71, 0xCC, 0xC, 0xE0, 0x61, 0xE, 0x9E, 0xD7, 0x6B, 0xFE, 0xBB, 0x24, 0xBD }
        },
        new TestVector
        {
            Key = new byte[] { 0xFB, 0xAC, 0xCB, 0x8A, 0xE8, 0x2D, 0xAE, 0xEF, 0xD0, 0x6A, 0x55, 0x1A, 0x2A, 0x11, 0x8B, 0x41 },
            IV = new byte[] { 0xA0, 0x2D, 0xF5, 0xFD, 0xB8, 0x43, 0xE0, 0xFD, 0xB3, 0x9A, 0x3E, 0xFC, 0xB6, 0xDA, 0xEA, 0xF0 },
            PlainText = new byte[] { 0x27, 0xD9, 0x34, 0x85, 0x5A, 0xB1, 0x99, 0xC9, 0x6D, 0x16, 0xD2, 0x29, 0x70, 0xE6, 0x11, 0x9C, 0xC9, 0x2, 0x87, 0x1E, 0xD7, 0x5D, 0x29, 0x60, 0xD6, 0x52, 0xB4, 0xBE, 0x3, 0x3B, 0xEE, 0x71, 0x0, 0x3F, 0x2F, 0x6, 0x79, 0x6B, 0x21, 0xE, 0x8, 0x4, 0xC4, 0x18, 0x56, 0x1C, 0xB5, 0xDC, 0x84, 0x64, 0xAF, 0xB9, 0xC9, 0x41, 0x52, 0x62, 0x5C, 0x22, 0x23, 0xD4, 0x94, 0x10, 0xD5, 0x8B, 0x4D, 0x87, 0xC7, 0xF5, 0x8F, 0x84, 0xCD, 0x27, 0x6A, 0xDF, 0x33, 0xCF, 0x24, 0xDB, 0xFF, 0x69, 0x97, 0xFC, 0x77, 0xB6, 0xD4, 0x18, 0xE3, 0x6A, 0xC, 0xB1, 0x94, 0x25, 0xB1, 0x82, 0x25, 0xA5, 0xD8, 0x58, 0x1, 0x3A, 0xE2, 0x23, 0x25, 0x7A, 0x5B, 0x4D, 0x28, 0x35, 0x22, 0x4A, 0x78, 0xAC, 0xCA, 0x71, 0xE6, 0xFD, 0x41, 0xA, 0x65, 0xE2, 0xAF, 0xA8, 0xE, 0x9B, 0xA1, 0xB9, 0x68, 0x29, 0x67, 0x5B, 0xE7, 0xBD, 0xBA, 0x71, 0xB2, 0x70, 0xA3, 0xF6, 0xA9, 0x34, 0x98, 0x92, 0xA7, 0xB, 0xE7, 0x6B, 0x4, 0x77, 0x58, 0x3E, 0x5F, 0x31, 0xD, 0xAE, 0x9A, 0x1D, 0xAE, 0xDC, 0x25, 0x7E },
            CipherText = new byte[] { 0x92, 0xB1, 0xBF, 0x31, 0x52, 0x5E, 0x2F, 0xDC, 0xA0, 0x2F, 0xFE, 0x25, 0x44, 0xAC, 0xE9, 0xD0, 0x21, 0xEF, 0xED, 0xF4, 0xC2, 0x23, 0xBF, 0x9, 0x6, 0x2D, 0x12, 0x17, 0xE2, 0x27, 0xA3, 0xFB, 0x4B, 0x3F, 0x59, 0x66, 0x56, 0xAE, 0x4, 0x9A, 0x38, 0x81, 0xA5, 0xF8, 0x3C, 0x26, 0x33, 0xC5, 0xD3, 0x93, 0x1C, 0x3D, 0x24, 0x22, 0x32, 0x8, 0x8C, 0x68, 0xC0, 0x9A, 0xA, 0x59, 0xCD, 0x98, 0xB6, 0xDD, 0x37, 0xD8, 0x92, 0x18, 0x5C, 0xED, 0xBF, 0xBD, 0x9C, 0xCE, 0x5A, 0xD5, 0x51, 0xCD, 0x4, 0x29, 0x8B, 0xDA, 0x6, 0x1D, 0x6A, 0x45, 0xD5, 0x63, 0x78, 0x8C, 0xDC, 0xA9, 0x6E, 0x7, 0xAA, 0x4F, 0xDC, 0xAC, 0x7E, 0x62, 0x65, 0xA, 0xF7, 0x69, 0x5C, 0x87, 0x70, 0x29, 0x86, 0x46, 0xCC, 0x45, 0xD9, 0x6D, 0x2C, 0xFE, 0x36, 0x5F, 0x40, 0xE2, 0x8C, 0x8, 0xC0, 0x65, 0x2B, 0x10, 0xBA, 0x93, 0xA5, 0xC6, 0x6B, 0x8E, 0x9, 0xB5, 0xF1, 0x38, 0x2A, 0x2D, 0xE6, 0x30, 0xAE, 0x67, 0xCD, 0xDC, 0xC9, 0x94, 0x6, 0xBE, 0xB5, 0x90, 0x3E, 0x3D, 0xF2, 0xD0, 0xAF, 0x7A, 0x89, 0x56 }
        }
    };

    [Fact]
    public void LEA256_OFB_Encryption()
    {
        // Arrange
        var cipher = new Lea.Ofb();

        for (var i = 0; i < Lea256OfbTestVectors.Length; i++)
        {
            TestVector testvector = Lea256OfbTestVectors[i];

            // Act
            cipher.Init(Mode.Encrypt, testvector.Key, testvector.IV);
            ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
            cipher.Reset();

            // Assert
            Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-256-OFB encryption test case #" + (i + 1));
        }
    }

    [Fact]
    public void LEA256_OFB_Decryption()
    {
        // Arrange
        var cipher = new Lea.Ofb();

        for (var i = 0; i < Lea256OfbTestVectors.Length; i++)
        {
            TestVector testvector = Lea256OfbTestVectors[i];

            // Act
            cipher.Init(Mode.Decrypt, testvector.Key, testvector.IV);
            ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
            cipher.Reset();

            // Assert
            Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-256-OFB decryption test case #" + (i + 1));
        }
    }

    [Fact]
    public void LEA192_OFB_Encryption()
    {
        // Arrange
        var cipher = new Lea.Ofb();

        for (var i = 0; i < Lea192OfbTestVectors.Length; i++)
        {
            TestVector testvector = Lea192OfbTestVectors[i];

            // Act
            cipher.Init(Mode.Encrypt, testvector.Key, testvector.IV);
            ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
            cipher.Reset();

            // Assert
            Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-192-OFB encryption test case #" + (i + 1));
        }
    }

    [Fact]
    public void LEA192_OFB_Decryption()
    {
        // Arrange
        var cipher = new Lea.Ofb();

        for (var i = 0; i < Lea192OfbTestVectors.Length; i++)
        {
            TestVector testvector = Lea192OfbTestVectors[i];

            // Act
            cipher.Init(Mode.Decrypt, testvector.Key, testvector.IV);
            ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
            cipher.Reset();

            // Assert
            Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-192-OFB decryption test case #" + (i + 1));
        }
    }

    [Fact]
    public void LEA128_OFB_Encryption()
    {
        // Arrange
        var cipher = new Lea.Ofb();

        for (var i = 0; i < Lea128OfbTestVectors.Length; i++)
        {
            TestVector testvector = Lea128OfbTestVectors[i];

            // Act
            cipher.Init(Mode.Encrypt, testvector.Key, testvector.IV);
            ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
            cipher.Reset();

            // Assert
            Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-128-OFB encryption test case #" + (i + 1));
        }
    }

    [Fact]
    public void LEA128_OFB_Decryption()
    {
        // Arrange
        var cipher = new Lea.Ofb();

        for (var i = 0; i < Lea128OfbTestVectors.Length; i++)
        {
            TestVector testvector = Lea128OfbTestVectors[i];

            // Act
            cipher.Init(Mode.Decrypt, testvector.Key, testvector.IV);
            ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
            cipher.Reset();

            // Assert
            Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-128-OFB decryption test case #" + (i + 1));
        }
    }
}
