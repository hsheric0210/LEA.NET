using static LEA.BlockCipher;

namespace LEA.Test.OpMode
{
	public class CfbModeTest
	{
		private readonly TestVector[] Lea256CfbTestVectors =
		{
		new TestVector
		{
			Key = new byte[] { 0xE5, 0x20, 0xD5, 0x38, 0x7E, 0x90, 0x1C, 0xDE, 0x54, 0xF3, 0x82, 0x3F, 0xBA, 0x63, 0x8A, 0x5E, 0xF8, 0x1A, 0x58, 0x60, 0xEE, 0x84, 0x73, 0x40, 0xFA, 0x98, 0xC9, 0xC4, 0x1C, 0x69, 0xF4, 0xB0 },
			IV = new byte[] { 0x58, 0xF8, 0xBB, 0x39, 0x5C, 0x4D, 0xDC, 0xBC, 0x63, 0xC6, 0x9, 0xB0, 0x59, 0xAE, 0x30, 0xDA },
			PlainText = new byte[] { 0x40, 0x11, 0xFF, 0xBF, 0xD2, 0xCF, 0xA8, 0x5F, 0x68, 0xF0, 0xE1, 0x20, 0x1A, 0x37, 0x2F, 0x9 },
			CipherText = new byte[] { 0x46, 0x35, 0x80, 0xC, 0xC, 0x70, 0x14, 0xCF, 0x48, 0x46, 0x62, 0x96, 0x12, 0xC8, 0x65, 0x48 }
		},
		new TestVector
		{
			Key = new byte[] { 0x28, 0xFA, 0x65, 0x30, 0x99, 0x31, 0x67, 0x76, 0x21, 0xCC, 0x34, 0x71, 0x48, 0x4A, 0x24, 0xAA, 0xC9, 0x87, 0x6E, 0x9, 0x38, 0xD5, 0xEC, 0x8D, 0xE8, 0x4F, 0x23, 0x40, 0xC, 0x6A, 0x7E, 0x6B },
			IV = new byte[] { 0x1C, 0xCD, 0xDA, 0x6, 0x7B, 0x63, 0x47, 0x72, 0x56, 0xAE, 0xD, 0x6B, 0xCF, 0x5E, 0xEE, 0x38 },
			PlainText = new byte[] { 0x5B, 0x22, 0xAB, 0x24, 0x68, 0xBE, 0xCA, 0x32, 0x44, 0x5E, 0x95, 0xD, 0x3A, 0x29, 0x66, 0x3E, 0xFE, 0x1A, 0x22, 0xA1, 0x4B, 0xB, 0x4, 0x1A, 0xCA, 0x13, 0x9C, 0x84, 0x36, 0x12, 0x17, 0xEA },
			CipherText = new byte[] { 0xAB, 0xD6, 0x97, 0xEB, 0x64, 0x18, 0x77, 0x82, 0xEC, 0x64, 0x8F, 0x7B, 0x70, 0x4B, 0x46, 0x1A, 0x5D, 0x1D, 0xE3, 0xF6, 0x72, 0x95, 0xB8, 0xFA, 0x83, 0x87, 0x65, 0x42, 0x92, 0x73, 0x47, 0x3 }
		},
		new TestVector
		{
			Key = new byte[] { 0xBE, 0x8A, 0xC0, 0xFA, 0xAA, 0xB1, 0xC7, 0xB6, 0x42, 0xC4, 0x41, 0x6D, 0xEB, 0x9D, 0x71, 0xEA, 0x94, 0x88, 0x46, 0xEB, 0x50, 0x53, 0x24, 0xD5, 0x44, 0xA4, 0xE8, 0xA5, 0xC4, 0x8F, 0x26, 0x2A },
			IV = new byte[] { 0xB9, 0x68, 0xB4, 0x72, 0x46, 0xD6, 0x6D, 0x82, 0xAB, 0x29, 0x2F, 0x49, 0x69, 0xEE, 0x26, 0xD7 },
			PlainText = new byte[] { 0xA7, 0xC0, 0x4D, 0xCB, 0xD4, 0x61, 0x31, 0xA, 0x8E, 0x9, 0xF9, 0xB7, 0xC2, 0xFD, 0xA3, 0x5F, 0x15, 0x64, 0x90, 0x73, 0x83, 0x56, 0x43, 0xFC, 0x46, 0x37, 0x66, 0x8A, 0xFA, 0x43, 0xD, 0x6D, 0xFE, 0x69, 0x3F, 0x28, 0x1D, 0x5D, 0xB3, 0x23, 0x6E, 0xE9, 0xD7, 0xA0, 0x78, 0x84, 0x16, 0xF0 },
			CipherText = new byte[] { 0x7A, 0x83, 0x91, 0x2A, 0xF9, 0xE7, 0x9F, 0x3D, 0x59, 0xE1, 0x2D, 0x9D, 0x2A, 0xA1, 0x73, 0xA, 0xA3, 0x4B, 0x5C, 0xB2, 0x16, 0x65, 0xF3, 0x29, 0x17, 0x10, 0xD6, 0xB1, 0xD8, 0x8A, 0x67, 0x25, 0x56, 0x3B, 0xB2, 0xC8, 0xFD, 0xD8, 0x93, 0x2E, 0xF5, 0x52, 0xF7, 0xE4, 0x67, 0xDD, 0xAE, 0xD5 }
		},
		new TestVector
		{
			Key = new byte[] { 0x9A, 0x25, 0x5B, 0xE7, 0xAB, 0x59, 0xD1, 0x8D, 0xDD, 0x94, 0xEE, 0x16, 0xE7, 0xC4, 0xAF, 0x15, 0x63, 0x2C, 0x25, 0xEC, 0x74, 0x70, 0x30, 0x87, 0xAD, 0xEC, 0x8B, 0x4A, 0x2E, 0x4A, 0x8, 0x47 },
			IV = new byte[] { 0x10, 0x54, 0x1D, 0xB5, 0x4, 0x6, 0xA0, 0x9D, 0x36, 0xE8, 0xCF, 0xD7, 0x78, 0x9B, 0x93, 0x35 },
			PlainText = new byte[] { 0x9C, 0xB1, 0x6, 0xFE, 0x21, 0xC2, 0x32, 0x9E, 0x13, 0xBB, 0x1C, 0x9B, 0x2C, 0x7A, 0x1, 0xCB, 0x3F, 0x98, 0xDF, 0xC5, 0xD7, 0x86, 0x37, 0x95, 0x1B, 0xDC, 0x11, 0xB4, 0xF4, 0xED, 0x42, 0x37, 0x72, 0x9F, 0xEA, 0x46, 0x6C, 0x7A, 0x40, 0xD0, 0x67, 0xFE, 0x92, 0x7D, 0xB9, 0x3A, 0x87, 0xE4, 0xEF, 0x9A, 0xA8, 0xFF, 0x6B, 0x1, 0x1E, 0xDB, 0x52, 0x17, 0xBD, 0x94, 0xA5, 0xE5, 0x42, 0x81 },
			CipherText = new byte[] { 0x5C, 0x61, 0xA9, 0x6E, 0xD0, 0x5D, 0x60, 0x72, 0xA3, 0x14, 0xF2, 0xEF, 0xFD, 0xB4, 0x1, 0x42, 0x54, 0x79, 0x10, 0xC1, 0x2B, 0xEF, 0xFB, 0x6E, 0x59, 0xD1, 0x63, 0x3, 0x6D, 0x1E, 0xEC, 0x46, 0x86, 0xB0, 0x47, 0x58, 0xDD, 0x43, 0xEF, 0xB8, 0xB1, 0x94, 0x41, 0xDF, 0xC6, 0xFB, 0xFF, 0xC0, 0xF9, 0xC4, 0x8F, 0x26, 0x58, 0xC, 0x60, 0x59, 0xC1, 0x19, 0x53, 0x8D, 0xDF, 0x78, 0xB7, 0xB6 }
		},
		new TestVector
		{
			Key = new byte[] { 0xAD, 0x9F, 0xD9, 0xAC, 0x9D, 0xC0, 0xE3, 0x85, 0x73, 0x5C, 0xF5, 0xD7, 0x1F, 0xB2, 0x24, 0xFA, 0xE7, 0x2, 0x80, 0x4B, 0xA, 0x9E, 0xDE, 0xD9, 0xA3, 0x42, 0xDB, 0x61, 0xD1, 0xA8, 0x1D, 0x7D },
			IV = new byte[] { 0x15, 0x58, 0xDC, 0x18, 0xFB, 0xBE, 0xA1, 0x25, 0xFD, 0x7E, 0x4E, 0x90, 0xA4, 0xC, 0x5F, 0x75 },
			PlainText = new byte[] { 0xF0, 0x77, 0x6F, 0x91, 0xFA, 0x85, 0xFE, 0xF6, 0xD8, 0x5, 0x71, 0x2, 0xC1, 0x61, 0x5A, 0x91, 0x71, 0x73, 0xFA, 0x72, 0xCF, 0x99, 0x5, 0x18, 0xCE, 0xC, 0xA4, 0x92, 0x91, 0x6D, 0xC0, 0xBE, 0xD2, 0xA1, 0x7E, 0xB9, 0x84, 0xDF, 0x6, 0x99, 0xB7, 0x7, 0x89, 0x5F, 0xBD, 0x36, 0x82, 0x27, 0x8B, 0x97, 0x3C, 0xA2, 0x61, 0x7C, 0x94, 0xC6, 0xAE, 0xAD, 0x0, 0xC4, 0x2E, 0xFF, 0xD0, 0x3B, 0x55, 0x29, 0xB4, 0xAB, 0xF0, 0xD4, 0x7F, 0x2C, 0xA, 0xF1, 0x2A, 0x60, 0xC, 0x4F, 0x1C, 0xA6 },
			CipherText = new byte[] { 0xBC, 0xBC, 0x90, 0x5C, 0xFA, 0x1E, 0xCA, 0x70, 0x5C, 0x1, 0x2B, 0xF9, 0x2D, 0xC5, 0x33, 0xB, 0xFE, 0x4B, 0xF6, 0x13, 0x67, 0xBA, 0x53, 0x81, 0x1E, 0x59, 0xC4, 0x3, 0x47, 0xE4, 0x73, 0xF6, 0xA5, 0x17, 0x9E, 0x66, 0xEE, 0xB9, 0x31, 0xA2, 0xC9, 0x6B, 0xC4, 0xB9, 0xF5, 0xE0, 0x38, 0x88, 0x72, 0x4F, 0x15, 0xF1, 0xCD, 0xB2, 0x26, 0x32, 0x20, 0x52, 0x14, 0x6C, 0x39, 0x3F, 0x25, 0xB1, 0xBE, 0xD6, 0x73, 0x22, 0x9A, 0x5F, 0x9A, 0x22, 0x4F, 0x9, 0xD7, 0x81, 0x5A, 0x8F, 0xC1, 0xAF }
		},
		new TestVector
		{
			Key = new byte[] { 0x29, 0x6D, 0xA8, 0x90, 0xF9, 0x8D, 0xD8, 0x98, 0x64, 0x9, 0x69, 0xE, 0xC2, 0xEA, 0x16, 0x55, 0x40, 0xB7, 0x1A, 0x4F, 0x86, 0x8B, 0xF0, 0x16, 0x97, 0x6A, 0x5D, 0xED, 0xF8, 0xD5, 0xB0, 0x76 },
			IV = new byte[] { 0x14, 0x9C, 0x49, 0x25, 0xDF, 0xF4, 0x58, 0xF4, 0xBA, 0xC9, 0xE7, 0x58, 0x97, 0x56, 0x1B, 0x74 },
			PlainText = new byte[] { 0x5D, 0xF2, 0xB6, 0x8D, 0x8E, 0x2D, 0xE1, 0xBF, 0x27, 0x1B, 0x29, 0xEE, 0xC7, 0xF0, 0xC7, 0xFF, 0x14, 0xCD, 0x24, 0x47, 0x5A, 0xDA, 0x9C, 0x43, 0x76, 0x95, 0x82, 0x8A, 0xF3, 0x6A, 0x65, 0x1, 0x72, 0x83, 0x92, 0x4E, 0x4F, 0xE1, 0xDA, 0x8F, 0x81, 0xAC, 0x96, 0x4B, 0xC2, 0xC7, 0xE8, 0xA8, 0xF1, 0xA8, 0x43, 0xDF, 0xB4, 0x67, 0x2D, 0xEE, 0x61, 0x14, 0x43, 0x8D, 0x1F, 0x4E, 0x7E, 0x62, 0x48, 0x11, 0xB6, 0x78, 0x12, 0xD0, 0x64, 0xEE, 0x6F, 0xC4, 0xAC, 0xEC, 0x31, 0x83, 0x9B, 0xDB, 0x72, 0xD4, 0xAD, 0xD6, 0x33, 0xC2, 0x92, 0x5B, 0x43, 0xEF, 0x31, 0x47, 0x63, 0x2B, 0xEE, 0x1 },
			CipherText = new byte[] { 0xAC, 0x2C, 0xF4, 0xA3, 0x2E, 0x63, 0xCE, 0xE4, 0x6C, 0x86, 0x47, 0x8B, 0xFE, 0xCB, 0xD1, 0xC8, 0x4D, 0x27, 0x4A, 0x75, 0x13, 0xA9, 0xAF, 0x4C, 0xA1, 0x56, 0x46, 0xE6, 0x5D, 0x91, 0x7E, 0xEF, 0x7C, 0x74, 0x6F, 0x94, 0x3A, 0xDB, 0x85, 0xA5, 0x8, 0xFE, 0x34, 0x40, 0x2E, 0x5C, 0x78, 0x13, 0x60, 0x81, 0xE, 0xB1, 0x24, 0xBC, 0x97, 0x39, 0x81, 0x4, 0x91, 0xC9, 0xE9, 0xE, 0xC7, 0xFB, 0xFD, 0xA1, 0xE, 0xF1, 0x18, 0x58, 0xDE, 0x3D, 0x58, 0xB4, 0x0, 0xEB, 0x24, 0x36, 0x64, 0xAC, 0x3C, 0x7C, 0xE0, 0x5B, 0xC6, 0x75, 0xEC, 0x78, 0x94, 0x3B, 0xCA, 0x17, 0xB7, 0xF6, 0x99, 0x17 }
		},
		new TestVector
		{
			Key = new byte[] { 0xA7, 0x45, 0x28, 0xF5, 0x1F, 0x21, 0x6, 0x44, 0xB7, 0xB, 0x74, 0xB9, 0x5C, 0x4B, 0x68, 0x0, 0x60, 0xFA, 0x6A, 0x12, 0x20, 0x14, 0x53, 0xF4, 0xE4, 0xCE, 0x55, 0xA1, 0x6, 0x29, 0x3B, 0x45 },
			IV = new byte[] { 0x57, 0xC7, 0xF2, 0xAB, 0xBE, 0xFD, 0x49, 0xF9, 0x22, 0x2B, 0xF5, 0x9B, 0x8A, 0x48, 0xD8, 0x7D },
			PlainText = new byte[] { 0x83, 0xC1, 0x83, 0x7D, 0xC3, 0x84, 0xF9, 0x20, 0xB, 0x57, 0xB5, 0x83, 0x52, 0x6F, 0xEF, 0x95, 0x1F, 0x3E, 0x1C, 0x84, 0x37, 0x8C, 0xB4, 0x75, 0x78, 0xC9, 0x37, 0x78, 0x5, 0xA2, 0x72, 0xBB, 0xA3, 0xD2, 0xFF, 0xFE, 0x63, 0x3B, 0xB, 0x46, 0x82, 0x35, 0x5B, 0xD6, 0x8D, 0x26, 0x91, 0x5B, 0xC8, 0x53, 0xAC, 0x67, 0xD1, 0xF5, 0xCF, 0x20, 0x81, 0x90, 0x43, 0x3A, 0x13, 0x80, 0xBE, 0x22, 0x88, 0xD4, 0xE6, 0x7C, 0x49, 0x60, 0x11, 0xD0, 0xF, 0xE, 0x4F, 0x80, 0x0, 0x75, 0xAA, 0xFE, 0x1B, 0xAD, 0xAC, 0x3B, 0xD5, 0x61, 0x22, 0x63, 0x4, 0x25, 0x20, 0xC7, 0xFD, 0xA, 0x45, 0x1B, 0xF9, 0x70, 0x40, 0xE1, 0xBE, 0x1C, 0x93, 0x25, 0x7B, 0x8B, 0x97, 0x6B, 0xF3, 0x85, 0xC1, 0xE6 },
			CipherText = new byte[] { 0xF9, 0x1C, 0x18, 0x37, 0x54, 0xC2, 0xE, 0x94, 0xE3, 0x36, 0x9E, 0x65, 0xBC, 0x26, 0x7B, 0x9A, 0xD0, 0x2C, 0xF7, 0xF8, 0xBB, 0x5, 0x56, 0xB7, 0xB5, 0x3D, 0x87, 0x91, 0x69, 0xD8, 0x2A, 0x7B, 0x8E, 0x39, 0xC0, 0x33, 0xF6, 0xC2, 0xE8, 0xFB, 0xA2, 0xFB, 0xD8, 0x16, 0xAD, 0x72, 0x32, 0x62, 0x36, 0x45, 0x41, 0x8B, 0xE1, 0x5, 0x22, 0xC5, 0x92, 0x82, 0xBD, 0x66, 0xA9, 0x3C, 0xD0, 0xFC, 0xFC, 0xF9, 0xF2, 0x3C, 0xA2, 0x1B, 0x58, 0x4A, 0xCC, 0x2A, 0x3A, 0x71, 0x6A, 0xC9, 0xF0, 0xF4, 0x23, 0xD9, 0x3E, 0xC9, 0x8B, 0x40, 0x98, 0x56, 0x60, 0x4, 0xE9, 0xBE, 0xC2, 0xF4, 0x55, 0x1E, 0xD1, 0x43, 0xDC, 0xB0, 0x10, 0x3A, 0x4E, 0xFA, 0x32, 0xC0, 0x5, 0x57, 0xC1, 0x5, 0xFE, 0xA8 }
		},
		new TestVector
		{
			Key = new byte[] { 0xDD, 0xF5, 0x23, 0xEA, 0x8B, 0xF7, 0x36, 0xA4, 0xCB, 0x33, 0xD6, 0x9, 0xB, 0x6A, 0x8E, 0xC, 0xC0, 0x4E, 0x16, 0x14, 0x8, 0x97, 0x1A, 0xAD, 0x8D, 0x53, 0x3D, 0x7D, 0xAD, 0x7D, 0x5E, 0x7B },
			IV = new byte[] { 0xD9, 0xD2, 0x1A, 0x5B, 0x3B, 0xE0, 0x92, 0x4C, 0x9C, 0x60, 0x6E, 0xE6, 0x84, 0xC5, 0x22, 0x5E },
			PlainText = new byte[] { 0xA3, 0x15, 0x6F, 0xFD, 0x6F, 0xF8, 0x2D, 0xD0, 0xF, 0xF, 0x49, 0xA0, 0x78, 0x86, 0xA, 0x24, 0xD6, 0xED, 0x98, 0x76, 0x2D, 0x43, 0xBE, 0xC4, 0x40, 0x54, 0xEF, 0x48, 0xB2, 0x46, 0x87, 0x7A, 0x6B, 0x6E, 0x54, 0x84, 0x3D, 0x68, 0x55, 0xF6, 0xC7, 0x66, 0xC1, 0xBB, 0x9A, 0xC8, 0x4B, 0x4C, 0x9B, 0xED, 0xA5, 0x23, 0xA9, 0x49, 0x43, 0x73, 0x7F, 0xB8, 0x61, 0x16, 0xDB, 0x12, 0x47, 0xC6, 0xE0, 0x0, 0xCC, 0x91, 0xB8, 0xE, 0x19, 0x87, 0x7F, 0x1, 0xAF, 0xB6, 0x5C, 0x6A, 0xAC, 0x58, 0xF1, 0x7B, 0x49, 0x4A, 0xF6, 0x1A, 0xA8, 0xC0, 0x20, 0x34, 0xCD, 0x38, 0x48, 0x54, 0xEA, 0xAC, 0xC9, 0x74, 0xDF, 0xC, 0x2A, 0x13, 0x1, 0xEB, 0xFD, 0x87, 0x1A, 0x79, 0x6, 0x95, 0xB2, 0xB1, 0xA0, 0x3F, 0x8D, 0xD3, 0x5D, 0xDD, 0x75, 0x15, 0xED, 0x6F, 0x3A, 0x95, 0x41, 0x32, 0xF6, 0x93 },
			CipherText = new byte[] { 0xC1, 0x8, 0xD2, 0xAF, 0xC6, 0x38, 0x53, 0xF2, 0x23, 0xC3, 0x9, 0x22, 0xDF, 0x7C, 0xC9, 0xBC, 0x2A, 0x21, 0x4, 0xE2, 0xE3, 0x85, 0x4A, 0xDD, 0x37, 0x7A, 0xCF, 0x4E, 0xB7, 0x3A, 0x5C, 0x59, 0xB, 0x25, 0xCF, 0xBE, 0x89, 0x30, 0x9, 0x27, 0x46, 0x76, 0xE1, 0xF, 0xB2, 0xD1, 0xE0, 0xFD, 0x34, 0x12, 0x6F, 0xD5, 0x41, 0xBF, 0xC3, 0xAE, 0x91, 0x7C, 0x7A, 0x30, 0xC6, 0xE2, 0x60, 0x38, 0x7A, 0xB2, 0x89, 0xEF, 0x3F, 0x6B, 0xA5, 0x56, 0xCF, 0xEB, 0x5F, 0xB9, 0xCF, 0x28, 0xE1, 0x1, 0xF8, 0xD9, 0x90, 0x24, 0x5, 0x98, 0xAF, 0x2C, 0xB2, 0xAC, 0x60, 0x81, 0xBB, 0x38, 0x57, 0x9D, 0x49, 0x34, 0xDE, 0x6, 0x81, 0xD7, 0x71, 0x1C, 0xBB, 0x70, 0xA2, 0x57, 0xE7, 0xC0, 0xF7, 0x38, 0xE1, 0xEB, 0x44, 0x6, 0xC, 0x9E, 0xE7, 0x71, 0x5F, 0x22, 0x33, 0xAE, 0x53, 0x86, 0x33, 0xD1 }
		},
		new TestVector
		{
			Key = new byte[] { 0xEF, 0x71, 0x95, 0xDD, 0xD9, 0x9E, 0x95, 0x8A, 0xA, 0xA1, 0xB, 0xEB, 0xE0, 0x70, 0xE7, 0xBF, 0x70, 0xE0, 0x78, 0xA6, 0x26, 0xBB, 0x33, 0xD9, 0xAC, 0x12, 0xB0, 0x17, 0xD, 0xD4, 0xF5, 0xE3 },
			IV = new byte[] { 0x1B, 0xA0, 0xF7, 0xEC, 0xE, 0xD8, 0x5E, 0xCD, 0x6D, 0xF7, 0x89, 0xF6, 0x32, 0x24, 0xD2, 0xEA },
			PlainText = new byte[] { 0x29, 0x7, 0x13, 0xAC, 0x99, 0xDB, 0x69, 0x73, 0x26, 0xC4, 0x37, 0xA5, 0xF6, 0x63, 0x6E, 0x3, 0x13, 0xA8, 0xC, 0x21, 0x10, 0xE8, 0xE3, 0x1A, 0xF0, 0x30, 0x9C, 0x81, 0x43, 0xD8, 0xFB, 0x9B, 0x92, 0x5B, 0x65, 0xCB, 0xFD, 0x66, 0x9F, 0x4D, 0x23, 0x2E, 0xD8, 0x27, 0x42, 0x7, 0xEA, 0x5D, 0x9F, 0x33, 0xDD, 0x65, 0x29, 0xF7, 0xAC, 0xDA, 0x59, 0xF4, 0x4C, 0x75, 0x5C, 0xB5, 0xEB, 0x38, 0x74, 0x85, 0x76, 0xEC, 0x9C, 0x83, 0x5D, 0xCE, 0x6B, 0xF8, 0x9A, 0x86, 0x3A, 0xE7, 0xF0, 0x58, 0x89, 0xE6, 0x70, 0x9E, 0x9F, 0x2D, 0x42, 0x76, 0x71, 0xED, 0xA2, 0xB8, 0xC5, 0xE3, 0x29, 0x2B, 0x97, 0x2C, 0x4E, 0xF8, 0xBC, 0x5B, 0x2C, 0x5E, 0xC5, 0xC9, 0x86, 0xA8, 0x26, 0x2C, 0x8, 0x5C, 0x98, 0x6B, 0xCF, 0xB6, 0xBB, 0xB1, 0x2C, 0x54, 0x0, 0xC1, 0xA5, 0x33, 0xC6, 0x89, 0x3D, 0xDA, 0xC3, 0xF9, 0xF6, 0xD5, 0xA6, 0x15, 0x93, 0x65, 0xFA, 0x49, 0xA2, 0x76, 0x4E, 0xFD, 0xBA, 0xD1 },
			CipherText = new byte[] { 0xC, 0xF3, 0xA0, 0x15, 0x70, 0x6D, 0xC0, 0x4F, 0x8E, 0x97, 0x70, 0x40, 0xDE, 0x4E, 0xF6, 0x2E, 0x8C, 0xE6, 0x53, 0xC0, 0x2F, 0x4, 0xAD, 0xD4, 0x55, 0xBE, 0x5C, 0x49, 0xB7, 0x5E, 0x43, 0xF7, 0x99, 0x68, 0x2C, 0x6D, 0x41, 0x4D, 0x2A, 0xCC, 0x56, 0xB8, 0x54, 0x7D, 0x93, 0xD3, 0x1B, 0xBF, 0x44, 0x85, 0xED, 0xEF, 0xF3, 0xAB, 0x71, 0xD2, 0x81, 0x6A, 0xA6, 0x8A, 0x5B, 0xFF, 0x36, 0xC8, 0x47, 0xDA, 0x9F, 0x2D, 0xB6, 0x28, 0x11, 0xCD, 0xBD, 0x62, 0x65, 0xD8, 0xFF, 0xFA, 0x1D, 0xB5, 0x88, 0x79, 0xC9, 0x8F, 0x19, 0x61, 0x6E, 0xA3, 0x4D, 0xB4, 0xB, 0x2F, 0xDD, 0x98, 0x3E, 0xCF, 0x35, 0xFA, 0xBC, 0xEB, 0x52, 0x9B, 0x7, 0x93, 0x8B, 0xD1, 0xD8, 0xCB, 0xAD, 0x84, 0xE0, 0x15, 0x7F, 0xC6, 0x2E, 0x48, 0xA4, 0x38, 0x9B, 0x26, 0x30, 0x1B, 0x4A, 0xC2, 0x6D, 0x8E, 0xD6, 0x15, 0x1C, 0xA7, 0xC0, 0xDA, 0xE0, 0x3A, 0x16, 0xDC, 0x70, 0x4C, 0x7F, 0x44, 0xD5, 0xAC, 0x26, 0xF7 }
		},
		new TestVector
		{
			Key = new byte[] { 0x93, 0x6A, 0x2, 0x93, 0xC5, 0xAC, 0xF2, 0xDE, 0xCE, 0x18, 0x5E, 0xCE, 0xA7, 0xCF, 0xB0, 0xAF, 0xC0, 0x93, 0x75, 0x6D, 0xA2, 0xDA, 0x1B, 0x4B, 0xD3, 0x21, 0xF8, 0xD8, 0xF9, 0x83, 0x8F, 0x20 },
			IV = new byte[] { 0x43, 0x8A, 0xF, 0x1F, 0x5, 0x45, 0x1D, 0x7B, 0xA2, 0x9B, 0xD3, 0x72, 0xAF, 0xDE, 0x9, 0x10 },
			PlainText = new byte[] { 0x55, 0xA4, 0xD3, 0xA6, 0xF7, 0xD2, 0x4A, 0x79, 0x15, 0xF9, 0x90, 0xB7, 0x71, 0xE6, 0xE, 0xAF, 0x70, 0x74, 0x0, 0x40, 0xC2, 0xA5, 0x34, 0x92, 0x45, 0xF1, 0xE, 0x5, 0x27, 0xDE, 0xD0, 0x67, 0x4C, 0xD1, 0x18, 0x6A, 0xEF, 0x24, 0xAB, 0x55, 0x8B, 0x78, 0x70, 0xF9, 0xFC, 0x4D, 0xC0, 0xE7, 0xE1, 0xD0, 0xDD, 0xE0, 0x46, 0xF3, 0xBF, 0x8D, 0x80, 0xC3, 0x17, 0x70, 0x57, 0xF7, 0x8E, 0x1B, 0x6B, 0xC4, 0x4D, 0xA0, 0xD0, 0xF9, 0xC3, 0x48, 0xFC, 0x47, 0xA2, 0x88, 0xE3, 0xE0, 0x2B, 0x30, 0x60, 0x45, 0xAC, 0xE6, 0xD7, 0x58, 0x47, 0xD3, 0x19, 0xB9, 0xF4, 0x9C, 0x87, 0x4F, 0xC9, 0x94, 0x7B, 0x25, 0x7A, 0x30, 0xE3, 0x78, 0x1C, 0xBB, 0x2F, 0xE, 0x2E, 0x4A, 0x6E, 0xC9, 0xD9, 0xF3, 0xB3, 0x7B, 0x77, 0x3A, 0xBE, 0xFC, 0x53, 0xCC, 0xD8, 0x7A, 0xAF, 0x70, 0xFF, 0x11, 0xC, 0x3A, 0x43, 0x9B, 0xA5, 0x1, 0x70, 0xCA, 0x3D, 0x14, 0xED, 0x74, 0x1A, 0x29, 0xE4, 0x2D, 0x52, 0x96, 0xA3, 0x1B, 0x45, 0xC4, 0x43, 0x6, 0x6B, 0xE0, 0x87, 0xAF, 0x50, 0xD3, 0x6, 0x63, 0xDC, 0x75 },
			CipherText = new byte[] { 0x87, 0x62, 0xFC, 0xC8, 0xB2, 0x51, 0x56, 0x1B, 0x94, 0xD1, 0xE0, 0xA3, 0xA8, 0x3E, 0xB9, 0x82, 0x6D, 0xE7, 0x60, 0xD9, 0xA8, 0x67, 0x78, 0xEF, 0x79, 0xAD, 0xD, 0x5B, 0xB4, 0x54, 0xC5, 0x2C, 0xB6, 0xB, 0x10, 0xD4, 0xAE, 0x17, 0xA2, 0x35, 0xC9, 0xEE, 0x34, 0x7E, 0x20, 0x18, 0xD8, 0xD4, 0xA, 0x68, 0x5A, 0x1D, 0x1, 0x43, 0x1C, 0x2F, 0x82, 0x21, 0x91, 0xF3, 0x9B, 0x16, 0xCB, 0xF8, 0x15, 0x6E, 0x32, 0x83, 0x1C, 0xC, 0xE2, 0x3E, 0x20, 0x2D, 0xC9, 0x41, 0x80, 0x9C, 0x33, 0x98, 0x88, 0x75, 0x42, 0xB8, 0x8B, 0xA3, 0x5C, 0xFE, 0x14, 0x49, 0x36, 0xF9, 0xA8, 0x56, 0x0, 0xE7, 0x21, 0x21, 0x7, 0x99, 0xFC, 0x8F, 0x2C, 0xD9, 0x31, 0x93, 0x2, 0xB3, 0x3D, 0x89, 0x72, 0x0, 0x22, 0xF9, 0x36, 0xB5, 0x44, 0xA4, 0xA2, 0x3F, 0x82, 0x97, 0xA2, 0xFE, 0x40, 0x11, 0xCE, 0xF0, 0x79, 0x87, 0x63, 0x37, 0x55, 0xE6, 0xBA, 0xC5, 0xEF, 0x26, 0xAD, 0xAB, 0xD6, 0x19, 0x12, 0x36, 0xD8, 0xD, 0x3F, 0xFF, 0x6A, 0xAC, 0x83, 0x5A, 0xB2, 0x9, 0xB9, 0x3E, 0x56, 0xF2, 0xC, 0x47 }
		}
	};
		private readonly TestVector[] Lea192CfbTestVectors =
		{
		new TestVector
		{
			Key = new byte[] { 0x7F, 0xC0, 0xB2, 0x6D, 0x79, 0xCB, 0xE6, 0xD, 0x23, 0x71, 0x44, 0x46, 0xC1, 0xFB, 0xBF, 0xCC, 0x89, 0xD2, 0xEB, 0x75, 0x4C, 0x94, 0xBF, 0xEA },
			IV = new byte[] { 0x59, 0x67, 0x99, 0xA2, 0x9F, 0x8E, 0x82, 0x11, 0x11, 0x3A, 0xB3, 0x1C, 0x4F, 0xA2, 0x59, 0xD1 },
			PlainText = new byte[] { 0x82, 0x55, 0x96, 0x55, 0x87, 0xCF, 0xC8, 0x1D, 0x51, 0x4B, 0xD, 0x61, 0x88, 0xD9, 0x7, 0xCE },
			CipherText = new byte[] { 0xBE, 0x64, 0xFB, 0x5B, 0x99, 0x3B, 0x7C, 0xE5, 0x1C, 0x40, 0x2A, 0x98, 0x1E, 0x5D, 0x77, 0xB1 }
		},
		new TestVector
		{
			Key = new byte[] { 0x76, 0xB0, 0xDC, 0x7C, 0x24, 0xC5, 0x81, 0x1F, 0xC0, 0x9D, 0x39, 0x81, 0x42, 0x5F, 0x58, 0x30, 0x50, 0x2D, 0x4D, 0x73, 0x5E, 0xB4, 0xDF, 0x83 },
			IV = new byte[] { 0x19, 0x2, 0xB7, 0xF8, 0x6, 0x98, 0x1F, 0x82, 0x66, 0xC1, 0x9, 0xD9, 0x5E, 0x22, 0x53, 0xF7 },
			PlainText = new byte[] { 0x54, 0x91, 0x49, 0x84, 0x9C, 0x2B, 0x6C, 0x92, 0x54, 0xA0, 0x72, 0x8A, 0x8C, 0xD2, 0x8D, 0x66, 0xAB, 0x9F, 0xF0, 0x21, 0xD, 0xFA, 0x90, 0x6C, 0xF1, 0x41, 0x27, 0xA3, 0x93, 0xCA, 0x7F, 0xFF },
			CipherText = new byte[] { 0x5, 0x54, 0x5B, 0xA3, 0x7E, 0xEC, 0x21, 0xBE, 0xF1, 0xAB, 0xD6, 0xD0, 0xE4, 0x7A, 0xDF, 0xF8, 0xBE, 0xAB, 0xF9, 0x5E, 0x79, 0xCE, 0xA2, 0xCB, 0xB0, 0x95, 0x3D, 0x5D, 0x3E, 0x66, 0x2, 0x62 }
		},
		new TestVector
		{
			Key = new byte[] { 0x95, 0xC0, 0xED, 0xD, 0xA3, 0x2D, 0x1B, 0x5F, 0x57, 0x57, 0xB, 0x81, 0x5A, 0x50, 0x59, 0x2E, 0xCD, 0xC9, 0xC1, 0xC4, 0xE7, 0x27, 0xE0, 0xF6 },
			IV = new byte[] { 0xDF, 0xD9, 0x3F, 0xC1, 0xC, 0xE8, 0x8D, 0xA1, 0x4B, 0xCF, 0x2C, 0x4, 0xA1, 0x8E, 0xF0, 0xFF },
			PlainText = new byte[] { 0x21, 0xFA, 0x23, 0x40, 0x10, 0x57, 0xCC, 0x44, 0x48, 0x28, 0x30, 0xCA, 0xDA, 0x46, 0x9A, 0x87, 0xF7, 0x30, 0x58, 0x1B, 0x11, 0xA2, 0x6, 0x44, 0x3D, 0x69, 0xF, 0x51, 0xDC, 0x75, 0x70, 0xDA, 0x7A, 0x30, 0xBF, 0xAF, 0xF6, 0xE, 0x6C, 0xE, 0xE3, 0x65, 0x48, 0x19, 0x2F, 0x80, 0x43, 0x86 },
			CipherText = new byte[] { 0x2B, 0xEE, 0x8D, 0x9B, 0x62, 0xF, 0xBD, 0x94, 0xF, 0x1E, 0x1, 0x1F, 0x99, 0x49, 0x90, 0xEF, 0xDC, 0xBC, 0xEE, 0xEC, 0xDB, 0x39, 0xE1, 0xD, 0x21, 0xA, 0xCC, 0x21, 0x83, 0x1, 0xBC, 0xBD, 0x6A, 0xA3, 0xB9, 0xA1, 0x86, 0xA4, 0x75, 0xDB, 0xBB, 0x7D, 0xA3, 0x1E, 0xA8, 0xB2, 0xF4, 0x70 }
		},
		new TestVector
		{
			Key = new byte[] { 0x2, 0xEF, 0x7A, 0x99, 0xE9, 0x20, 0x71, 0x4F, 0x34, 0x34, 0x9C, 0xDD, 0x9D, 0xB, 0x25, 0x58, 0x2A, 0xA1, 0xE9, 0xB6, 0x54, 0x9E, 0xC4, 0xF5 },
			IV = new byte[] { 0x68, 0x28, 0xE, 0x9A, 0x2E, 0xFC, 0x65, 0x5D, 0xC9, 0xBD, 0xAD, 0x23, 0xDE, 0x8B, 0x56, 0x2C },
			PlainText = new byte[] { 0xF8, 0xD8, 0xDD, 0x8E, 0x2B, 0x77, 0x96, 0xE2, 0xF8, 0xF6, 0xA8, 0x3D, 0x71, 0x2E, 0x59, 0x62, 0x9D, 0x18, 0x8C, 0x35, 0x1E, 0xE3, 0x87, 0x73, 0x11, 0x43, 0xFA, 0xA1, 0x36, 0xB, 0x3D, 0x42, 0x51, 0xFE, 0xDA, 0x4D, 0xD0, 0xE2, 0x4B, 0xDE, 0xAD, 0xD7, 0x5, 0x2C, 0x96, 0xE7, 0xB5, 0xBB, 0x4C, 0xDE, 0xC9, 0xD3, 0x49, 0x5C, 0x32, 0x30, 0xA5, 0x28, 0x68, 0xFB, 0x3A, 0xC7, 0xAF, 0xF9 },
			CipherText = new byte[] { 0x37, 0x2A, 0xBC, 0xF1, 0x42, 0xE0, 0xD5, 0x66, 0xA0, 0x78, 0xCE, 0xA3, 0xF7, 0x60, 0x4E, 0x4F, 0xAA, 0x48, 0x86, 0x3D, 0x3, 0x77, 0xDB, 0xE4, 0x54, 0xF1, 0x4, 0x31, 0xFB, 0x6F, 0xAF, 0x6E, 0x97, 0xEF, 0x80, 0x76, 0x96, 0xEE, 0x77, 0xB1, 0xE4, 0xD4, 0xED, 0x4B, 0xB9, 0xB8, 0x67, 0x98, 0x1, 0x97, 0x5B, 0x52, 0x1, 0x40, 0xDB, 0x1F, 0x52, 0x19, 0xE6, 0xF7, 0xE0, 0x7A, 0xE9, 0x75 }
		},
		new TestVector
		{
			Key = new byte[] { 0x7, 0x4E, 0x9A, 0x3, 0xD2, 0x74, 0xCD, 0xB6, 0x11, 0xEB, 0x6, 0x6B, 0xB, 0xF1, 0x5F, 0x69, 0x3B, 0x22, 0xCD, 0x5A, 0xF5, 0x90, 0xED, 0xFC },
			IV = new byte[] { 0x4C, 0x15, 0x0, 0x19, 0x32, 0xE8, 0x33, 0xB9, 0xE1, 0x6F, 0x25, 0x96, 0x7A, 0x54, 0xA3, 0xD0 },
			PlainText = new byte[] { 0xEC, 0xDB, 0xB6, 0xE2, 0x18, 0x73, 0xDF, 0xD5, 0x33, 0x8B, 0xA1, 0xB4, 0x6B, 0xA6, 0x40, 0x3F, 0xCD, 0xB2, 0xC9, 0xE3, 0x66, 0x95, 0x52, 0xEA, 0xA8, 0xA, 0x83, 0xF0, 0x10, 0xAB, 0x55, 0x96, 0x6, 0x4E, 0x1A, 0x7A, 0x5, 0x95, 0xBE, 0x66, 0xFB, 0xC1, 0x4C, 0xC7, 0xF3, 0xC7, 0xB3, 0x61, 0xF1, 0xA6, 0xCB, 0x42, 0x1D, 0xF7, 0x93, 0xF4, 0x24, 0xC6, 0xBD, 0xF7, 0xDC, 0xA0, 0x6C, 0x6E, 0x27, 0xED, 0x3C, 0x19, 0x19, 0x81, 0x83, 0x83, 0x5D, 0x6D, 0xD6, 0x7D, 0xD4, 0x1B, 0xCF, 0xCA },
			CipherText = new byte[] { 0xA1, 0x34, 0x92, 0x50, 0x37, 0xC8, 0xAE, 0x4A, 0xCD, 0x86, 0xB6, 0x11, 0xCC, 0x80, 0xB8, 0x93, 0x23, 0x68, 0x7A, 0xA0, 0x77, 0x12, 0x8F, 0x42, 0x78, 0xCD, 0x5, 0x70, 0xBE, 0x96, 0x93, 0x64, 0xCF, 0x94, 0x6C, 0x86, 0x23, 0xF4, 0xA8, 0x37, 0x3, 0x59, 0x97, 0x13, 0x70, 0x94, 0x30, 0xF7, 0x34, 0x27, 0x87, 0xEB, 0x63, 0x63, 0xCE, 0xB9, 0x67, 0x79, 0xC3, 0xFE, 0xEE, 0xAB, 0x42, 0x20, 0x80, 0x6A, 0x1F, 0x5B, 0x3A, 0x2C, 0xA1, 0x75, 0xD1, 0xB6, 0xA4, 0x70, 0x4B, 0xDC, 0x35, 0x4F }
		},
		new TestVector
		{
			Key = new byte[] { 0x80, 0x9A, 0xE, 0x1C, 0xA1, 0x36, 0x7E, 0x40, 0x1D, 0x4C, 0xD9, 0x95, 0x25, 0x5C, 0x6F, 0xC2, 0x16, 0x60, 0x23, 0xA8, 0x9D, 0x5C, 0xB6, 0x96 },
			IV = new byte[] { 0x1F, 0x37, 0x48, 0xBC, 0x58, 0xC9, 0x1B, 0xE3, 0x42, 0x35, 0x9B, 0x5B, 0x38, 0x79, 0x9B, 0x34 },
			PlainText = new byte[] { 0x5B, 0x43, 0xE2, 0xB1, 0x35, 0x7, 0xE6, 0xF9, 0x9C, 0x4E, 0xD7, 0x10, 0xD9, 0x51, 0xDF, 0x6, 0xA, 0xC6, 0xA9, 0x6E, 0xC5, 0xFA, 0x20, 0x12, 0xFE, 0x20, 0x79, 0xE5, 0x2B, 0xE8, 0x73, 0x39, 0xA5, 0x54, 0xDD, 0x32, 0x52, 0xC8, 0x59, 0x7B, 0x81, 0x60, 0x61, 0x37, 0x15, 0x85, 0x87, 0x3B, 0xE6, 0xC3, 0x1, 0x7A, 0x64, 0xD5, 0x64, 0xC0, 0x7E, 0x2, 0xB0, 0xA4, 0xC2, 0xAD, 0x8D, 0xB8, 0xC5, 0x27, 0xD4, 0x2, 0xC5, 0xC7, 0x51, 0xB0, 0x8D, 0x3D, 0xC8, 0x7, 0x99, 0x23, 0x35, 0x9D, 0x7B, 0xD5, 0x58, 0xC8, 0x7D, 0x83, 0x71, 0x56, 0x88, 0x84, 0x49, 0x7E, 0x44, 0xED, 0x71, 0x17 },
			CipherText = new byte[] { 0x72, 0x64, 0xD2, 0x1C, 0x52, 0xE2, 0xC2, 0x70, 0xFF, 0x56, 0xAB, 0xB7, 0x37, 0x90, 0xE2, 0x5D, 0x68, 0xF5, 0x20, 0xFE, 0x5A, 0xBF, 0x53, 0x9F, 0xFD, 0x42, 0x15, 0xB5, 0xCD, 0xF2, 0xA0, 0x47, 0xB7, 0xA2, 0x4, 0x5E, 0x5F, 0x27, 0xAB, 0xF0, 0xA4, 0xF9, 0x8, 0xA9, 0x19, 0x9D, 0xE7, 0xCA, 0x59, 0x1F, 0x8, 0x87, 0x87, 0xCB, 0xA8, 0x9A, 0xD9, 0x98, 0x43, 0x17, 0xF4, 0xB1, 0xD5, 0xD8, 0x3C, 0xCD, 0x4A, 0x7, 0xDF, 0xA0, 0xCC, 0x36, 0x7B, 0x69, 0x35, 0xC1, 0xB5, 0x78, 0xBA, 0x71, 0x39, 0x85, 0x3A, 0xB7, 0x8C, 0xA0, 0x19, 0x91, 0xF5, 0x4C, 0x85, 0x43, 0xD4, 0x0, 0xCC, 0xCF }
		},
		new TestVector
		{
			Key = new byte[] { 0x81, 0x63, 0xCE, 0x8, 0xD6, 0x2D, 0x56, 0x0, 0x87, 0x8D, 0x14, 0x67, 0xAC, 0x51, 0x72, 0x94, 0x90, 0xA5, 0xB7, 0x40, 0x58, 0x2B, 0xCF, 0x3A },
			IV = new byte[] { 0xE5, 0x4E, 0x4B, 0x5D, 0xFB, 0xD3, 0xA8, 0xC0, 0xA2, 0xB0, 0xD4, 0x2C, 0xCC, 0x22, 0xEE, 0xD3 },
			PlainText = new byte[] { 0x39, 0xFA, 0x4D, 0x3E, 0x98, 0x37, 0xC5, 0x88, 0xEF, 0xDA, 0x25, 0xCA, 0x3C, 0xF6, 0x4, 0xD6, 0x5D, 0x7, 0xBE, 0x28, 0x2D, 0x84, 0xB9, 0x19, 0xF0, 0xB8, 0xED, 0x56, 0xF1, 0xCD, 0xA3, 0x91, 0x69, 0x2A, 0x7C, 0x76, 0xA3, 0xFF, 0xB6, 0xE1, 0x5E, 0x1D, 0xAB, 0x4E, 0x73, 0xC, 0x9A, 0x91, 0xB7, 0x57, 0xAA, 0xC7, 0x23, 0x2B, 0x2C, 0x8C, 0x32, 0x20, 0x21, 0x6E, 0x8B, 0x57, 0xFC, 0xA2, 0xE0, 0xC5, 0xA9, 0xF6, 0x16, 0xCE, 0xCD, 0x7, 0xA6, 0x16, 0x50, 0xB4, 0x43, 0x94, 0x19, 0xD2, 0xBD, 0xE8, 0x18, 0x21, 0x25, 0xEE, 0x8A, 0x7F, 0x32, 0x93, 0x78, 0x5C, 0xE3, 0xE7, 0x81, 0x6E, 0x66, 0x74, 0xDA, 0xA6, 0x39, 0xCF, 0x93, 0x62, 0x8F, 0x6C, 0x1C, 0xE4, 0xF5, 0xB6, 0x7, 0x3 },
			CipherText = new byte[] { 0x65, 0xE1, 0x9B, 0x2F, 0x1A, 0xA4, 0x63, 0xD1, 0xAA, 0x6E, 0x20, 0x97, 0x76, 0xD5, 0x88, 0x14, 0x6C, 0x10, 0xCC, 0x20, 0xEF, 0xB8, 0xBD, 0xF4, 0x40, 0xAB, 0x18, 0xC9, 0x3A, 0x51, 0xD7, 0x60, 0xBD, 0x78, 0x14, 0xA1, 0x89, 0x14, 0x32, 0x1, 0x5E, 0x60, 0x3B, 0x64, 0x5E, 0xDB, 0xBF, 0x89, 0xE, 0x89, 0xEF, 0x5, 0x77, 0xE9, 0x87, 0xF3, 0x20, 0xB2, 0x65, 0x8, 0x8A, 0x40, 0xA6, 0xC3, 0x9F, 0x84, 0x0, 0x98, 0xE7, 0xF6, 0xC1, 0x2, 0x99, 0xA, 0x56, 0x78, 0x5E, 0x8D, 0x75, 0x7E, 0xED, 0x82, 0x40, 0xFD, 0x82, 0x9, 0x83, 0x86, 0xE9, 0xD8, 0x6C, 0xA4, 0x9, 0x71, 0x67, 0x5B, 0x1, 0x8F, 0x97, 0xDB, 0x6D, 0x8D, 0x5B, 0x9A, 0xBC, 0x86, 0x38, 0x68, 0xE6, 0xE9, 0xA2, 0xE9 }
		},
		new TestVector
		{
			Key = new byte[] { 0x35, 0x5F, 0xF, 0x20, 0x7A, 0xF5, 0x5A, 0x5C, 0xB6, 0xB7, 0xFB, 0x8, 0x41, 0xA6, 0xBB, 0x5E, 0xC3, 0xDF, 0x19, 0x6E, 0x53, 0x27, 0x8F, 0x5A },
			IV = new byte[] { 0xE0, 0xC8, 0x17, 0xC6, 0xD0, 0x9C, 0xEE, 0x8B, 0xE8, 0x67, 0x98, 0xAB, 0x6C, 0x69, 0x24, 0x8A },
			PlainText = new byte[] { 0x87, 0x34, 0xB1, 0x5B, 0xEC, 0xBC, 0x31, 0xD8, 0xBE, 0xAD, 0x6D, 0x36, 0xAE, 0x1, 0x4A, 0x58, 0x63, 0xD1, 0x4A, 0x43, 0x1E, 0x6B, 0x55, 0xD2, 0x9E, 0xA6, 0xBA, 0xAA, 0x41, 0x72, 0x71, 0x71, 0x6D, 0xB3, 0xA3, 0x3B, 0x2E, 0x50, 0x6B, 0x45, 0x20, 0x86, 0xDF, 0xE6, 0x90, 0x83, 0x4A, 0xC2, 0xDE, 0x30, 0xBC, 0x41, 0x25, 0x4E, 0xC5, 0x40, 0x1E, 0xC4, 0x7D, 0x6, 0x42, 0x37, 0xC7, 0x79, 0x2F, 0xDC, 0xD7, 0x91, 0x4D, 0x8A, 0xF2, 0xE, 0xB1, 0x14, 0x75, 0x66, 0x42, 0xD5, 0x19, 0x2, 0x1A, 0x8C, 0x75, 0xA9, 0x2F, 0x6B, 0xC5, 0x3D, 0x32, 0x6A, 0xE9, 0xA5, 0xB7, 0xE1, 0xB1, 0xA, 0x97, 0x56, 0x57, 0x46, 0x92, 0x93, 0x4D, 0x99, 0x39, 0xFC, 0x39, 0x9E, 0xC, 0x20, 0x3F, 0x7E, 0xDF, 0x8E, 0x7E, 0x64, 0x82, 0xEA, 0xDD, 0x31, 0xA0, 0x40, 0x7, 0x70, 0xE8, 0x97, 0xB4, 0x8C },
			CipherText = new byte[] { 0x0, 0xA5, 0x7, 0x59, 0x28, 0x8A, 0x43, 0x7, 0x7F, 0xB8, 0x31, 0xA2, 0xE2, 0xD7, 0x94, 0xEA, 0x85, 0xAF, 0x2D, 0x24, 0x61, 0x87, 0x33, 0x21, 0x5, 0x4E, 0x3A, 0xD2, 0x9F, 0x92, 0x88, 0x99, 0xD1, 0x16, 0xA5, 0x53, 0x2B, 0xDB, 0xD4, 0x6D, 0xF5, 0x60, 0xEB, 0x5C, 0x99, 0xB8, 0xE6, 0xC3, 0x72, 0x2E, 0xFD, 0xDA, 0x7A, 0x43, 0xDF, 0x2F, 0x89, 0x7C, 0x20, 0x13, 0x75, 0xB4, 0x21, 0x29, 0x77, 0xE4, 0xB2, 0xB4, 0x0, 0x5E, 0x46, 0x64, 0x3F, 0x7E, 0xFA, 0xEE, 0x0, 0x3, 0x15, 0xD7, 0x49, 0x97, 0xDE, 0x77, 0xF8, 0x0, 0x32, 0xA6, 0x5C, 0x69, 0xB8, 0xF0, 0x5E, 0xA2, 0x11, 0x10, 0xE2, 0x1A, 0xCE, 0x34, 0x1A, 0xC7, 0x6C, 0x9C, 0x19, 0x43, 0xE, 0xDA, 0xB9, 0x83, 0xBA, 0x18, 0x28, 0x1B, 0x94, 0x74, 0xD3, 0xA2, 0x65, 0x4A, 0xFE, 0x7F, 0x44, 0xFE, 0x25, 0x46, 0x10, 0x7C }
		},
		new TestVector
		{
			Key = new byte[] { 0x6B, 0xCA, 0x2B, 0x40, 0x45, 0x93, 0x4, 0x50, 0x80, 0xE9, 0x33, 0x77, 0x35, 0x8C, 0x42, 0xA0, 0xF4, 0xDE, 0xDE, 0x59, 0x66, 0xF4, 0x95, 0x84 },
			IV = new byte[] { 0x31, 0xED, 0xDE, 0x4F, 0x1C, 0x82, 0x5A, 0x67, 0x74, 0xDF, 0x59, 0x69, 0xAE, 0xB1, 0xA0, 0x9A },
			PlainText = new byte[] { 0x4D, 0x81, 0x6A, 0xD7, 0x7, 0x40, 0xAC, 0xCF, 0x23, 0x23, 0x9D, 0x6F, 0x25, 0xB1, 0x76, 0x9E, 0xAD, 0x1A, 0x76, 0x2B, 0x9D, 0xCA, 0x2A, 0x3, 0x7A, 0x3E, 0xEB, 0xA8, 0x15, 0x16, 0xA8, 0xDE, 0x6A, 0x6C, 0xE6, 0xA8, 0xC8, 0x65, 0x4, 0x72, 0x32, 0x5, 0xC4, 0x90, 0x6, 0x48, 0x7, 0xE7, 0xDC, 0x6E, 0xD8, 0xEA, 0xB1, 0x96, 0xAC, 0xC9, 0x45, 0x8E, 0xE8, 0xE4, 0xC1, 0xEA, 0xA4, 0x86, 0x9D, 0x53, 0xAF, 0xD0, 0xC1, 0x22, 0xD3, 0xF3, 0xEA, 0x2E, 0x5A, 0xA3, 0x50, 0xE1, 0xD0, 0xC8, 0x86, 0x92, 0xB, 0x76, 0xA1, 0xE, 0x69, 0x1F, 0x9C, 0x78, 0x59, 0x7, 0xFB, 0x54, 0x1D, 0xF9, 0xAF, 0xDE, 0xCE, 0x39, 0x3A, 0xA0, 0xA0, 0xB9, 0x13, 0x43, 0x67, 0x8F, 0x4C, 0xA6, 0x5A, 0xA7, 0x72, 0x2D, 0x17, 0xB5, 0xB5, 0x5C, 0xE8, 0x6E, 0x48, 0xA4, 0x45, 0xF8, 0xB, 0x7C, 0x9A, 0x9F, 0x68, 0xB4, 0x4A, 0xC9, 0x7A, 0x6, 0xF3, 0x2C, 0x75, 0xEF, 0xF4, 0x3E, 0x42, 0xBD, 0x2C, 0xED },
			CipherText = new byte[] { 0x63, 0x70, 0x3A, 0x5, 0x88, 0x65, 0x47, 0x76, 0x2C, 0x62, 0x3E, 0xDE, 0x39, 0x72, 0xC0, 0x61, 0x3C, 0xD1, 0xB8, 0xBF, 0x5, 0xE7, 0x11, 0x86, 0xE6, 0xA5, 0x93, 0xF5, 0x23, 0x88, 0x6D, 0x58, 0x4, 0xA0, 0xA6, 0x8A, 0x72, 0xAF, 0x78, 0x84, 0x1E, 0x6A, 0x9C, 0x95, 0x1B, 0x4F, 0xA5, 0x42, 0x93, 0x15, 0x3A, 0x36, 0x1D, 0xC2, 0x48, 0xB7, 0x2C, 0xDE, 0x69, 0x3E, 0x61, 0x3E, 0x9, 0x78, 0xBC, 0x5C, 0xA, 0x3B, 0x66, 0xA, 0x9A, 0x9D, 0x3C, 0x4A, 0x14, 0x7E, 0x87, 0x87, 0xC7, 0xE6, 0x86, 0xC5, 0x30, 0x50, 0xD1, 0xAC, 0xE9, 0xD1, 0x42, 0x15, 0xC1, 0xAA, 0x64, 0x36, 0x53, 0x3F, 0x51, 0x37, 0xC, 0xF6, 0xBB, 0xDB, 0x47, 0x6E, 0xA, 0xC3, 0xBE, 0x61, 0x78, 0x55, 0xEF, 0x15, 0xBE, 0x2C, 0x5D, 0xDC, 0x49, 0xE8, 0x1, 0x61, 0x97, 0x8C, 0x95, 0xB5, 0xD5, 0x7, 0xC7, 0xEB, 0x9A, 0x38, 0x58, 0x26, 0x83, 0x16, 0x3C, 0x94, 0x1C, 0xD3, 0xB2, 0xEA, 0x4E, 0xD2, 0x8A, 0xA4 }
		},
		new TestVector
		{
			Key = new byte[] { 0x69, 0xE8, 0x5, 0x91, 0x34, 0xA5, 0xB1, 0x1F, 0x12, 0xB9, 0xB4, 0x9F, 0x39, 0x8B, 0xA3, 0xE0, 0x8F, 0x7E, 0x2B, 0x6A, 0xCB, 0x7D, 0x54, 0xB4 },
			IV = new byte[] { 0xD7, 0xD8, 0x7, 0x97, 0x79, 0x4E, 0xCF, 0x3, 0x33, 0x6B, 0xDC, 0xF1, 0x68, 0x14, 0x4D, 0x98 },
			PlainText = new byte[] { 0xBF, 0x60, 0xAF, 0xE4, 0xCD, 0xA9, 0xC0, 0x24, 0xEE, 0xE3, 0x79, 0x3, 0x73, 0x2D, 0x4C, 0xB9, 0x3, 0xA6, 0xAB, 0x82, 0x3B, 0x82, 0xC9, 0x4F, 0x98, 0x5D, 0xA4, 0xBC, 0x97, 0xCE, 0x43, 0x43, 0x1A, 0x40, 0x3C, 0xAF, 0xE, 0xFD, 0x7A, 0xD3, 0x4B, 0x8C, 0x3D, 0x7B, 0xBB, 0x3D, 0x62, 0xA3, 0xBF, 0x2, 0xE5, 0xE7, 0xCE, 0x80, 0xA4, 0x3B, 0x60, 0x66, 0x66, 0xDC, 0xA, 0xFE, 0x1B, 0x87, 0xEA, 0x2, 0x66, 0xE8, 0x45, 0xB0, 0x58, 0x55, 0x6F, 0x20, 0x7F, 0xBC, 0xEB, 0xD6, 0x1F, 0xDA, 0xD4, 0x94, 0xBF, 0xAE, 0x7B, 0x71, 0xE7, 0x2E, 0x52, 0x2F, 0x29, 0x38, 0x9, 0xCA, 0x5E, 0xCB, 0xF6, 0x4D, 0x32, 0x77, 0xBA, 0xE9, 0xE3, 0x12, 0x22, 0x48, 0x45, 0xAD, 0x4B, 0x1F, 0xA, 0xC6, 0xA, 0x3, 0x40, 0xC0, 0x8A, 0x7D, 0x1B, 0x90, 0x37, 0x60, 0xF5, 0xB8, 0xDB, 0x5A, 0x93, 0x79, 0x7, 0xCA, 0xAA, 0x44, 0xB5, 0xD1, 0xA1, 0x73, 0x2B, 0xAC, 0x99, 0x36, 0x23, 0x41, 0xAB, 0xD0, 0x28, 0xF7, 0x70, 0x3, 0x43, 0xCB, 0xC7, 0xC8, 0xD7, 0xA1, 0xD2, 0x44, 0xCA, 0xD7, 0x42, 0xF8 },
			CipherText = new byte[] { 0xBB, 0x6F, 0xF2, 0x94, 0x1D, 0x49, 0x20, 0xB, 0x53, 0xA1, 0x8D, 0x63, 0x85, 0x8D, 0x2, 0x61, 0x1C, 0xDE, 0x5E, 0xF3, 0x5A, 0x7D, 0x62, 0xA7, 0x71, 0xF4, 0x67, 0x8, 0xE8, 0x73, 0x26, 0xEC, 0xC7, 0x50, 0x62, 0xAC, 0x43, 0x7D, 0x7E, 0x8, 0x2D, 0xC6, 0xAC, 0x2A, 0x85, 0xA, 0x59, 0x1A, 0x1D, 0xAA, 0x65, 0xEC, 0x4, 0x60, 0xD2, 0xD0, 0xFC, 0xB8, 0xDA, 0x25, 0xF2, 0x78, 0xD4, 0x3C, 0xFD, 0x1C, 0xE, 0x74, 0x61, 0xC4, 0x9D, 0xE9, 0xCF, 0xEB, 0x4D, 0xC, 0x44, 0x68, 0x95, 0x5E, 0x6E, 0xD, 0x29, 0x81, 0xCA, 0xD9, 0xCF, 0x3C, 0xE7, 0x22, 0x8F, 0xB4, 0xD1, 0x1F, 0x8A, 0x80, 0xFB, 0xD1, 0x66, 0x39, 0x42, 0x79, 0xCE, 0xC5, 0x29, 0x67, 0x67, 0x39, 0x63, 0xAB, 0x6D, 0x81, 0x3, 0x74, 0x84, 0xDC, 0x41, 0xE3, 0x84, 0x38, 0xD7, 0x56, 0x4, 0x8D, 0xE2, 0x28, 0xB0, 0x77, 0x6B, 0x27, 0xB2, 0xEF, 0xCF, 0x93, 0x23, 0x90, 0xB5, 0x82, 0xDE, 0x72, 0x49, 0x20, 0xD9, 0x86, 0x69, 0xF, 0xD5, 0x23, 0xCD, 0xBB, 0xDC, 0x90, 0x37, 0xF9, 0x67, 0xDE, 0x8D, 0xEC, 0x60, 0x89 }
		}
	};
		private readonly TestVector[] Lea128CfbTestVectors =
		{
		new TestVector
		{
			Key = new byte[] { 0x7D, 0x42, 0xB5, 0xCC, 0x28, 0x60, 0x45, 0x9A, 0x78, 0x77, 0x23, 0xD6, 0x83, 0x5D, 0x9C, 0x27 },
			IV = new byte[] { 0xA0, 0x1A, 0x6C, 0xE6, 0x11, 0xF7, 0x84, 0xD5, 0xE6, 0xD7, 0xA, 0xE, 0x1D, 0xCA, 0xA0, 0x39 },
			PlainText = new byte[] { 0xE, 0xE0, 0xE9, 0x2, 0x7, 0x3B, 0x49, 0xCB, 0x33, 0x68, 0xED, 0x9D, 0xC0, 0xF0, 0xC, 0x65 },
			CipherText = new byte[] { 0x6C, 0xA1, 0xFD, 0xE1, 0xD3, 0xDD, 0xD1, 0x96, 0xB2, 0x4C, 0x61, 0x60, 0x9C, 0x1C, 0xD3, 0x31 }
		},
		new TestVector
		{
			Key = new byte[] { 0x40, 0x29, 0x6C, 0x5D, 0x50, 0x52, 0x27, 0xC8, 0x78, 0xDF, 0xAF, 0xE2, 0x53, 0x12, 0x10, 0x17 },
			IV = new byte[] { 0xF0, 0xCB, 0x75, 0x73, 0x77, 0xA1, 0xEE, 0x5A, 0x10, 0x31, 0x70, 0x79, 0x0, 0xB6, 0x1E, 0xFC },
			PlainText = new byte[] { 0x15, 0xDB, 0xC6, 0x1, 0x45, 0xCD, 0xAF, 0x4D, 0x92, 0x93, 0x92, 0x3E, 0x31, 0xA2, 0xE6, 0x1, 0xEA, 0xAC, 0x60, 0x5, 0xC2, 0xBA, 0xBB, 0xB0, 0xD8, 0x7A, 0xB5, 0x50, 0x8D, 0xDA, 0x5A, 0x54 },
			CipherText = new byte[] { 0xA1, 0x8B, 0xB5, 0x4C, 0x4F, 0x16, 0xF, 0xC4, 0xBF, 0x81, 0x29, 0xB6, 0x78, 0x29, 0x74, 0x21, 0x33, 0xA6, 0xB5, 0x9B, 0x44, 0xA1, 0x5A, 0x89, 0x6A, 0x73, 0x29, 0xE1, 0x47, 0x77, 0xC, 0xB4 }
		},
		new TestVector
		{
			Key = new byte[] { 0xE7, 0xD5, 0x84, 0xBC, 0x38, 0x8D, 0xA3, 0xCE, 0xFA, 0x9B, 0xBA, 0xB, 0xFE, 0xA3, 0xAA, 0x61 },
			IV = new byte[] { 0xC6, 0x2B, 0xB3, 0xA2, 0x2F, 0xAD, 0x38, 0x35, 0x52, 0xEA, 0xC2, 0xC, 0xAD, 0x82, 0x48, 0xD5 },
			PlainText = new byte[] { 0x7E, 0xC2, 0xAE, 0x75, 0x70, 0xBD, 0x8B, 0xB2, 0x79, 0x9E, 0x2F, 0x2F, 0x3, 0x3C, 0xE5, 0x9E, 0x4A, 0xEF, 0x75, 0x31, 0x5, 0xA3, 0xED, 0x51, 0x48, 0x2A, 0xA1, 0x93, 0xA9, 0xD7, 0x71, 0xE8, 0xA2, 0x48, 0x4A, 0x14, 0x36, 0x83, 0xF0, 0x61, 0xD7, 0x45, 0xFA, 0x94, 0x88, 0x96, 0x1E, 0x20 },
			CipherText = new byte[] { 0x7A, 0x4D, 0xF7, 0x90, 0x43, 0xFE, 0x8C, 0xF, 0xC3, 0x53, 0x13, 0xC0, 0x5, 0x12, 0xAE, 0xCC, 0x38, 0x91, 0x74, 0xD6, 0x8B, 0x1B, 0x71, 0xB2, 0xC2, 0xD4, 0x26, 0x16, 0xB4, 0x11, 0x3A, 0x77, 0xB3, 0xFA, 0x2E, 0x82, 0xE2, 0xB2, 0xB8, 0xB1, 0xD, 0x30, 0x38, 0x43, 0x41, 0xF6, 0xE0, 0x4E }
		},
		new TestVector
		{
			Key = new byte[] { 0x3F, 0xA1, 0xAE, 0x9A, 0x8D, 0xC3, 0x63, 0x6D, 0x80, 0xE2, 0x5A, 0xCF, 0xC9, 0x0, 0x5C, 0xF3 },
			IV = new byte[] { 0x1A, 0xF, 0x62, 0x80, 0xD2, 0x7, 0x58, 0x43, 0xDC, 0x37, 0x22, 0x20, 0xD4, 0xD8, 0xDD, 0x4F },
			PlainText = new byte[] { 0x6C, 0xE8, 0x67, 0xC5, 0xF, 0x36, 0x21, 0xEF, 0xC4, 0xB9, 0xF3, 0xA6, 0x54, 0x25, 0x91, 0x60, 0xAF, 0xC0, 0xFD, 0xA3, 0x8C, 0x72, 0x4E, 0xC0, 0x50, 0x1C, 0xAF, 0xBD, 0x31, 0x2B, 0xAA, 0x93, 0x9B, 0x6D, 0xA7, 0x9A, 0xD2, 0x23, 0xAF, 0x41, 0xDA, 0x57, 0x76, 0x2, 0x94, 0x70, 0x99, 0x95, 0x29, 0x3, 0x24, 0x64, 0xAB, 0xEC, 0x57, 0x40, 0xFA, 0x9E, 0xAA, 0x52, 0xE5, 0xB7, 0xE, 0x54 },
			CipherText = new byte[] { 0xE4, 0xEE, 0x90, 0xA3, 0xC3, 0x45, 0x93, 0x6E, 0x36, 0xF9, 0x5E, 0x9E, 0x17, 0x62, 0xD5, 0x21, 0xF, 0x1, 0x48, 0xFC, 0x3, 0x53, 0x61, 0xAF, 0x9F, 0x32, 0x7B, 0x86, 0xD3, 0x13, 0xBA, 0x3A, 0xCD, 0xFB, 0x5D, 0xD3, 0xE0, 0x14, 0x73, 0x20, 0x50, 0x6D, 0x5D, 0xE7, 0xF6, 0x60, 0x95, 0x8E, 0x7E, 0xB7, 0xEC, 0xC6, 0xEE, 0x68, 0x7, 0x5, 0xF7, 0xD, 0x5, 0xD8, 0xDD, 0xE0, 0xEF, 0xB0 }
		},
		new TestVector
		{
			Key = new byte[] { 0x92, 0xD8, 0x76, 0x1, 0x20, 0xB3, 0x96, 0xC9, 0x8A, 0x65, 0xEA, 0xCA, 0xCF, 0x7, 0xFB, 0xFC },
			IV = new byte[] { 0x50, 0x7F, 0xDE, 0xAB, 0x79, 0x9C, 0xFD, 0x2B, 0xA3, 0x63, 0x1A, 0xC7, 0x39, 0xA3, 0x90, 0xFA },
			PlainText = new byte[] { 0x1A, 0xD0, 0xDC, 0xE2, 0x3F, 0xD, 0x5D, 0xF1, 0x9E, 0x8B, 0x58, 0xE6, 0x4E, 0x12, 0x3F, 0xFB, 0xEB, 0xDD, 0x33, 0x60, 0x3C, 0xAB, 0xC7, 0xE9, 0x13, 0x13, 0x7, 0x4, 0x75, 0x18, 0xB9, 0xED, 0xFB, 0xFD, 0xE2, 0x25, 0x78, 0x5B, 0x8C, 0x20, 0xDC, 0x70, 0xC7, 0x3D, 0x59, 0xBA, 0xEE, 0xFC, 0xC4, 0xC4, 0x2B, 0x6C, 0x3D, 0x41, 0x3D, 0xE2, 0x12, 0x57, 0x79, 0xF0, 0xE1, 0x3D, 0xF, 0x95, 0xFD, 0x8, 0x8F, 0xB2, 0x13, 0xC2, 0xAC, 0xBD, 0xE, 0xBD, 0x3F, 0xB9, 0x37, 0x26, 0x8F, 0x66 },
			CipherText = new byte[] { 0x4D, 0xD3, 0x6E, 0x3B, 0x27, 0x93, 0xE9, 0x78, 0x92, 0xAE, 0x7A, 0xED, 0x98, 0x11, 0x4B, 0x38, 0xA1, 0x4, 0xCB, 0xFD, 0xCF, 0xC9, 0xBF, 0xE5, 0x2, 0x1F, 0x16, 0x3, 0x1B, 0x4, 0xC0, 0x58, 0xE9, 0x53, 0x8B, 0xB4, 0x8F, 0x4A, 0x19, 0x17, 0x5, 0xE0, 0xBF, 0x1E, 0x83, 0x5C, 0x6C, 0x51, 0x1F, 0xF6, 0x15, 0x30, 0x42, 0xA2, 0xEB, 0xC4, 0xB4, 0x3A, 0xCF, 0x5, 0x6E, 0x6, 0x93, 0xA8, 0x8E, 0x90, 0xC, 0xCD, 0x6A, 0x1F, 0x71, 0xBB, 0x55, 0x62, 0x42, 0x11, 0x5A, 0xFB, 0xBE, 0xE0 }
		},
		new TestVector
		{
			Key = new byte[] { 0xA1, 0xDD, 0xCF, 0xB5, 0xC4, 0x84, 0xE8, 0x7E, 0x68, 0xD7, 0x79, 0x75, 0xC5, 0x3B, 0x1C, 0x5B },
			IV = new byte[] { 0xE8, 0x99, 0xEC, 0x71, 0x58, 0x6C, 0x44, 0x32, 0xFA, 0x19, 0xC9, 0x41, 0x32, 0x80, 0xAA, 0xA1 },
			PlainText = new byte[] { 0x4B, 0xD0, 0x26, 0x24, 0x19, 0x9F, 0x4F, 0x26, 0xDC, 0x3A, 0xE, 0x7A, 0x68, 0x39, 0x68, 0xA5, 0x83, 0x57, 0xFF, 0x4A, 0x8F, 0x81, 0xDC, 0xE6, 0x69, 0x2D, 0x6B, 0xBE, 0x90, 0xED, 0xC7, 0x15, 0x8A, 0x44, 0x38, 0xA1, 0x83, 0xB8, 0xFB, 0x40, 0x38, 0x28, 0x41, 0xE8, 0x13, 0x60, 0x79, 0xDC, 0x97, 0xEB, 0xD2, 0x26, 0xFF, 0x28, 0xFC, 0x41, 0x22, 0xA1, 0x2F, 0x16, 0x9A, 0x97, 0x6F, 0x2A, 0x25, 0xE2, 0xE, 0x15, 0x4B, 0xF8, 0x72, 0x36, 0x42, 0x4B, 0x19, 0xA5, 0xE, 0xD8, 0xD9, 0x69, 0xEC, 0xFC, 0x6D, 0xEB, 0xF1, 0x8A, 0x2D, 0xAB, 0xEF, 0x1C, 0x1D, 0x32, 0x98, 0xA6, 0x29, 0x48 },
			CipherText = new byte[] { 0x4E, 0xBF, 0x49, 0xEA, 0x6F, 0x79, 0xDE, 0xC2, 0x66, 0x35, 0x42, 0x4C, 0x25, 0xAA, 0x5E, 0x62, 0x1C, 0x35, 0x20, 0x92, 0xA, 0x92, 0x9B, 0x32, 0x90, 0x2B, 0xBF, 0xEF, 0x92, 0xCD, 0xC3, 0x6, 0xE3, 0xD4, 0x49, 0x7, 0x27, 0x62, 0xB5, 0x80, 0x48, 0xB, 0x8F, 0xDD, 0xD6, 0xC5, 0xAA, 0xF9, 0x9B, 0xF2, 0xBC, 0xA8, 0x3C, 0x60, 0x3F, 0x39, 0xA1, 0x85, 0xA6, 0x8D, 0xFD, 0x40, 0x81, 0xBF, 0x6, 0x89, 0xA2, 0x37, 0xC, 0xA3, 0xEE, 0x5, 0x9F, 0xFA, 0x53, 0x2C, 0x7B, 0xE3, 0x87, 0x3F, 0xCD, 0xD6, 0xE7, 0xD5, 0xF2, 0xA7, 0x23, 0x8A, 0xF4, 0x7D, 0xDA, 0x58, 0xA1, 0x8B, 0x1E, 0x4 }
		},
		new TestVector
		{
			Key = new byte[] { 0xE6, 0x51, 0xAF, 0x66, 0xBA, 0x86, 0x3E, 0x6E, 0xC3, 0x48, 0x9E, 0x9A, 0xA1, 0xC8, 0x10, 0xB2 },
			IV = new byte[] { 0x4A, 0x33, 0xD6, 0x83, 0xAD, 0xCF, 0xF6, 0x8C, 0x96, 0x46, 0x3C, 0xFA, 0xD2, 0x42, 0x7E, 0xD7 },
			PlainText = new byte[] { 0x93, 0x39, 0x23, 0x7E, 0x16, 0x8B, 0xE6, 0x52, 0x82, 0xCA, 0xD8, 0xAF, 0x14, 0x58, 0xA4, 0x21, 0x79, 0x38, 0x17, 0xD4, 0x7B, 0x1E, 0xE0, 0x4C, 0xE0, 0xC8, 0x94, 0x56, 0x8F, 0x91, 0xF5, 0x3F, 0xF5, 0x44, 0x73, 0x43, 0xA7, 0x2E, 0xF3, 0x48, 0x49, 0x77, 0xD0, 0xCD, 0xAE, 0xB2, 0x1F, 0x1D, 0x40, 0xB2, 0x38, 0xC8, 0xA3, 0x9F, 0x72, 0x53, 0x95, 0x4A, 0x2D, 0x2F, 0x19, 0xBE, 0x16, 0xE8, 0xD4, 0x18, 0xA6, 0x9F, 0xB7, 0x98, 0xEC, 0xBA, 0xDE, 0xF7, 0x8D, 0xDA, 0xB8, 0xFB, 0x9, 0xD, 0x69, 0x4A, 0x3F, 0x46, 0x6C, 0x7C, 0x34, 0xA, 0x7D, 0x73, 0x10, 0x6B, 0xB6, 0xEF, 0x69, 0x3A, 0xF8, 0x5D, 0xC4, 0x79, 0x8C, 0xF0, 0x59, 0xF, 0xA, 0xF3, 0x17, 0xBF, 0x7A, 0x5E, 0xE8, 0x5B },
			CipherText = new byte[] { 0x1F, 0x8F, 0x9B, 0x20, 0xB3, 0xCB, 0x75, 0xB1, 0xC, 0xF6, 0x4C, 0x87, 0xC5, 0xC7, 0x58, 0x13, 0x42, 0x5D, 0x2E, 0x3C, 0xD2, 0x35, 0xD2, 0xBB, 0xAE, 0xD6, 0xEC, 0x14, 0xB1, 0xA5, 0x74, 0x25, 0xFC, 0x43, 0x86, 0x32, 0x22, 0x13, 0xF2, 0xE1, 0xC6, 0x35, 0x61, 0x21, 0x89, 0x60, 0x1F, 0xB6, 0x3C, 0x2, 0x9B, 0x40, 0xA0, 0x36, 0x59, 0x59, 0x72, 0x5, 0x73, 0xC9, 0x43, 0xC8, 0x0, 0x37, 0xAE, 0xA1, 0x62, 0x68, 0x39, 0xBC, 0x7D, 0xDB, 0xBC, 0x8, 0x7F, 0x6C, 0xFC, 0x31, 0xF8, 0x9B, 0xAF, 0x5E, 0xF8, 0xA9, 0xAC, 0x89, 0xFE, 0xA1, 0x4E, 0x32, 0x2A, 0x70, 0x72, 0x30, 0xBE, 0xC5, 0x58, 0xA0, 0xF0, 0x6D, 0x6D, 0x3F, 0x7D, 0xCE, 0x66, 0xDA, 0x90, 0x86, 0x6D, 0xE1, 0xC0, 0x70 }
		},
		new TestVector
		{
			Key = new byte[] { 0xBA, 0xA7, 0x36, 0x35, 0x20, 0xDA, 0xAE, 0xD7, 0x5F, 0xEC, 0x44, 0xF4, 0xAF, 0x4D, 0x77, 0x9E },
			IV = new byte[] { 0x28, 0xBC, 0xD6, 0xB8, 0x6F, 0x5F, 0xC3, 0xAF, 0x95, 0x13, 0x77, 0x65, 0x3C, 0x1, 0x46, 0x6E },
			PlainText = new byte[] { 0xFC, 0x72, 0x24, 0x7F, 0x5, 0xE4, 0x69, 0x23, 0x5, 0x5C, 0xD1, 0xB0, 0x4C, 0xFF, 0xC7, 0x7A, 0x2E, 0xDC, 0xE3, 0x46, 0xA8, 0xD, 0xB1, 0x2, 0x47, 0xFE, 0xB4, 0xB3, 0x46, 0xC, 0xAA, 0xAE, 0xF6, 0x52, 0x12, 0xB, 0x63, 0xBF, 0xEC, 0x57, 0x35, 0x6C, 0xC0, 0x89, 0xD4, 0x2D, 0xE1, 0x37, 0xD0, 0x67, 0xF3, 0xA, 0x7F, 0x21, 0xAB, 0x70, 0xE8, 0x5D, 0xD6, 0x90, 0xDF, 0xA8, 0x9D, 0x83, 0x72, 0xF0, 0x7, 0xC1, 0x84, 0x96, 0xBF, 0xD9, 0xB8, 0xC4, 0x18, 0x66, 0x91, 0x1, 0x4E, 0x3E, 0xD7, 0x2, 0xF, 0xEC, 0x3C, 0xC3, 0x39, 0x61, 0x3F, 0xD7, 0xE6, 0xE6, 0x51, 0xFD, 0xA6, 0x55, 0x36, 0xF3, 0xB, 0x89, 0xAF, 0x8F, 0x6B, 0x13, 0x56, 0xB, 0xE1, 0x2E, 0xC9, 0xA1, 0x95, 0xF6, 0xA, 0x57, 0x3D, 0xD4, 0x26, 0x1D, 0xE4, 0x3D, 0x15, 0x15, 0xEA, 0x9C, 0xE2, 0x32, 0x4D, 0x8C },
			CipherText = new byte[] { 0x35, 0x75, 0xA3, 0x3B, 0x34, 0x3, 0x1B, 0x7B, 0x13, 0xC9, 0x2A, 0x18, 0x64, 0x21, 0x98, 0x6F, 0x52, 0x86, 0x2C, 0x62, 0x9B, 0x48, 0xF8, 0x28, 0xA3, 0x67, 0xA0, 0x47, 0xE, 0xF7, 0x6C, 0xA, 0xDF, 0x8A, 0xD3, 0xD3, 0x80, 0xA0, 0x51, 0x28, 0xEB, 0x3E, 0x62, 0xFF, 0x7B, 0x32, 0xA, 0x25, 0xD0, 0x1, 0xC3, 0x46, 0x7E, 0xEF, 0x4D, 0x83, 0xD5, 0x1E, 0x5C, 0x9C, 0x16, 0xA0, 0x35, 0xA3, 0xE0, 0x11, 0x13, 0x7F, 0x7C, 0x3F, 0xDE, 0x65, 0x8F, 0xCB, 0x8E, 0x6E, 0x99, 0x54, 0x40, 0xBB, 0x5, 0xF2, 0xA6, 0x1F, 0xC1, 0x7, 0x4B, 0xC7, 0x41, 0x1D, 0x7A, 0xFD, 0xA1, 0xEB, 0x9B, 0x5A, 0xED, 0xA6, 0x67, 0x9D, 0x56, 0xE, 0x93, 0x16, 0xEC, 0x25, 0x0, 0xC5, 0xA7, 0x1A, 0x9B, 0x4D, 0x64, 0x11, 0x5, 0x98, 0xB3, 0x1A, 0x6B, 0x8C, 0x16, 0xC, 0xAC, 0xB7, 0xC4, 0xCE, 0x13, 0x19 }
		},
		new TestVector
		{
			Key = new byte[] { 0xC, 0x4, 0x26, 0x4B, 0x2B, 0xD2, 0x77, 0x6B, 0xD6, 0xEA, 0x23, 0xCB, 0xC5, 0x35, 0x3E, 0xC6 },
			IV = new byte[] { 0x33, 0xE, 0x87, 0xAA, 0x86, 0x54, 0x33, 0x6C, 0x32, 0xBE, 0xED, 0x9A, 0xDB, 0x6F, 0x1A, 0x90 },
			PlainText = new byte[] { 0xBA, 0xCB, 0x61, 0xEF, 0x41, 0x88, 0x6B, 0x4B, 0x2, 0x8, 0xE7, 0x24, 0xCD, 0xE6, 0xD2, 0x18, 0x18, 0xCF, 0xF5, 0x56, 0xA4, 0x93, 0xAF, 0x56, 0x5E, 0x7B, 0xF4, 0xC8, 0x84, 0xDE, 0x96, 0xCA, 0x8, 0xEF, 0xC3, 0x5D, 0x39, 0xD9, 0xD0, 0x1A, 0xA0, 0xE, 0x34, 0x21, 0x28, 0xDB, 0xD8, 0x53, 0x83, 0x41, 0x8E, 0xC1, 0xC8, 0x0, 0xDE, 0x63, 0x61, 0xF4, 0x9, 0xE, 0x24, 0xA4, 0x48, 0xA0, 0xC0, 0x19, 0x55, 0x7E, 0x5B, 0xEC, 0x2C, 0x40, 0x79, 0xA3, 0x13, 0xAA, 0x20, 0x3E, 0xD8, 0xDE, 0x3A, 0xC, 0x5A, 0xD1, 0x3A, 0xC3, 0x4A, 0xFC, 0x2, 0xD0, 0x33, 0x54, 0x4, 0xEC, 0xB8, 0x7B, 0xA8, 0xF0, 0x1E, 0x38, 0xEE, 0xEA, 0xA, 0x25, 0x55, 0x70, 0x8B, 0xA7, 0xFB, 0x34, 0x5A, 0x23, 0x5, 0xD9, 0x61, 0x6F, 0x41, 0x5, 0x7B, 0x87, 0xA, 0xB8, 0x7B, 0x82, 0x6D, 0xDC, 0x6F, 0xC4, 0x8A, 0x1D, 0x26, 0x74, 0x3C, 0xFA, 0xEF, 0x31, 0xFC, 0x1C, 0xA4, 0x0, 0x2, 0xE7, 0xE7, 0x89 },
			CipherText = new byte[] { 0x52, 0x9D, 0xD6, 0x3C, 0xF4, 0x74, 0x47, 0x81, 0xC4, 0xFE, 0x2E, 0xBB, 0x4A, 0xFC, 0xC6, 0x78, 0xB1, 0x9D, 0x7, 0x95, 0x1B, 0x69, 0x22, 0x2F, 0xA5, 0xBD, 0xF7, 0x49, 0x9F, 0xC4, 0x11, 0xF4, 0x68, 0xF0, 0x5A, 0xBA, 0xF4, 0xB6, 0xFA, 0x9D, 0xF6, 0x60, 0xD2, 0xBB, 0xFA, 0xF0, 0x0, 0x40, 0xF3, 0x48, 0x12, 0x87, 0x90, 0x2, 0xAA, 0xFB, 0x4C, 0x6B, 0x82, 0x85, 0x67, 0xB7, 0xBB, 0xFA, 0x7D, 0x13, 0x70, 0x40, 0xA2, 0x65, 0xA0, 0x94, 0xD2, 0xB9, 0x81, 0xC, 0xEE, 0xCE, 0xE7, 0xEF, 0x87, 0x1F, 0x50, 0x44, 0x28, 0x46, 0xDC, 0x1C, 0x31, 0x55, 0x92, 0xD, 0x6E, 0x35, 0xDD, 0xA8, 0xEA, 0x63, 0xD8, 0x55, 0x16, 0x77, 0xB0, 0xD1, 0x6E, 0x25, 0x8E, 0x9A, 0x38, 0x9F, 0x52, 0xE1, 0x52, 0x26, 0x75, 0x7C, 0xC0, 0xC8, 0xAE, 0xC6, 0x1B, 0xFD, 0x9E, 0xAB, 0x91, 0xEB, 0xDF, 0xFF, 0x78, 0x16, 0x45, 0xB7, 0x72, 0xEA, 0xF7, 0x26, 0x93, 0xDD, 0xB9, 0xC8, 0xC1, 0x7C, 0x7E, 0xDB }
		},
		new TestVector
		{
			Key = new byte[] { 0xAE, 0x50, 0xAC, 0x84, 0x27, 0xEE, 0xF8, 0x6E, 0x42, 0x53, 0xE7, 0x80, 0xA5, 0x9C, 0xF4, 0xE1 },
			IV = new byte[] { 0x2C, 0x47, 0x75, 0x1B, 0x8B, 0x45, 0x65, 0xCC, 0x35, 0x50, 0x66, 0x9E, 0x7D, 0x7F, 0x6, 0x78 },
			PlainText = new byte[] { 0xFB, 0x18, 0x42, 0xF6, 0x32, 0xA5, 0x49, 0x17, 0x6F, 0x4A, 0x82, 0x36, 0xF4, 0x55, 0xCF, 0x3C, 0x56, 0x17, 0x14, 0x13, 0x24, 0xF3, 0xF3, 0x5E, 0xC9, 0xB4, 0xDA, 0x67, 0xB4, 0x23, 0x40, 0x58, 0xB6, 0xDA, 0x2B, 0xAF, 0xAB, 0x53, 0xF6, 0xEC, 0x5C, 0x44, 0x51, 0x8C, 0xA4, 0x2F, 0x89, 0x3B, 0xD2, 0x34, 0xA, 0x46, 0x4F, 0x2B, 0x22, 0x4F, 0x81, 0xEF, 0x7, 0x44, 0xEE, 0xFC, 0x1C, 0x92, 0xA5, 0x3D, 0x70, 0x95, 0xDA, 0x1F, 0x87, 0x53, 0xD0, 0xEA, 0x5E, 0x6B, 0xFC, 0x51, 0xA9, 0x48, 0x67, 0x48, 0x5F, 0x9A, 0x54, 0x15, 0x78, 0x7, 0x23, 0xAA, 0xF6, 0x1D, 0x75, 0x32, 0x22, 0x8C, 0x91, 0xEA, 0x18, 0x92, 0x6, 0x32, 0x85, 0xB6, 0x92, 0xE4, 0xB0, 0xB9, 0x43, 0xE4, 0xB7, 0xCA, 0xDC, 0xF8, 0x1B, 0xF9, 0x7A, 0xDA, 0x7F, 0xEE, 0x77, 0x8C, 0xAD, 0xDB, 0x8F, 0xEC, 0xDA, 0xAF, 0x41, 0x88, 0x2B, 0x8D, 0x78, 0xB3, 0x78, 0x7C, 0x6B, 0xD9, 0x4F, 0x60, 0xC2, 0xF, 0x3C, 0x29, 0xFA, 0xEE, 0x47, 0x4A, 0xA, 0xA2, 0xBF, 0x6C, 0x47, 0x3E, 0x36, 0x64, 0x85, 0x52, 0xCD, 0x63 },
			CipherText = new byte[] { 0x3E, 0xD2, 0x8F, 0x74, 0xF8, 0x6F, 0xE5, 0x8, 0x12, 0x15, 0xA2, 0xC5, 0x56, 0x15, 0x5, 0xFA, 0x27, 0x3B, 0xCC, 0xC6, 0xD9, 0xF8, 0x7F, 0xF2, 0x22, 0xF1, 0xDC, 0xB3, 0x9B, 0xA8, 0x7E, 0xD8, 0xA, 0xF7, 0x1, 0x8C, 0x83, 0x7E, 0x8F, 0x8E, 0x4A, 0x42, 0xF6, 0x1F, 0x6A, 0x72, 0xC5, 0x69, 0xC4, 0x87, 0x97, 0xFD, 0x1B, 0x4E, 0xEF, 0xDB, 0x38, 0xF2, 0xD3, 0x89, 0x67, 0x56, 0x5, 0x37, 0x6D, 0x86, 0xBC, 0x47, 0x4D, 0x5A, 0xED, 0xA3, 0xFD, 0xFE, 0x3A, 0x81, 0x23, 0x6, 0x25, 0x9, 0xB2, 0x28, 0x26, 0x75, 0x24, 0xC6, 0x6, 0x1, 0xD5, 0x37, 0x9E, 0x84, 0x92, 0x10, 0x17, 0x3B, 0xB2, 0x21, 0xF6, 0x14, 0x3F, 0x18, 0xE3, 0x67, 0x3F, 0xB4, 0x5A, 0xDC, 0xCD, 0xF5, 0x1F, 0x76, 0xDB, 0x21, 0x49, 0x68, 0x6A, 0xFE, 0xB7, 0xE5, 0x99, 0xCD, 0x15, 0x49, 0xCC, 0xA6, 0x7B, 0x46, 0x1, 0xB7, 0x1E, 0xFE, 0xBA, 0xB5, 0xDE, 0x32, 0xB2, 0xF7, 0x12, 0x5E, 0xA6, 0xAB, 0x86, 0x96, 0xFF, 0xEC, 0x9B, 0x4A, 0x23, 0x1A, 0xB1, 0x8F, 0xBB, 0x6A, 0x39, 0x48, 0x49, 0xF1, 0x44, 0x67 }
		}
	};

		[Fact]
		public void LEA256_CFB_Encryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.LEA.CFB();

			for (var i = 0; i < Lea256CfbTestVectors.Length; i++)
			{
				var testvector = Lea256CfbTestVectors[i];

				// Act
				cipher.Init(Mode.ENCRYPT, testvector.Key, testvector.IV);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-256-CFB encryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA256_CFB_Decryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.LEA.CFB();

			for (var i = 0; i < Lea256CfbTestVectors.Length; i++)
			{
				var testvector = Lea256CfbTestVectors[i];

				// Act
				cipher.Init(Mode.DECRYPT, testvector.Key, testvector.IV);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-256-CFB decryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA192_CFB_Encryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.LEA.CFB();

			for (var i = 0; i < Lea192CfbTestVectors.Length; i++)
			{
				var testvector = Lea192CfbTestVectors[i];

				// Act
				cipher.Init(Mode.ENCRYPT, testvector.Key, testvector.IV);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-192-CFB encryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA192_CFB_Decryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.LEA.CFB();

			for (var i = 0; i < Lea192CfbTestVectors.Length; i++)
			{
				var testvector = Lea192CfbTestVectors[i];

				// Act
				cipher.Init(Mode.DECRYPT, testvector.Key, testvector.IV);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-192-CFB decryption test case #" + (i + 1));
			}
		}


		[Fact]
		public void LEA128_CFB_Encryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.LEA.CFB();

			for (var i = 0; i < Lea128CfbTestVectors.Length; i++)
			{
				var testvector = Lea128CfbTestVectors[i];

				// Act
				cipher.Init(Mode.ENCRYPT, testvector.Key, testvector.IV);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-128-CFB encryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA128_CFB_Decryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.LEA.CFB();

			for (var i = 0; i < Lea128CfbTestVectors.Length; i++)
			{
				var testvector = Lea128CfbTestVectors[i];

				// Act
				cipher.Init(Mode.DECRYPT, testvector.Key, testvector.IV);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-128-CFB decryption test case #" + (i + 1));
			}
		}
	}
}