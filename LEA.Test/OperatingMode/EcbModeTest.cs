using static LEA.BlockCipher;

namespace LEA.Test.OpMode
{
	public class EcbModeTest
	{
		private readonly TestVector[] lea256EcbTestVectors =
		{
		new TestVector
		{
			Key = new byte[] { 0x4F, 0x67, 0x79, 0xE2, 0xBD, 0x1E, 0x93, 0x19, 0xC6, 0x30, 0x15, 0xAC, 0xFF, 0xEF, 0xD7, 0xA7, 0x91, 0xF0, 0xED, 0x59, 0xDF, 0x1B, 0x70, 0x07, 0x69, 0xFE, 0x82, 0xE2, 0xF0, 0x66, 0x8C, 0x35 },
			PlainText = new byte[] { 0xDC, 0x31, 0xCA, 0xE3, 0xDA, 0x5E, 0x0A, 0x11, 0xC9, 0x66, 0xB0, 0x20, 0xD7, 0xCF, 0xFE, 0xDE },
			CipherText = new byte[] { 0xED, 0xA2, 0x04, 0x20, 0x98, 0xF6, 0x67, 0xE8, 0x57, 0xA0, 0x2D, 0xB8, 0xCA, 0xA7, 0xDF, 0xF2 }
		},
		new TestVector
		{
			Key = new byte[] { 0xE7, 0xFE, 0x92, 0xFD, 0x37, 0x4D, 0x30, 0xC4, 0x3F, 0x5D, 0xC2, 0x04, 0xDC, 0xAE, 0x9D, 0x4E, 0xAD, 0x6C, 0x06, 0x63, 0xBD, 0x8C, 0xF5, 0xEC, 0x63, 0x18, 0x19, 0x6B, 0x67, 0xC7, 0x1B, 0x72 },
			PlainText = new byte[] { 0x66, 0xD1, 0x27, 0x13, 0x78, 0x01, 0xA9, 0x97, 0x0F, 0x0C, 0x54, 0x72, 0x23, 0x21, 0x69, 0x77, 0x8C, 0xC1, 0x36, 0x49, 0xAF, 0xD1, 0xDD, 0x12, 0x5C, 0xEE, 0x56, 0x77, 0xF7, 0x00, 0xB7, 0xCB },
			CipherText = new byte[] { 0x16, 0xBF, 0xF1, 0x49, 0xDF, 0xA2, 0x34, 0xBF, 0x7F, 0xBE, 0x2C, 0x59, 0xAE, 0x88, 0xA1, 0xE9, 0x9A, 0x1B, 0xF8, 0xD9, 0x19, 0x10, 0xA7, 0xF6, 0x7D, 0x08, 0x84, 0x32, 0xE1, 0xC6, 0xD7, 0x90 }
		},
		new TestVector
		{
			Key = new byte[] { 0xD6, 0x12, 0xB3, 0x82, 0xEB, 0x61, 0x61, 0xE9, 0xA3, 0xB2, 0x3F, 0x15, 0x0D, 0xE9, 0x77, 0x19, 0x3F, 0xD8, 0x61, 0x7D, 0xF6, 0x55, 0x48, 0xEB, 0x7C, 0x8F, 0x71, 0x2A, 0xCF, 0xA2, 0x59, 0x51},
			PlainText = new byte[] {0xFF, 0x68, 0x3F, 0x34, 0xD8, 0x92, 0xE2, 0x23, 0xC1, 0xF8, 0x8C, 0xD4, 0xE4, 0x2E, 0x4F, 0x9D, 0x8F, 0x58, 0x8F, 0xE6, 0xDA, 0x3F, 0xC1, 0xDF, 0x8B, 0xA4, 0x71, 0x6E, 0x36, 0xD4, 0x8A, 0x6C, 0xA9, 0x7C, 0xD2, 0x10, 0x87, 0xBF, 0xB4, 0xAB, 0x32, 0x86, 0x42, 0x96, 0xEE, 0x17, 0x7A, 0x69},
			CipherText = new byte[] {0x7B, 0xC5, 0xE4, 0xE4, 0xD9, 0xC4, 0xB5, 0xC4, 0x69, 0x4F, 0x55, 0x80, 0x89, 0x66, 0x71, 0xB5, 0xF5, 0x83, 0x24, 0xB6, 0x20, 0x05, 0xC8, 0xF8, 0xA5, 0x2A, 0x65, 0xAA, 0x8E, 0x1A, 0x9B, 0x01, 0xDC, 0x90, 0xBA, 0xC0, 0x81, 0x70, 0x13, 0xAD, 0x6C, 0x9D, 0xD0, 0xF2, 0x16, 0x40, 0x3D, 0x6B},
		},
		new TestVector
		{
			Key = new byte[] { 0x44, 0xEA, 0xC8, 0x6E, 0xA5, 0xB7, 0xCD, 0x56, 0x50, 0xD4, 0x5F, 0x2A, 0x76, 0xBE, 0xD1, 0x84, 0x9B, 0xF6, 0x74, 0xFE, 0x3F, 0x0E, 0x5D, 0xEB, 0xBE, 0x03, 0x69, 0x45, 0x75, 0xCD, 0x7F, 0xE7},
			PlainText = new byte[] { 0x26, 0x35, 0x15, 0xFC, 0x9D, 0xE7, 0xF6, 0xB8, 0x94, 0xC8, 0x42, 0x46, 0xD5, 0x89, 0xB6, 0x01, 0x9E, 0x7D, 0x2D, 0xE6, 0x49, 0xA7, 0x67, 0x49, 0x2C, 0x18, 0x0A, 0xC8, 0xBF, 0x78, 0xE6, 0x7E, 0xFC, 0xE2, 0x7D, 0x79, 0x0C, 0xF5, 0xC3, 0x6D, 0x1F, 0x27, 0x22, 0xA9, 0x9C, 0x5D, 0xC1, 0x4B, 0x7A, 0xB9, 0x06, 0xB0, 0xED, 0xB3, 0x5A, 0x2F, 0x46, 0x6C, 0x2C, 0x07, 0x14, 0x3E, 0x38, 0x95 },
			CipherText = new byte[] { 0xAB, 0x39, 0x50, 0x86, 0xE9, 0x23, 0x8A, 0x16, 0x01, 0x2D, 0xB0, 0x48, 0x44, 0x02, 0x83, 0x40, 0xC2, 0x1C, 0x55, 0x7A, 0xAD, 0x92, 0xC0, 0xAC, 0xA2, 0xD2, 0x61, 0xEF, 0x3A, 0x0F, 0x89, 0xF9, 0xF0, 0x60, 0x46, 0x2F, 0x79, 0x87, 0x9B, 0x10, 0xC6, 0xA9, 0xA1, 0xC1, 0x68, 0xDC, 0xBF, 0xE8, 0x73, 0x1E, 0x51, 0x76, 0x60, 0x4E, 0xEB, 0x14, 0xCA, 0x14, 0x42, 0xD1, 0x51, 0x73, 0xC5, 0xCF },
		},
		new TestVector
		{
			Key = new byte[] { 0x90, 0x98, 0x09, 0xCB, 0x38, 0x09, 0xBC, 0xDD, 0xB9, 0x9A, 0x08, 0x3D, 0x12, 0x61, 0x7B, 0xCA, 0xF7, 0x53, 0x06, 0x45, 0x73, 0x5A, 0xBC, 0x04, 0xD2, 0xA8, 0xD7, 0xEA, 0xBE, 0x4A, 0xFC, 0x96 },
			PlainText = new byte[] { 0xA8, 0x00, 0xC0, 0xDB, 0x6A, 0x4C, 0x6A, 0x70, 0x2A, 0xC9, 0xFA, 0xE9, 0x81, 0xBE, 0x6B, 0xE6, 0xDC, 0xF3, 0x36, 0x8B, 0x23, 0xC3, 0x17, 0x30, 0x99, 0x73, 0x13, 0x59, 0x04, 0xC2, 0xBA, 0xE8, 0x0D, 0xC1, 0xAA, 0x91, 0xE9, 0xE5, 0x54, 0x8F, 0x39, 0x5B, 0x03, 0x95, 0x2F, 0x9B, 0x1A, 0x08, 0xF3, 0x40, 0x9C, 0x6B, 0x45, 0x17, 0xF2, 0x1B, 0x63, 0x76, 0xE9, 0x3C, 0x2D, 0xCF, 0xFB, 0xF3, 0x87, 0x84, 0xCF, 0xD5, 0xFF, 0xFD, 0x03, 0xA0, 0xB0, 0xF9, 0x28, 0x29, 0x65, 0x21, 0x0E, 0x96 },
			CipherText = new byte[] { 0x2A, 0x50, 0xFA, 0x90, 0xED, 0x00, 0xEB, 0xFA, 0x11, 0x88, 0xCC, 0x91, 0x13, 0xDD, 0x43, 0x37, 0xB3, 0x80, 0xD5, 0xF8, 0xC1, 0x58, 0x2C, 0x80, 0x77, 0xEC, 0x67, 0x28, 0xEC, 0x31, 0x8A, 0xB4, 0x5D, 0xE5, 0xEF, 0xD1, 0xD0, 0xA6, 0x2E, 0x4E, 0x87, 0x03, 0x52, 0x83, 0x2B, 0xEC, 0x22, 0x3D, 0x8D, 0x5D, 0xCD, 0x39, 0x72, 0x09, 0xC8, 0x24, 0xE4, 0xA9, 0x57, 0xF6, 0x5D, 0x78, 0x5B, 0xA5, 0xD7, 0xF9, 0xA4, 0xCC, 0x5D, 0x0B, 0x35, 0x35, 0x28, 0xDB, 0xCC, 0xA6, 0x35, 0x48, 0x66, 0x8A }
		},
		new TestVector
		{
			Key = new byte []{ 0x02, 0xE3, 0x42, 0xCD, 0x20, 0x7D, 0xD6, 0x2D, 0xF8, 0x58, 0x60, 0x7B, 0x82, 0x98, 0x45, 0x1F, 0xDE, 0xF1, 0x38, 0x90, 0xF2, 0xBC, 0xFD, 0x0D, 0x55, 0x4A, 0x73, 0x8E, 0x6B, 0x78, 0xD1, 0xFA },
			PlainText = new byte[] { 0xD2, 0x83, 0x30, 0x9A, 0xFD, 0x1E, 0x4A, 0xCE, 0x1F, 0xC2, 0x81, 0xFE, 0x4B, 0x46, 0x23, 0xD4, 0xD9, 0xAF, 0xEC, 0xA8, 0x0B, 0x49, 0xCC, 0x3C, 0xF1, 0xF7, 0xEB, 0xAA, 0x89, 0xC7, 0xEB, 0x9A, 0x2B, 0xC9, 0x6D, 0xB8, 0x24, 0x22, 0xD6, 0x66, 0xA2, 0x5C, 0x53, 0xAD, 0xD0, 0x00, 0x1A, 0x7A, 0x41, 0x67, 0xF3, 0x07, 0x92, 0xCD, 0xF7, 0x97, 0x4B, 0xA7, 0x98, 0x66, 0x07, 0x36, 0xE2, 0xE0, 0xD5, 0x5D, 0x01, 0x11, 0xDD, 0xB0, 0x02, 0x5D, 0x47, 0xCD, 0xDE, 0x71, 0x58, 0xEF, 0xB4, 0x79, 0xDE, 0xC0, 0x56, 0x93, 0xCF, 0x6F, 0x07, 0x84, 0x2D, 0x03, 0x83, 0xAB, 0x2C, 0xEF, 0x40, 0x33 },
			CipherText = new byte[] { 0x24, 0x7F, 0x64, 0xE0, 0x4D, 0x91, 0xEC, 0xA4, 0x84, 0xBE, 0x9D, 0x60, 0xF6, 0x78, 0xEF, 0xE6, 0x97, 0x5C, 0xAE, 0x82, 0xD7, 0x2E, 0xAD, 0x27, 0x0F, 0x6D, 0xD2, 0xEA, 0x6D, 0x63, 0x36, 0x1E, 0xB8, 0x8F, 0x6F, 0xA6, 0xF5, 0x8F, 0xAE, 0xBC, 0x1A, 0x16, 0xAB, 0xE6, 0xE5, 0xD9, 0x29, 0x39, 0xB6, 0x69, 0xE0, 0xC5, 0x5E, 0xB6, 0x67, 0xE9, 0xAE, 0x00, 0x52, 0xD7, 0x47, 0xC0, 0xB1, 0xD5, 0xA5, 0xF7, 0x1A, 0xD6, 0x59, 0xC2, 0x97, 0xB0, 0xD0, 0xA4, 0x5E, 0xA2, 0xA5, 0x08, 0x88, 0x52, 0x19, 0x8F, 0xC8, 0x8D, 0xBB, 0xAB, 0x1A, 0x9A, 0xB8, 0x3C, 0x67, 0xF7, 0x37, 0x76, 0x9B, 0x60 }
		},
		new TestVector
		{
			Key = new byte []{ 0x97, 0xE6, 0xF4, 0x8C, 0x70, 0xF0, 0x57, 0x1B, 0xD7, 0xBE, 0x2A, 0x30, 0x2C, 0x3A, 0x78, 0x39, 0x78, 0x63, 0x1C, 0x36, 0x09, 0x58, 0x83, 0x6D, 0x5D, 0xB2, 0xB3, 0x5F, 0x42, 0x17, 0x8C, 0xFA },
			PlainText = new byte[] { 0x3A, 0x0D, 0x4E, 0x10, 0x24, 0x0B, 0x5C, 0x08, 0x19, 0xD6, 0x40, 0xD4, 0x95, 0x0B, 0xEE, 0x23, 0xD7, 0xF7, 0x4D, 0xD7, 0x8A, 0xAF, 0xF3, 0xB9, 0xA4, 0x5D, 0x30, 0x6B, 0x8F, 0xD9, 0x4F, 0x9F, 0x87, 0x79, 0x18, 0x87, 0x43, 0x29, 0x9A, 0x8C, 0xD7, 0xBE, 0x27, 0x43, 0xD9, 0x87, 0x9F, 0x9D, 0xC2, 0x25, 0xF2, 0x5E, 0x98, 0x9D, 0xE0, 0xD0, 0xCA, 0xAC, 0x03, 0xB8, 0x5C, 0x5B, 0x10, 0x89, 0x43, 0xD2, 0x5A, 0xD8, 0x13, 0x71, 0x97, 0x10, 0xD7, 0x1D, 0xE7, 0x67, 0x40, 0xD8, 0x12, 0x10, 0x03, 0x95, 0x11, 0xB2, 0x7C, 0x4A, 0xD1, 0x1A, 0x97, 0x46, 0x33, 0x2D, 0xF0, 0xC5, 0x57, 0x20, 0x39, 0xC2, 0x1A, 0xEB, 0xDD, 0x0C, 0xDD, 0xFA, 0xE2, 0x9C, 0x89, 0x26, 0x14, 0x26, 0xCF, 0xE5 },
			CipherText = new byte[] { 0xBE, 0xAB, 0xF6, 0x23, 0x47, 0xC9, 0xDD, 0xC6, 0x8D, 0x33, 0x01, 0x57, 0x57, 0xF5, 0x30, 0x9C, 0xC1, 0x1E, 0x9C, 0xAD, 0xBA, 0xE3, 0xE0, 0xBC, 0xCD, 0x25, 0xCF, 0x01, 0xFC, 0x31, 0xF6, 0x89, 0x87, 0xC5, 0x05, 0x5A, 0x41, 0x34, 0x7C, 0x4E, 0x0D, 0x05, 0x46, 0x03, 0xD3, 0xFF, 0x32, 0x9C, 0xC9, 0x06, 0x59, 0x23, 0xD0, 0x1A, 0x11, 0xE7, 0xD9, 0x5D, 0xFD, 0x52, 0x08, 0xFE, 0xF6, 0x51, 0x22, 0x10, 0x2F, 0x9D, 0x50, 0xB4, 0x45, 0x98, 0x39, 0xF3, 0x72, 0x0C, 0xE2, 0x43, 0x10, 0xFD, 0xB2, 0x12, 0x4C, 0x4E, 0x7C, 0xEB, 0x6D, 0x75, 0x48, 0xC6, 0x84, 0x18, 0x52, 0xB7, 0xA6, 0x40, 0x19, 0xD2, 0xCA, 0xC9, 0x95, 0xF6, 0xB8, 0x4A, 0x00, 0xBE, 0xD3, 0x86, 0xFC, 0xDC, 0xD9, 0x6A }
		},
		new TestVector
		{
			Key = new byte []{ 0x60, 0xEE, 0xB5, 0xBD, 0x7E, 0xDD, 0x4E, 0xFF, 0xD3, 0xD4, 0xC8, 0xB1, 0x95, 0x40, 0xAD, 0xCC, 0x30, 0xEF, 0x62, 0xA8, 0xE8, 0x22, 0xF4, 0xB4, 0xC0, 0xE3, 0x13, 0x6A, 0x9B, 0x98, 0x5F, 0x82 },
			PlainText = new byte[] { 0xA2, 0xD9, 0xE3, 0x66, 0xE5, 0x7F, 0xDF, 0xE7, 0x45, 0xFD, 0xCB, 0x2E, 0x91, 0xF4, 0x98, 0xF5, 0xEF, 0x01, 0x39, 0xF7, 0x7E, 0xDA, 0x62, 0xA4, 0x39, 0x99, 0x90, 0x1A, 0x1F, 0x57, 0x49, 0x51, 0x91, 0xFD, 0xA5, 0x95, 0xFB, 0x57, 0x0D, 0x3A, 0xB6, 0x6A, 0x43, 0x8B, 0x2D, 0x08, 0xA2, 0x03, 0x3F, 0xA1, 0xA8, 0xC0, 0xE5, 0x5C, 0xB1, 0x34, 0x15, 0x66, 0x05, 0x1E, 0xE6, 0x8A, 0x15, 0xB8, 0xF4, 0x03, 0x02, 0x32, 0x06, 0x8E, 0x5F, 0x60, 0xEE, 0xC3, 0x38, 0xB0, 0xB1, 0xA4, 0x53, 0x5E, 0xE8, 0x77, 0xB5, 0xEB, 0x66, 0xD1, 0x68, 0xCB, 0x1B, 0xF4, 0x7C, 0x5E, 0x38, 0x5A, 0x4C, 0x21, 0x94, 0x92, 0x03, 0x26, 0x4F, 0x4B, 0x5E, 0xC1, 0xB5, 0xAF, 0xB3, 0x85, 0x65, 0xF2, 0x32, 0x6E, 0xB2, 0x2A, 0x6B, 0x60, 0x49, 0x61, 0x10, 0xD0, 0x14, 0xE8, 0xFC, 0xC1, 0x5F, 0xEF, 0x75, 0xF3 },
			CipherText = new byte[] { 0xB9, 0x7E, 0x56, 0xC7, 0xBE, 0xD6, 0xB2, 0x7C, 0xAD, 0x1F, 0x79, 0xEE, 0xFB, 0x1B, 0x4C, 0x04, 0x55, 0x9B, 0x86, 0x32, 0xBC, 0x57, 0x67, 0x73, 0x4E, 0x66, 0xC4, 0x02, 0xB4, 0x06, 0xB6, 0x68, 0x2C, 0x4D, 0xC1, 0x98, 0xF0, 0xD6, 0x40, 0x98, 0x27, 0x89, 0xB8, 0x7D, 0xBC, 0x6E, 0xDA, 0x19, 0x14, 0xA9, 0xE2, 0x1A, 0xAF, 0xFD, 0xFC, 0x36, 0x0C, 0xA7, 0x7E, 0xA3, 0x4C, 0xE7, 0x3D, 0xCB, 0x1E, 0x42, 0xA6, 0x1E, 0x5A, 0x3D, 0x01, 0xA9, 0xD5, 0xCB, 0x1A, 0x8D, 0x8C, 0xAE, 0xC8, 0xAD, 0xAA, 0x23, 0x17, 0x28, 0x7E, 0x48, 0xF4, 0x50, 0xC9, 0x33, 0xEF, 0x3B, 0xF9, 0x38, 0xA0, 0x60, 0x92, 0x93, 0x07, 0xE0, 0x82, 0xD0, 0x6E, 0x60, 0x61, 0xD3, 0xEE, 0xFE, 0xBB, 0xA6, 0x9F, 0xCC, 0x43, 0xFE, 0xC4, 0xBA, 0x75, 0xE7, 0x7F, 0x1F, 0x63, 0x31, 0xB9, 0x93, 0xBB, 0x5E, 0x58, 0xD6 }
		},
		new TestVector
		{
			Key = new byte []{ 0x3A, 0x53, 0xAE, 0x57, 0x1E, 0xB7, 0x90, 0xC5, 0xD3, 0xD6, 0xBA, 0xF1, 0x90, 0x17, 0xC7, 0x9C, 0x65, 0x63, 0xCF, 0x07, 0xD6, 0x33, 0x30, 0xAD, 0xC9, 0xED, 0x8E, 0x31, 0xA2, 0x70, 0x18, 0x96 },
			PlainText = new byte[] { 0xAC, 0xED, 0x0D, 0xAE, 0xBB, 0xFA, 0x7F, 0xD5, 0x0F, 0xE1, 0x58, 0xDF, 0x7C, 0x3E, 0x9A, 0x4E, 0xC8, 0xC9, 0xEB, 0xC8, 0x55, 0x70, 0x50, 0xC9, 0xFF, 0xA9, 0x39, 0x96, 0x48, 0x06, 0xBE, 0x72, 0xB3, 0x09, 0x28, 0x13, 0x6D, 0x3B, 0xB3, 0x57, 0x32, 0x78, 0x92, 0x34, 0x6F, 0x8D, 0x34, 0xED, 0xA4, 0x05, 0xC6, 0x8C, 0x0D, 0x3F, 0xF9, 0x8C, 0x81, 0xC4, 0x05, 0xD6, 0x9A, 0xD8, 0xEE, 0xEF, 0x16, 0x4F, 0x05, 0x6F, 0x7D, 0xA2, 0xB3, 0xB5, 0x04, 0x42, 0x72, 0xD9, 0xB2, 0x2C, 0x1C, 0xE2, 0xC1, 0xBE, 0x68, 0x39, 0x47, 0xC9, 0xB1, 0x5E, 0x16, 0xE7, 0xFA, 0xDA, 0xE0, 0x0F, 0x30, 0x75, 0x9F, 0x66, 0xAE, 0xA8, 0x33, 0x58, 0x07, 0x55, 0x4D, 0xE8, 0xFF, 0xB6, 0x8D, 0x44, 0xDA, 0x94, 0xE7, 0x9D, 0xDA, 0xB9, 0x4B, 0x35, 0x03, 0xA7, 0x85, 0xBA, 0x21, 0x8A, 0x62, 0xD2, 0x0C, 0x6C, 0x14, 0xF7, 0x2B, 0xA8, 0xD7, 0x85, 0x37, 0xA1, 0xD5, 0x11, 0x41, 0xB3, 0x47, 0xFD, 0xF7, 0x6A },
			CipherText = new byte[] { 0xD0, 0xF2, 0x13, 0x40, 0xB9, 0x14, 0x95, 0x7E, 0x0E, 0x5C, 0x18, 0x03, 0x76, 0xF4, 0xA2, 0xB3, 0xEB, 0x50, 0xEA, 0x17, 0x15, 0x14, 0x24, 0x62, 0x09, 0xFF, 0x25, 0x9A, 0x32, 0xED, 0xDF, 0x71, 0xEF, 0x81, 0x9A, 0xEE, 0xED, 0x29, 0x36, 0xB1, 0xE8, 0xFB, 0x5B, 0x90, 0xFB, 0x39, 0x94, 0x68, 0xA4, 0x98, 0xB5, 0x01, 0xDE, 0xDA, 0x92, 0x80, 0x77, 0x0D, 0x90, 0x3C, 0xD8, 0x18, 0x98, 0xEC, 0xFF, 0xD1, 0x5C, 0x3F, 0x27, 0xAC, 0x0F, 0xC2, 0xC8, 0x58, 0x6B, 0x7E, 0x00, 0x59, 0xE5, 0xE4, 0xFA, 0xFF, 0x0E, 0x2F, 0xEE, 0x1D, 0xA1, 0xCC, 0xB1, 0x45, 0xCD, 0xFD, 0xF3, 0xCA, 0x9E, 0x12, 0xBF, 0xC5, 0xF6, 0x42, 0xDF, 0xCF, 0x73, 0xF0, 0xD7, 0x14, 0x69, 0x69, 0xF8, 0xC4, 0xE0, 0x50, 0xF8, 0x3C, 0x9F, 0xBD, 0x71, 0xCD, 0xD3, 0x9E, 0xF7, 0x45, 0x40, 0xBB, 0xE9, 0xFD, 0xF9, 0x4E, 0xB2, 0xBA, 0x54, 0x3E, 0x55, 0x62, 0x02, 0xED, 0xE1, 0x3C, 0x71, 0x08, 0xA9, 0xFD, 0x50, 0xB1 }
		},
		new TestVector
		{
			Key = new byte []{ 0xDE, 0x49, 0x23, 0xF2, 0x61, 0xAC, 0x74, 0xCF, 0x97, 0xE4, 0x81, 0xCE, 0x67, 0x4A, 0x0B, 0x3C, 0x3E, 0xA9, 0x82, 0x55, 0xB1, 0x50, 0xCB, 0xFF, 0x64, 0x66, 0x41, 0xB9, 0x2A, 0x7E, 0xFA, 0xCE },
			PlainText = new byte[] { 0x6D, 0x6B, 0x4B, 0xCE, 0xD1, 0x56, 0x8E, 0x3E, 0x14, 0x0E, 0x22, 0x8F, 0x39, 0x9E, 0xB4, 0x4D, 0xE5, 0x25, 0xBD, 0x99, 0x09, 0xE2, 0x4C, 0xD9, 0xC1, 0x8F, 0x06, 0xAE, 0x7C, 0xF0, 0x6B, 0x27, 0x5E, 0xAB, 0x5B, 0x34, 0xE2, 0x5A, 0xD8, 0x5D, 0xC4, 0xDF, 0x0D, 0xB3, 0x1E, 0xF7, 0x8F, 0x07, 0xD1, 0x13, 0xE4, 0x5B, 0x26, 0x63, 0x42, 0x96, 0xB5, 0x33, 0x98, 0x7C, 0x86, 0x7A, 0xD3, 0xDC, 0x77, 0xB0, 0x5A, 0x0B, 0xDD, 0xE1, 0xDA, 0x92, 0x6E, 0x00, 0x49, 0x24, 0x5F, 0x7D, 0x25, 0xD3, 0xC9, 0x19, 0xFD, 0x83, 0x51, 0xFA, 0x33, 0x9E, 0x08, 0xFA, 0x00, 0x09, 0x90, 0x45, 0xB8, 0x57, 0x81, 0x23, 0x50, 0x3D, 0x0A, 0x12, 0x1D, 0x46, 0xDC, 0x18, 0xDE, 0xC8, 0x43, 0x57, 0xFD, 0x17, 0x96, 0xE2, 0x12, 0xF8, 0xD2, 0xCF, 0xA9, 0x59, 0x82, 0x8E, 0x45, 0x3F, 0xE2, 0x79, 0xA5, 0xFF, 0x43, 0xAB, 0x45, 0xB1, 0xB1, 0x16, 0x28, 0xE2, 0xD4, 0xD0, 0xD5, 0x89, 0x14, 0xAE, 0xA0, 0x3C, 0x00, 0x14, 0x2A, 0xA4, 0xF1, 0x0B, 0x2B, 0x2F, 0xEA, 0x94, 0x6F, 0x04, 0xC3, 0x3D, 0x1F, 0x3C },
			CipherText = new byte[] { 0xB7, 0x3A, 0x00, 0x64, 0xA4, 0x29, 0xEB, 0xE6, 0xA7, 0xCF, 0x35, 0xD7, 0xAD, 0xB9, 0x4F, 0x24, 0xA2, 0xA0, 0xFF, 0x7A, 0x1D, 0x83, 0x55, 0x22, 0x45, 0x3A, 0x67, 0xEB, 0x8F, 0xB4, 0xFE, 0xD6, 0x3D, 0xA5, 0x1D, 0x96, 0x34, 0xFF, 0x4C, 0x70, 0xA7, 0x64, 0xDF, 0x3F, 0x6F, 0x37, 0x63, 0xE0, 0xD3, 0x84, 0x56, 0x30, 0x77, 0x42, 0x19, 0xA8, 0x19, 0xC2, 0x6E, 0xAD, 0xFD, 0x3B, 0x93, 0x19, 0x99, 0x35, 0xA9, 0x5B, 0xD4, 0xA9, 0x51, 0xD4, 0x46, 0x77, 0x23, 0xE1, 0x2F, 0xBA, 0x1C, 0xA4, 0xE8, 0xB1, 0x35, 0xFA, 0x1F, 0xB9, 0xED, 0x9F, 0xAA, 0x7F, 0xDC, 0x79, 0xD2, 0x85, 0x7F, 0x78, 0xAC, 0x8D, 0x8C, 0x39, 0xC1, 0x1D, 0x33, 0xD0, 0xAE, 0x58, 0xB6, 0xE5, 0xE0, 0xEF, 0x78, 0x19, 0x5C, 0x0C, 0x82, 0x14, 0xAB, 0x7D, 0x3A, 0x82, 0xB9, 0x1F, 0x9A, 0x7B, 0xBE, 0x89, 0xD6, 0xA0, 0x79, 0x6E, 0x9D, 0xEB, 0xC6, 0x9A, 0xEE, 0x88, 0x11, 0x01, 0x1B, 0x9D, 0x48, 0xEE, 0xCD, 0x8D, 0xB7, 0xBF, 0x71, 0x56, 0x6E, 0xA6, 0xD8, 0xA0, 0x85, 0x8E, 0x59, 0x64, 0x32, 0xE1, 0x80, 0x3D }
		}
	};
		private readonly TestVector[] lea192EcbTestVectors =
		{
		new TestVector
		{
			Key = new byte[] { 0x14, 0x37, 0xAF, 0x53, 0x30, 0x69, 0xBD, 0x75, 0x25, 0xC1, 0x56, 0xC, 0x78, 0xBA, 0xD2, 0xA1, 0xE5, 0x34, 0x67, 0x1C, 0x0, 0x7E, 0xF2, 0x7C },
			PlainText = new byte[] { 0x1C, 0xB4, 0xF4, 0xCB, 0x6C, 0x4B, 0xDB, 0x51, 0x68, 0xEA, 0x84, 0x9, 0x72, 0x7B, 0xFD, 0x51 },
			CipherText = new byte[] { 0x69, 0x72, 0x5C, 0x6D, 0xF9, 0x12, 0xF8, 0xB7, 0xE, 0xB5, 0x11, 0xE6, 0x66, 0x3C, 0x58, 0x70 }
		},
		new TestVector
		{
			Key = new byte[] { 0xBA, 0x83, 0x8F, 0xE5, 0x5F, 0xAE, 0xFC, 0xE, 0xD7, 0xAF, 0x5, 0x17, 0x90, 0x46, 0x2F, 0x1, 0xD7, 0xA2, 0xC7, 0x78, 0xFA, 0xEA, 0x24, 0x5 },
			PlainText = new byte[] { 0xA9, 0x17, 0x2C, 0x84, 0xA2, 0x4, 0x1A, 0xD9, 0x8E, 0xC8, 0x7E, 0xDF, 0x25, 0x43, 0x84, 0xA1, 0x99, 0xF7, 0x7A, 0xCD, 0x32, 0x19, 0x8D, 0x65, 0x35, 0xE8, 0xD3, 0xB8, 0xB, 0x3E, 0x8F, 0x91 },
			CipherText = new byte[] { 0xC6, 0xC5, 0xF9, 0x8E, 0x4C, 0x63, 0x3E, 0x74, 0x63, 0x51, 0x88, 0x15, 0xBF, 0x90, 0x87, 0xC0, 0x28, 0x9D, 0xEB, 0xA, 0x1B, 0x16, 0xA9, 0xAF, 0x31, 0xFE, 0xE6, 0x44, 0x55, 0xA1, 0xD0, 0x25 }
		},
		new TestVector
		{
			Key = new byte[] { 0x9F, 0x65, 0xB0, 0xAE, 0x8, 0x2B, 0x9A, 0x73, 0x68, 0x39, 0x29, 0xE0, 0x14, 0xA0, 0xF3, 0xC1, 0xF5, 0xB5, 0xCE, 0x24, 0x2E, 0x1F, 0x93, 0x10 },
			PlainText = new byte[] { 0xFE, 0x2E, 0x21, 0x74, 0xE8, 0x6F, 0xA4, 0x5E, 0x12, 0x7D, 0x17, 0x6D, 0xEC, 0x19, 0x7, 0x89, 0x11, 0x7D, 0x9A, 0xD1, 0x72, 0xEE, 0xD1, 0xD5, 0xB1, 0x91, 0xA, 0x6, 0xCB, 0x7F, 0xC9, 0x6B, 0xFA, 0x1B, 0xB7, 0x95, 0xDA, 0xA4, 0xEB, 0xD4, 0xCA, 0x6, 0x69, 0xAB, 0x95, 0xF6, 0xE8, 0x82 },
			CipherText = new byte[] { 0xB4, 0x65, 0x59, 0x7F, 0x4D, 0xD7, 0x6E, 0x34, 0x2F, 0x8F, 0xCA, 0x5D, 0xD, 0x9, 0x5C, 0xA9, 0x47, 0x9F, 0x6A, 0xB6, 0xEC, 0x86, 0xAC, 0x51, 0xF9, 0xF3, 0x72, 0x44, 0x8A, 0xB3, 0xCA, 0xB7, 0x3F, 0x5, 0x17, 0x4, 0xFB, 0xD3, 0x50, 0xB2, 0xD2, 0xEB, 0x2B, 0x27, 0xB, 0x41, 0x6A, 0x4D }
		},
		new TestVector
		{
			Key = new byte[] { 0x52, 0x3D, 0xD9, 0x9B, 0x88, 0x54, 0xA4, 0x47, 0x96, 0x32, 0x35, 0x5A, 0x52, 0x62, 0xB7, 0xDC, 0xF1, 0x58, 0x9F, 0x1, 0x27, 0x5, 0xED, 0x5B },
			PlainText = new byte[] { 0x8E, 0xA9, 0xAE, 0x4F, 0x4C, 0xE9, 0xC6, 0xC6, 0xF1, 0x21, 0xEC, 0x24, 0x9E, 0xFB, 0xF6, 0x7E, 0x6C, 0x41, 0x57, 0x8, 0xB, 0xEF, 0xE6, 0xCC, 0xAA, 0x8D, 0xE1, 0xA2, 0x17, 0xBB, 0x31, 0x5C, 0x28, 0xE, 0xEF, 0x41, 0x59, 0x1A, 0x28, 0xBD, 0xB6, 0xD0, 0xDD, 0x56, 0xFC, 0xB, 0x4E, 0xE2, 0xFB, 0x65, 0x79, 0xF7, 0x3E, 0x4F, 0xDD, 0xA4, 0xEE, 0x61, 0x83, 0x5E, 0xF4, 0xEE, 0x3F, 0x3D },
			CipherText = new byte[] { 0x10, 0x4D, 0x15, 0xC2, 0x61, 0x8A, 0x9D, 0xA9, 0xAF, 0x8C, 0x56, 0x3A, 0x4C, 0xB1, 0xE1, 0x4E, 0xD8, 0x69, 0xC8, 0x64, 0xCC, 0x1E, 0xB1, 0x90, 0x73, 0x10, 0x42, 0x18, 0x3F, 0x46, 0xC9, 0xA4, 0xFB, 0x9, 0x47, 0x2B, 0x84, 0x85, 0x34, 0x5F, 0x94, 0xAF, 0x5A, 0x55, 0x25, 0x7D, 0xC1, 0xD7, 0xA4, 0xFA, 0x3A, 0x8C, 0xD4, 0x61, 0x61, 0xC7, 0x43, 0x87, 0x36, 0x0, 0x61, 0x77, 0xC, 0x5E }
		},
		new TestVector
		{
			Key = new byte[] { 0x5E, 0xDC, 0x34, 0x69, 0x4, 0xB2, 0x96, 0xCF, 0x6B, 0xF3, 0xB4, 0x18, 0xE9, 0xAB, 0x35, 0xDB, 0xA, 0x47, 0xA1, 0x11, 0x33, 0xA9, 0x24, 0xCA },
			PlainText = new byte[] { 0x85, 0x7C, 0x8F, 0x1F, 0x4, 0xC5, 0xA0, 0x68, 0xF9, 0xBB, 0x83, 0xAF, 0x95, 0xD9, 0x98, 0x64, 0xD6, 0x31, 0x77, 0x51, 0xAF, 0x3, 0x32, 0xD1, 0x63, 0x8E, 0xDA, 0x3D, 0x32, 0x26, 0x44, 0xA8, 0x37, 0x87, 0xC, 0xCC, 0x91, 0x69, 0xDB, 0x43, 0xC1, 0x55, 0xE6, 0xFB, 0x53, 0xB6, 0xB7, 0xE4, 0xC1, 0x33, 0x30, 0xEB, 0x94, 0x3C, 0xCD, 0x2C, 0xCC, 0xE3, 0x29, 0x63, 0x82, 0xEE, 0xC4, 0xA4, 0xCC, 0x2A, 0x3, 0x4D, 0xE1, 0x2, 0x78, 0x38, 0x7D, 0x4F, 0x64, 0x35, 0x87, 0x72, 0x7A, 0xB7 },
			CipherText = new byte[] { 0x72, 0x22, 0x3A, 0x93, 0x94, 0x2F, 0x73, 0x59, 0xFE, 0x5E, 0x51, 0x6A, 0x5, 0xC8, 0xE8, 0x41, 0xC5, 0x9B, 0xB7, 0x47, 0x14, 0x80, 0x9B, 0x13, 0xA9, 0x75, 0x7B, 0x82, 0x93, 0xF9, 0xB0, 0xB4, 0x20, 0xD1, 0xC5, 0xA4, 0xF4, 0x40, 0xF3, 0x65, 0xD0, 0x8F, 0x94, 0x25, 0xE3, 0x47, 0xB5, 0xDD, 0x23, 0xA9, 0xED, 0x5, 0xF2, 0xCE, 0x16, 0x18, 0xCC, 0xB0, 0x9E, 0x71, 0x2C, 0x59, 0xB9, 0x7B, 0x76, 0x74, 0x51, 0x7F, 0xC8, 0x75, 0xAE, 0x9F, 0x6F, 0x18, 0x8B, 0xFA, 0x5A, 0x42, 0xBA, 0xC9 }
		},
		new TestVector
		{
			Key = new byte[] { 0xF2, 0xA1, 0xE6, 0xCD, 0xE1, 0x7E, 0x8E, 0x54, 0xE, 0xEE, 0x98, 0x6C, 0x6C, 0x28, 0x2C, 0x28, 0xB, 0xC, 0x7B, 0x8A, 0x3C, 0xB7, 0x0, 0xAE },
			PlainText = new byte[] { 0xF7, 0x54, 0x5, 0x45, 0x79, 0x34, 0x6A, 0x45, 0x31, 0x22, 0xA2, 0xDF, 0xDD, 0xF0, 0xFE, 0xB2, 0xF1, 0x56, 0x2E, 0x3E, 0x38, 0xFD, 0x5, 0x9B, 0xBD, 0xD6, 0x7C, 0x6A, 0xEC, 0xB0, 0xFA, 0xD, 0xF5, 0xA, 0xD2, 0x13, 0x71, 0x25, 0xD, 0xF6, 0x48, 0x5E, 0x6B, 0x9, 0xD2, 0xBB, 0xA4, 0xAC, 0x3C, 0xC4, 0xF3, 0xC2, 0x2E, 0x94, 0xD5, 0x65, 0xAA, 0x2F, 0xF, 0xD8, 0x38, 0x16, 0xEE, 0xBC, 0x40, 0x19, 0xD2, 0x87, 0xB7, 0x6D, 0xEE, 0x33, 0xFD, 0xFE, 0x49, 0x33, 0x6, 0x6, 0x8, 0xAB, 0xB9, 0xDF, 0xF0, 0xE0, 0x95, 0x16, 0x27, 0xEE, 0x9A, 0xC0, 0x3A, 0xB9, 0x67, 0x11, 0x64, 0x25 },
			CipherText = new byte[] { 0x3E, 0xD8, 0x21, 0x67, 0x99, 0x4A, 0x68, 0x7B, 0x8B, 0x4F, 0x5F, 0xF8, 0xDB, 0xCB, 0xF, 0x15, 0xCD, 0x3F, 0xFB, 0x74, 0x3C, 0x12, 0x65, 0x22, 0x57, 0x74, 0x91, 0xB0, 0x4F, 0xD9, 0x30, 0x8E, 0xDC, 0x92, 0xED, 0x3C, 0xD4, 0xF1, 0x3, 0xA3, 0xEC, 0xC8, 0x50, 0x3D, 0xD2, 0x12, 0x8D, 0xCE, 0x77, 0x2A, 0xEB, 0x82, 0x1A, 0x51, 0x8A, 0x2, 0x3E, 0xAA, 0x98, 0x53, 0xD0, 0x1E, 0x47, 0x3E, 0xE4, 0x5F, 0x97, 0x90, 0x48, 0xAC, 0xFD, 0x7F, 0x83, 0x2D, 0xD3, 0xA6, 0x9A, 0x7B, 0x77, 0x99, 0x6B, 0xB1, 0x6B, 0x1D, 0x1C, 0xEB, 0xDB, 0x33, 0xAD, 0x4E, 0xBE, 0x4D, 0x24, 0x48, 0x9D, 0x2 }
		},
		new TestVector
		{
			Key = new byte[] { 0xA0, 0x2A, 0xE, 0x8A, 0x92, 0x33, 0x92, 0x62, 0x1A, 0xAA, 0x44, 0x45, 0xC2, 0xFA, 0xB3, 0x18, 0x2E, 0x50, 0x2C, 0x81, 0xB7, 0xAA, 0x80, 0x9D },
			PlainText = new byte[] { 0x55, 0x31, 0x7, 0xF6, 0xC2, 0xC8, 0xE5, 0xAF, 0xDC, 0xE5, 0x8C, 0x2, 0x4C, 0x9F, 0x83, 0xED, 0x65, 0x9, 0x65, 0x27, 0x4E, 0xBF, 0x2C, 0x59, 0x64, 0xBE, 0xAF, 0x8B, 0xDA, 0x79, 0x6A, 0xDC, 0xA2, 0x29, 0x7E, 0x77, 0x91, 0x64, 0xF8, 0xC2, 0xBE, 0xF1, 0x56, 0xD9, 0x2B, 0xDB, 0x48, 0x3A, 0xA7, 0xC4, 0xB3, 0xC2, 0xF2, 0x7C, 0xFB, 0xD8, 0x23, 0xD2, 0x82, 0xE8, 0x47, 0xAA, 0x6C, 0x13, 0x4B, 0x50, 0xA6, 0x24, 0x1C, 0xC, 0x26, 0xC6, 0xC, 0xF7, 0x74, 0xF5, 0x78, 0xC, 0x69, 0xB3, 0xA7, 0x82, 0x36, 0xFC, 0xF6, 0x5A, 0xA9, 0xFB, 0x32, 0x34, 0xAC, 0x7E, 0x46, 0x66, 0xF, 0xA8, 0x16, 0x4F, 0x87, 0xE5, 0xAA, 0xE9, 0xF6, 0x23, 0x8F, 0x9E, 0xEC, 0x40, 0x7A, 0x5D, 0x6E, 0xBE },
			CipherText = new byte[] { 0x52, 0x77, 0xCF, 0x7E, 0x99, 0x2F, 0x5B, 0xDC, 0x4E, 0xAE, 0xBA, 0x7D, 0xC0, 0xB, 0xFE, 0x36, 0xDB, 0x32, 0x92, 0xA7, 0x3D, 0xA8, 0x6B, 0x23, 0xA, 0xDC, 0x91, 0xE9, 0x4C, 0x2, 0x16, 0x79, 0xA6, 0x8C, 0x6B, 0x65, 0xFC, 0xDC, 0x37, 0xC, 0xC, 0xF4, 0x43, 0xEE, 0x94, 0x5F, 0x47, 0x48, 0xFC, 0xEF, 0xB8, 0xDD, 0x12, 0x41, 0xEF, 0x6A, 0x2D, 0x20, 0x36, 0x96, 0x7E, 0x9E, 0xBC, 0xAA, 0xFE, 0x63, 0x6D, 0xFE, 0xBF, 0xB, 0xB2, 0x37, 0x92, 0xA0, 0xF2, 0x2C, 0x98, 0x73, 0xB5, 0x47, 0x26, 0xC7, 0x15, 0x76, 0x66, 0xB4, 0xA3, 0x31, 0xC7, 0x9C, 0x70, 0x9D, 0x29, 0xB2, 0xD5, 0x98, 0xB8, 0x6D, 0x1C, 0xED, 0x77, 0x25, 0x17, 0x5E, 0x88, 0x2F, 0x92, 0xAF, 0x4, 0xDD, 0xBC, 0xC8 }
		},
		new TestVector
		{
			Key = new byte[] { 0x2F, 0xEC, 0xF7, 0xBE, 0xA1, 0x80, 0xBD, 0x2C, 0x5B, 0x8B, 0x35, 0x37, 0x1E, 0xD5, 0xD9, 0x4, 0xCC, 0xCE, 0x29, 0xA3, 0x84, 0x23, 0xF0, 0x42 },
			PlainText = new byte[] { 0xF, 0x8F, 0xC8, 0xA0, 0x7B, 0xF4, 0xE0, 0xC5, 0x5, 0xAA, 0xFD, 0xF1, 0x3D, 0x16, 0xBF, 0xD2, 0x64, 0x7F, 0x26, 0xF9, 0x19, 0x1E, 0x54, 0x8F, 0x35, 0x74, 0x95, 0x44, 0xF3, 0xE1, 0x9C, 0x89, 0x54, 0x71, 0x10, 0xFF, 0xC1, 0xF9, 0x47, 0x2F, 0xF2, 0x63, 0x51, 0x7B, 0x10, 0x46, 0x38, 0x54, 0x16, 0xBA, 0x86, 0xAE, 0x7D, 0x6A, 0x8, 0xB1, 0x18, 0xEA, 0xD2, 0xB2, 0x3D, 0x4B, 0x83, 0x61, 0x25, 0xED, 0xCA, 0x44, 0x95, 0x95, 0x29, 0x64, 0xBE, 0xBF, 0xF9, 0x46, 0x63, 0x36, 0xAF, 0x1C, 0x39, 0xE1, 0x5D, 0x3D, 0x93, 0xE0, 0x7C, 0xD3, 0x3E, 0xD8, 0xE8, 0xD3, 0xAA, 0x8A, 0x2C, 0x33, 0x4B, 0xAB, 0x0, 0x57, 0x3F, 0xEF, 0x10, 0xCC, 0x31, 0x68, 0xFF, 0x38, 0x7D, 0xE, 0xAC, 0x91, 0x95, 0x9F, 0xB4, 0x8E, 0xA3, 0xA9, 0x38, 0x5B, 0x70, 0xE4, 0xE0, 0x91, 0x84, 0xC6, 0x1F, 0x65 },
			CipherText = new byte[] { 0x1E, 0xAB, 0x3C, 0x4E, 0x6B, 0x81, 0xF9, 0x28, 0xD9, 0x33, 0x89, 0xD8, 0x8, 0xEA, 0xAB, 0x91, 0xA8, 0xB9, 0x8, 0x62, 0xE6, 0x3E, 0x20, 0x18, 0xE9, 0xCB, 0x50, 0x8, 0x2D, 0xD1, 0x72, 0xA0, 0x94, 0xB6, 0xAB, 0xE3, 0x3, 0x1D, 0x6D, 0xD2, 0x82, 0xAD, 0x79, 0xB1, 0xAC, 0x45, 0xA9, 0xC7, 0xB9, 0x36, 0x8C, 0x71, 0x9E, 0xB7, 0x56, 0x65, 0xD5, 0x33, 0x42, 0x73, 0x7C, 0x92, 0x42, 0x21, 0xDB, 0x2C, 0x70, 0x97, 0x23, 0xBF, 0xA9, 0x1C, 0xF2, 0x7, 0xA, 0x3F, 0xE2, 0xA1, 0x92, 0x62, 0x60, 0x89, 0x37, 0xA2, 0x3D, 0x84, 0xEF, 0x2E, 0x80, 0x89, 0xC6, 0xBD, 0x82, 0x54, 0xBF, 0x71, 0xC9, 0x26, 0x3E, 0x82, 0x21, 0x60, 0x9E, 0xDE, 0x73, 0x3E, 0x33, 0x85, 0x7C, 0x37, 0xE6, 0xA7, 0x90, 0x79, 0x65, 0x47, 0x15, 0x34, 0xD, 0x48, 0xFF, 0x33, 0x5C, 0x13, 0x3F, 0xFB, 0x3, 0xEA }
		},
		new TestVector
		{
			Key = new byte[] { 0x8F, 0x52, 0xB9, 0x20, 0x7, 0x31, 0x83, 0xCF, 0x13, 0x3, 0x6A, 0x3B, 0xA8, 0xF7, 0xB7, 0x1B, 0xF1, 0x99, 0x92, 0x89, 0xF5, 0xEC, 0xC4, 0xB3 },
			PlainText = new byte[] { 0x74, 0xB9, 0xC1, 0xD3, 0x11, 0x26, 0xE5, 0x61, 0xB7, 0x8A, 0xFE, 0x86, 0x35, 0x80, 0xB, 0xD5, 0x2B, 0x3B, 0x43, 0x36, 0x2A, 0x19, 0x59, 0x22, 0x17, 0x7A, 0xFF, 0x16, 0xD0, 0xD2, 0xA9, 0x41, 0x12, 0xFD, 0x93, 0x80, 0x9B, 0xD3, 0x5, 0x8D, 0x8B, 0xFD, 0xD6, 0x74, 0x10, 0x7, 0x2F, 0x46, 0x42, 0xB5, 0x91, 0x10, 0x4C, 0x9B, 0x19, 0xE, 0xCD, 0xE8, 0x3, 0x1D, 0x7E, 0x83, 0x6E, 0x6F, 0x14, 0x59, 0x5E, 0x82, 0x68, 0xF5, 0x7, 0x53, 0xD5, 0x51, 0x49, 0xCF, 0xE1, 0xEB, 0x77, 0x8A, 0x20, 0x1C, 0x5C, 0xB3, 0x56, 0xA5, 0x80, 0x48, 0xDC, 0x8B, 0xA7, 0x86, 0x45, 0x26, 0x9B, 0xA4, 0x40, 0x74, 0x2B, 0xC0, 0xC0, 0xB3, 0x74, 0x1A, 0x5B, 0x2E, 0x5F, 0x80, 0xF0, 0x57, 0x6B, 0x9, 0x8D, 0x16, 0xAD, 0x6, 0x90, 0x61, 0x15, 0x36, 0xC, 0xD, 0xF2, 0x39, 0x6E, 0xE3, 0xB8, 0x47, 0x60, 0xF7, 0x1, 0x22, 0xED, 0x35, 0xD3, 0x49, 0xE6, 0x3D, 0x21, 0x6F, 0x85, 0x71, 0x94, 0x2B },
			CipherText = new byte[] { 0xA4, 0x66, 0xC6, 0xA0, 0xE7, 0xD3, 0xE3, 0xA3, 0x75, 0x6B, 0x59, 0x1C, 0x8F, 0x53, 0x2, 0xE2, 0x35, 0xB0, 0xEE, 0x64, 0xF5, 0x18, 0x8B, 0x4D, 0xCB, 0x51, 0xA9, 0x20, 0x4B, 0x54, 0x9, 0x4D, 0x4A, 0x1C, 0xC3, 0xFC, 0x34, 0xE2, 0x24, 0x1, 0xC6, 0x18, 0xAB, 0x8A, 0xDB, 0x28, 0xD4, 0x15, 0x31, 0x76, 0x2A, 0x57, 0x6E, 0xBC, 0xAD, 0xC9, 0x56, 0xBF, 0x19, 0xE5, 0xB2, 0x97, 0x1, 0xB2, 0xA7, 0x70, 0x30, 0xEE, 0x10, 0xB, 0x65, 0xBC, 0xF8, 0x39, 0x78, 0x53, 0xEB, 0x20, 0x74, 0x40, 0x20, 0x89, 0xFF, 0x69, 0x70, 0x46, 0xD5, 0x38, 0xC5, 0x60, 0xD1, 0x1, 0x72, 0xEA, 0x8D, 0xE8, 0x12, 0x99, 0x1, 0x1E, 0x3F, 0xF0, 0xA0, 0xFB, 0xD8, 0x74, 0x99, 0xFF, 0x50, 0xA0, 0xB3, 0xE7, 0xE5, 0x9F, 0xA0, 0x67, 0x53, 0xFC, 0x1B, 0xC4, 0x17, 0x10, 0x46, 0x38, 0x3, 0x23, 0x87, 0x5C, 0x24, 0x35, 0xA, 0x9E, 0x98, 0xDD, 0xF6, 0x9F, 0x6D, 0x7E, 0x37, 0xE3, 0x63, 0xDD, 0xE1, 0xBA }
		},
		new TestVector
		{
			Key = new byte[] { 0x51, 0x4B, 0x8B, 0xF1, 0x41, 0xF5, 0x60, 0x41, 0x24, 0x13, 0xED, 0x1E, 0x40, 0xE3, 0x4E, 0xC2, 0x3A, 0x89, 0xE9, 0x90, 0x36, 0xA4, 0xAC, 0x4A },
			PlainText = new byte[] { 0x3E, 0x25, 0x96, 0x84, 0xE8, 0x61, 0x79, 0x59, 0x33, 0x65, 0xFE, 0x5C, 0xB3, 0x89, 0xE9, 0xD1, 0xEE, 0x48, 0x9E, 0x1E, 0x5, 0x4E, 0xE4, 0x7C, 0x97, 0xD3, 0xEA, 0xF2, 0xE2, 0x28, 0x88, 0x84, 0x2B, 0x8F, 0xC6, 0xA8, 0x60, 0x50, 0xA2, 0xF9, 0xFD, 0x9, 0xE, 0x2F, 0x2C, 0x46, 0x39, 0x4F, 0x30, 0x51, 0xF, 0x1F, 0x3, 0x4C, 0x3, 0xDD, 0x3E, 0x7C, 0xC, 0x30, 0x3A, 0xE8, 0xED, 0x5F, 0x75, 0x23, 0xBA, 0xC1, 0x37, 0x66, 0x98, 0x75, 0x75, 0xE1, 0xC4, 0x52, 0xF5, 0x53, 0xD7, 0x21, 0xB3, 0xD9, 0x48, 0xA, 0x84, 0x3, 0x32, 0x4D, 0xF9, 0x2D, 0x57, 0x33, 0x86, 0xD, 0x66, 0x43, 0xE3, 0x88, 0x79, 0xB8, 0xB3, 0xCA, 0xE2, 0x33, 0x64, 0x95, 0x27, 0xAE, 0x56, 0xD9, 0x4B, 0xB1, 0x3F, 0x86, 0x4F, 0xC8, 0xCE, 0x9E, 0xF9, 0x34, 0x8E, 0x8E, 0xD4, 0xE1, 0xE, 0xBE, 0x78, 0x98, 0x3F, 0x67, 0xB, 0x76, 0x1D, 0xA5, 0x8, 0x9D, 0x91, 0xCD, 0x3F, 0x29, 0x96, 0x0, 0x1E, 0x66, 0x9C, 0x0, 0x2E, 0x40, 0x29, 0x43, 0xE0, 0xFA, 0xC6, 0x46, 0x8A, 0x23, 0x19, 0x24, 0xAD, 0xC6 },
			CipherText = new byte[] { 0x62, 0x39, 0x86, 0x7F, 0x34, 0xD5, 0x7B, 0x91, 0x72, 0x94, 0x10, 0xF9, 0x37, 0x97, 0xC6, 0x9E, 0x45, 0x52, 0x6F, 0x13, 0x40, 0x5E, 0xC2, 0x22, 0xED, 0xFA, 0xE6, 0x82, 0xB6, 0xC2, 0xD7, 0x5B, 0x33, 0x24, 0x30, 0xD3, 0xB, 0xC2, 0x47, 0x97, 0x35, 0xEC, 0xCD, 0x3B, 0xD9, 0x85, 0x65, 0x7E, 0xC9, 0x65, 0xEB, 0x93, 0x39, 0x4B, 0xD8, 0x8C, 0xDC, 0xE7, 0xA7, 0x6B, 0xE8, 0x12, 0x55, 0xAB, 0x34, 0x18, 0xD5, 0x70, 0x82, 0x77, 0x1, 0x29, 0xC3, 0x48, 0x2A, 0x2B, 0x1E, 0x51, 0xF1, 0x4E, 0x2C, 0x69, 0xA2, 0x4E, 0x64, 0x5, 0x94, 0x44, 0x87, 0xB0, 0x85, 0x54, 0xD7, 0x5A, 0x35, 0x4, 0x3D, 0x71, 0x3B, 0xAD, 0x56, 0x43, 0xF6, 0xC4, 0xFC, 0x1C, 0x5C, 0xF2, 0x2B, 0x3C, 0x72, 0x47, 0x9D, 0xD0, 0x60, 0xAB, 0x92, 0xB4, 0xDA, 0x51, 0xB7, 0x6D, 0xCA, 0x85, 0x57, 0x69, 0x14, 0x36, 0x8, 0xA9, 0x2A, 0xE8, 0xDE, 0xD6, 0x84, 0xA8, 0xA6, 0xD0, 0x93, 0x76, 0x5F, 0x41, 0x49, 0xCF, 0x1A, 0x37, 0x53, 0xB8, 0x49, 0x36, 0x8E, 0x99, 0xD0, 0x66, 0xD2, 0xF7, 0x11, 0xC2, 0x7F, 0x75 }
		}
	};
		private readonly TestVector[] lea128EcbTestVectors =
		{
		new TestVector
		{
			Key = new byte[] { 0x7, 0xAB, 0x63, 0x5, 0xB0, 0x25, 0xD8, 0x3F, 0x79, 0xAD, 0xDA, 0xA6, 0x3A, 0xC8, 0xAD, 0x0 },
			PlainText = new byte[] { 0xF2, 0x8A, 0xE3, 0x25, 0x6A, 0xAD, 0x23, 0xB4, 0x15, 0xE0, 0x28, 0x6, 0x3B, 0x61, 0xC, 0x60 },
			CipherText = new byte[] { 0x64, 0xD9, 0x8, 0xFC, 0xB7, 0xEB, 0xFE, 0xF9, 0xF, 0xD6, 0x70, 0x10, 0x6D, 0xE7, 0xC7, 0xC5 }
		},
		new TestVector
		{
			Key = new byte[] { 0x56, 0xCE, 0xC7, 0x6D, 0xBD, 0x39, 0xF3, 0xEB, 0x7F, 0x7A, 0xD2, 0xA4, 0x92, 0xC9, 0x91, 0xA0 },
			PlainText = new byte[] { 0x2D, 0x8C, 0xCE, 0x99, 0x72, 0x6D, 0x59, 0xAF, 0x50, 0xB0, 0x37, 0x5D, 0xA8, 0xC3, 0xED, 0xAC, 0xAE, 0x17, 0xFB, 0xA6, 0x93, 0x2F, 0xA6, 0xE, 0x61, 0xF7, 0xFA, 0x4E, 0x26, 0x56, 0x10, 0xB1 },
			CipherText = new byte[] { 0x38, 0x1D, 0xB, 0xDB, 0xC8, 0x8, 0xC4, 0x8, 0xD1, 0xBD, 0xC, 0x79, 0x1F, 0xB0, 0x84, 0x69, 0xF1, 0x9F, 0x63, 0x19, 0x32, 0x9F, 0x9E, 0xCD, 0x5C, 0xD6, 0xCF, 0xD0, 0xC3, 0x89, 0x2B, 0xEC }
		},
		new TestVector
		{
			Key = new byte[] { 0x54, 0x6, 0x8D, 0xD2, 0x68, 0xA4, 0x6B, 0x55, 0xCA, 0x3, 0xFC, 0xD4, 0xF4, 0xC6, 0x2B, 0x1C },
			PlainText = new byte[] { 0xD7, 0x2E, 0x6, 0x9A, 0x7A, 0x30, 0x79, 0x10, 0xE5, 0xCB, 0x5C, 0x8C, 0x3D, 0x98, 0xB1, 0x9B, 0x30, 0xA3, 0x26, 0xBA, 0x94, 0x79, 0xE2, 0xD, 0x4A, 0x82, 0x7D, 0x54, 0x69, 0x91, 0x50, 0x1A, 0x98, 0xBA, 0xF0, 0x2F, 0xBC, 0x64, 0xF5, 0x59, 0xD4, 0x9E, 0x0, 0x47, 0x20, 0xB7, 0xFC, 0xC6 },
			CipherText = new byte[] { 0x6C, 0x83, 0xD5, 0x2A, 0x76, 0x9B, 0x41, 0x46, 0xF7, 0x7E, 0xFB, 0x6F, 0x64, 0x19, 0x3D, 0x9A, 0xB4, 0x76, 0x31, 0x40, 0xCB, 0x56, 0x5, 0x74, 0x79, 0x27, 0x88, 0xD8, 0xD0, 0x51, 0xA6, 0xF8, 0x42, 0xA3, 0xC6, 0xA7, 0x31, 0xA9, 0xD8, 0x8A, 0xD0, 0xAA, 0xF9, 0x59, 0xF8, 0x23, 0x9, 0xC3 }
		},
		new TestVector
		{
			Key = new byte[] { 0x89, 0x8, 0xA3, 0x38, 0x3D, 0x15, 0x44, 0x41, 0x9A, 0xD5, 0xC4, 0xC3, 0x4D, 0x4D, 0xE4, 0xD },
			PlainText = new byte[] { 0xBB, 0x64, 0xC1, 0x4F, 0xA0, 0xF2, 0xA1, 0x51, 0xF5, 0x1A, 0xEC, 0x65, 0x18, 0xDA, 0x79, 0x9B, 0x27, 0xE0, 0xB, 0x33, 0xAC, 0x9F, 0x1C, 0x58, 0x80, 0xA3, 0xD9, 0xB, 0xE9, 0x21, 0x6D, 0x5D, 0x6, 0xD3, 0x82, 0xE1, 0x6D, 0x2, 0x5, 0x61, 0x12, 0xE5, 0x2A, 0xD0, 0x6B, 0x29, 0xB1, 0x80, 0xD1, 0xD1, 0x67, 0x95, 0x2A, 0x40, 0xEF, 0xBA, 0xC5, 0x94, 0xC2, 0x12, 0x85, 0x36, 0x75, 0x71 },
			CipherText = new byte[] { 0x1B, 0xB3, 0xEB, 0x3E, 0xEF, 0xB1, 0x5C, 0xB8, 0xB8, 0x46, 0x71, 0x43, 0x32, 0xDE, 0xE0, 0x57, 0x9A, 0xD3, 0xE0, 0x47, 0xD1, 0xEF, 0xA1, 0x8, 0xA9, 0x96, 0xD3, 0xF2, 0xF0, 0xE6, 0x53, 0x2C, 0x6E, 0x74, 0x49, 0xE1, 0x28, 0x6B, 0x71, 0x43, 0x56, 0x52, 0x5B, 0xA4, 0x8B, 0x8A, 0x6, 0x14, 0x76, 0xB0, 0x51, 0x7F, 0xD5, 0x63, 0x49, 0x9B, 0x41, 0x45, 0xFA, 0x62, 0xDE, 0xAF, 0xCD, 0xD4 }
		},
		new TestVector
		{
			Key = new byte[] { 0x42, 0xAF, 0x3B, 0xCD, 0x6C, 0xBE, 0xAA, 0xEF, 0xF1, 0xA7, 0xC2, 0x6E, 0x61, 0xCD, 0x2B, 0xDE },
			PlainText = new byte[] { 0x51, 0x83, 0xBE, 0x45, 0xFD, 0x20, 0x47, 0xCE, 0x31, 0x51, 0x89, 0xC2, 0x69, 0xB4, 0x83, 0xB3, 0x37, 0xA2, 0xF2, 0xFB, 0xE5, 0x4C, 0x17, 0x65, 0x5B, 0x9, 0xBA, 0x29, 0x44, 0xEE, 0x6F, 0x1E, 0x6D, 0xA0, 0x18, 0x2B, 0x6D, 0x66, 0xAB, 0xFE, 0x8B, 0x82, 0x36, 0x1, 0xDC, 0xC2, 0x20, 0x8A, 0xAC, 0x52, 0xB1, 0x53, 0x1F, 0xD4, 0xD4, 0x29, 0x18, 0xB2, 0x1C, 0xE8, 0x5A, 0xB3, 0x6, 0xA6, 0xEE, 0xCD, 0x7E, 0x2F, 0xC4, 0x3B, 0xA4, 0xB2, 0x9D, 0xCF, 0xCF, 0xB9, 0x27, 0x88, 0xD2, 0x5E },
			CipherText = new byte[] { 0xF3, 0xB6, 0xBF, 0x4A, 0xFB, 0xA7, 0x10, 0x3E, 0x32, 0xB2, 0xAC, 0x2E, 0x7B, 0x46, 0xFF, 0x91, 0xE8, 0x72, 0xBC, 0xBB, 0x93, 0xCF, 0x52, 0xE2, 0x94, 0xED, 0x55, 0x39, 0x87, 0x1C, 0x48, 0x93, 0xD1, 0x4C, 0x54, 0x8, 0x86, 0x46, 0xE2, 0xFD, 0xB, 0x7C, 0x62, 0xD5, 0x83, 0xF3, 0xAF, 0x67, 0x18, 0xB0, 0xBA, 0x83, 0xC7, 0xA2, 0x9E, 0x2F, 0x96, 0x2D, 0xF0, 0x60, 0x62, 0x12, 0x1C, 0x52, 0x1B, 0xB9, 0xE7, 0x6D, 0x70, 0x35, 0x7, 0x7, 0x19, 0xED, 0xFB, 0x40, 0x9C, 0x5B, 0x83, 0xC2 }
		},
		new TestVector
		{
			Key = new byte[] { 0x6A, 0x67, 0x7F, 0xBC, 0x64, 0x7F, 0x6A, 0xA5, 0xF0, 0x4C, 0xF0, 0x93, 0xED, 0x45, 0x77, 0xE0 },
			PlainText = new byte[] { 0x9B, 0xB4, 0xF6, 0x39, 0x48, 0xC6, 0xB9, 0x50, 0x2D, 0xDE, 0x5E, 0xD1, 0x93, 0x2F, 0x24, 0x98, 0x3A, 0x8A, 0x65, 0x21, 0xFA, 0x74, 0x60, 0x3F, 0xAB, 0x7C, 0x3C, 0x11, 0x43, 0xCC, 0x4A, 0x32, 0x3E, 0xFD, 0x8B, 0x31, 0x43, 0x30, 0x72, 0x41, 0x4, 0x5A, 0xEA, 0x31, 0x66, 0xDF, 0x9B, 0x9E, 0xE2, 0x63, 0x69, 0x67, 0x2A, 0xDC, 0x3E, 0x61, 0x10, 0xEC, 0xA, 0x4C, 0xA4, 0x6F, 0x8, 0x6, 0x9D, 0x50, 0x42, 0xFF, 0xFB, 0xA0, 0x57, 0xED, 0xEA, 0xE9, 0x7C, 0xC1, 0xE8, 0xBF, 0xC1, 0xD9, 0x2A, 0x99, 0x96, 0x77, 0x3C, 0xDF, 0x8D, 0x72, 0xE9, 0x44, 0x61, 0x2B, 0x5A, 0x56, 0x38, 0xC3 },
			CipherText = new byte[] { 0x5C, 0x1F, 0x5B, 0xE7, 0x8B, 0xE5, 0x9B, 0x99, 0x2E, 0xBB, 0xC2, 0xC0, 0x49, 0xFD, 0xEF, 0x3E, 0x46, 0xEA, 0xA5, 0x99, 0x34, 0x58, 0x96, 0x43, 0x46, 0x8F, 0xC5, 0xB8, 0xBF, 0x96, 0x37, 0x7C, 0xEC, 0x45, 0x44, 0x1D, 0x0, 0xA3, 0x80, 0xBB, 0x71, 0xD5, 0x44, 0xD7, 0x59, 0x86, 0x7D, 0x79, 0x6, 0xEA, 0xC5, 0x8B, 0x45, 0x52, 0x92, 0xD3, 0x35, 0x90, 0xD9, 0x15, 0xF8, 0x72, 0x22, 0x53, 0xAA, 0x2A, 0xA3, 0xD1, 0xCD, 0x26, 0xD6, 0xE5, 0xDF, 0xC4, 0xD2, 0xBF, 0xC4, 0x29, 0x7B, 0xB2, 0xE7, 0x4E, 0xF0, 0x59, 0x28, 0x86, 0x16, 0x2A, 0x17, 0xC6, 0xBC, 0x40, 0x99, 0x99, 0xFE, 0x85 }
		},
		new TestVector
		{
			Key = new byte[] { 0x82, 0x53, 0x25, 0x8B, 0xB9, 0x3F, 0xF1, 0xBC, 0xA6, 0x33, 0x1B, 0x69, 0x63, 0xF8, 0x1D, 0xB1 },
			PlainText = new byte[] { 0xDC, 0xD5, 0xF1, 0x39, 0x78, 0xA4, 0xD4, 0xDA, 0xFC, 0x2B, 0x4A, 0x96, 0xAC, 0xAA, 0x62, 0xD1, 0xB3, 0xB1, 0x3B, 0xBD, 0xC4, 0x34, 0xC7, 0x17, 0x2, 0xE1, 0xCF, 0x11, 0x1D, 0xB1, 0x37, 0x8F, 0xBE, 0xBE, 0x84, 0x95, 0x26, 0x54, 0x9B, 0x0, 0x12, 0x4A, 0xCB, 0x75, 0xE1, 0x93, 0xE, 0x98, 0xF8, 0x10, 0x8C, 0x7E, 0x66, 0xA8, 0x61, 0x64, 0xC4, 0x9B, 0xA0, 0xA1, 0x5F, 0x13, 0x98, 0xD9, 0x9A, 0xFD, 0x56, 0x74, 0x8D, 0x16, 0x6B, 0x4E, 0xF2, 0x49, 0xEF, 0xB0, 0x42, 0x38, 0xC5, 0x80, 0x1B, 0x19, 0x21, 0xB4, 0xE5, 0xC3, 0x48, 0xC, 0xB5, 0x8, 0x97, 0x1, 0x71, 0x46, 0xC7, 0xF9, 0x36, 0x39, 0x6F, 0xBC, 0xF6, 0x13, 0xCA, 0x2B, 0x66, 0xCF, 0xBB, 0x30, 0x17, 0xC2, 0xE, 0xF1 },
			CipherText = new byte[] { 0xC5, 0x94, 0x36, 0x53, 0x87, 0x31, 0xDF, 0xF1, 0x70, 0x27, 0x6D, 0xC, 0x2B, 0x4C, 0xB3, 0x68, 0x20, 0xD7, 0x38, 0xB8, 0x56, 0xA, 0xAC, 0x28, 0x9D, 0xBB, 0x3F, 0xA5, 0x53, 0x9, 0xDA, 0xB2, 0x78, 0x3A, 0x51, 0x39, 0x5F, 0x1C, 0xCC, 0xB7, 0xBD, 0xA5, 0x61, 0xDE, 0xE9, 0x5A, 0x3, 0x89, 0xB0, 0xFE, 0x78, 0xFA, 0xA1, 0xD4, 0x20, 0x2B, 0x19, 0x3F, 0x37, 0x73, 0x81, 0x6E, 0xF0, 0x20, 0xC0, 0x1, 0x11, 0x63, 0x56, 0x3E, 0xCB, 0xE2, 0xA8, 0xB0, 0x20, 0xBA, 0x46, 0x3, 0xDD, 0x60, 0xA6, 0xC4, 0x3C, 0x5A, 0x9E, 0xAB, 0x7A, 0x54, 0xA, 0xD1, 0xDA, 0xC2, 0xC1, 0xC3, 0x64, 0x6C, 0x89, 0x99, 0x36, 0xD3, 0x39, 0x84, 0xE7, 0xA8, 0xE8, 0xC9, 0x79, 0xED, 0x67, 0xC6, 0xFE, 0x47 }
		},
		new TestVector
		{
			Key = new byte[] { 0xE2, 0x73, 0x1, 0x49, 0x8A, 0xAC, 0x3, 0x78, 0x9D, 0xD1, 0xBB, 0x19, 0x9B, 0x71, 0x4C, 0x55 },
			PlainText = new byte[] { 0x5A, 0x1B, 0xD8, 0x57, 0xA9, 0x73, 0x43, 0xFF, 0x34, 0x84, 0x39, 0xDB, 0xA8, 0x58, 0x72, 0x53, 0x17, 0xC6, 0x34, 0x23, 0x9D, 0x8C, 0x1A, 0xF, 0x44, 0x9E, 0x15, 0xD1, 0x25, 0xBD, 0xB0, 0x57, 0xD0, 0x4A, 0x98, 0x2B, 0xEE, 0x5D, 0x5B, 0x33, 0x25, 0x12, 0x70, 0x9A, 0x3C, 0x23, 0x78, 0xE, 0x80, 0xBC, 0xC3, 0x2C, 0x66, 0x8A, 0x16, 0x38, 0x71, 0x16, 0xAB, 0x12, 0x56, 0x51, 0x7A, 0x65, 0x5F, 0x6F, 0xB7, 0x22, 0xD, 0xF9, 0x9C, 0x2D, 0x1, 0x1E, 0x68, 0x56, 0x1C, 0x4B, 0xA8, 0x8A, 0xE6, 0xFB, 0xB5, 0x4A, 0x2C, 0xCF, 0x7E, 0x5D, 0xEE, 0xE1, 0x87, 0xC2, 0x78, 0x56, 0x32, 0xE9, 0xCE, 0x32, 0x3E, 0x23, 0x4D, 0x70, 0x8D, 0x56, 0x90, 0x53, 0x2A, 0xF5, 0x91, 0xF7, 0x8A, 0x2F, 0x10, 0x2B, 0x12, 0x67, 0x39, 0x83, 0xDA, 0xE5, 0x81, 0xA8, 0xB1, 0xCB, 0xD1, 0xF3, 0x61, 0x4A },
			CipherText = new byte[] { 0x13, 0x1F, 0x71, 0xB1, 0xFF, 0x25, 0x93, 0x74, 0x15, 0x30, 0x23, 0x6C, 0x37, 0xEC, 0xC1, 0x77, 0x1C, 0x9F, 0x5B, 0x51, 0xDC, 0x1F, 0x97, 0x51, 0x5, 0xC9, 0xEB, 0x9D, 0x50, 0x34, 0x9E, 0xBA, 0x43, 0x2D, 0xEB, 0x9, 0x7D, 0x5E, 0x62, 0x39, 0x42, 0x3F, 0x77, 0x4C, 0xC6, 0x2F, 0xCF, 0xFA, 0x36, 0x4D, 0x7F, 0x82, 0x3, 0x7B, 0xB0, 0xB5, 0xEB, 0x3E, 0x98, 0x57, 0x5, 0x48, 0x2B, 0x89, 0x94, 0x8C, 0x1C, 0x1E, 0xBF, 0xC7, 0x63, 0x4B, 0x80, 0xEE, 0xBA, 0x8B, 0xDE, 0x49, 0xC3, 0x39, 0x31, 0xCC, 0xBE, 0xF5, 0xBD, 0x64, 0xAB, 0x80, 0x8C, 0x5, 0x79, 0xD6, 0x66, 0x20, 0x77, 0x1A, 0x72, 0x97, 0x18, 0x20, 0xD5, 0x28, 0x62, 0xCE, 0xC6, 0x1C, 0x2A, 0x5, 0x49, 0x3E, 0xA8, 0x9B, 0x8A, 0xA, 0x34, 0x29, 0x4, 0x1D, 0xCE, 0x45, 0x83, 0xE7, 0x8C, 0xCD, 0x14, 0xAE, 0xEA, 0x5A }
		},
		new TestVector
		{
			Key = new byte[] { 0xE6, 0x3A, 0x34, 0x15, 0xF8, 0xEA, 0xB6, 0x16, 0x99, 0x56, 0xBD, 0x61, 0xE1, 0x4F, 0xA7, 0x66 },
			PlainText = new byte[] { 0xC8, 0xF5, 0xE3, 0x6A, 0xD3, 0xCC, 0xB3, 0x38, 0xF3, 0x13, 0x2F, 0x13, 0xAA, 0x51, 0x8E, 0xF0, 0x6F, 0x30, 0xA1, 0xE2, 0x54, 0x8E, 0xA0, 0xD6, 0xE6, 0xD2, 0x29, 0x80, 0x54, 0x7C, 0x86, 0x95, 0xD4, 0x1, 0x2F, 0x3B, 0x43, 0xD5, 0x8F, 0xBE, 0xB, 0xC9, 0xB, 0x84, 0x4A, 0x97, 0x41, 0x43, 0x31, 0xBB, 0x8D, 0x71, 0xAA, 0x85, 0xD2, 0xFC, 0x3D, 0x6D, 0x77, 0x3C, 0x34, 0xA6, 0xAF, 0x26, 0xFD, 0xF6, 0xFE, 0xC2, 0xD1, 0xC4, 0xF9, 0xDF, 0x93, 0x73, 0x4D, 0x5, 0xFB, 0xEE, 0x2, 0xAB, 0xF3, 0x84, 0x1, 0xAA, 0x41, 0xF7, 0xD4, 0xF2, 0x67, 0xCF, 0xAE, 0x7B, 0xC7, 0xF4, 0xAB, 0x7F, 0xB, 0x7C, 0x58, 0xE7, 0xC4, 0xC2, 0x76, 0x3, 0x51, 0xB8, 0xFB, 0x7D, 0x3, 0x7E, 0x5A, 0x90, 0x7F, 0x33, 0x4, 0x75, 0x63, 0xB, 0x2F, 0x1E, 0x2C, 0xA1, 0xD6, 0x27, 0x57, 0x8F, 0x1, 0xA, 0xC6, 0x3D, 0x46, 0x92, 0x66, 0xF6, 0x90, 0x92, 0xF, 0x41, 0x1F, 0xD6, 0xAB, 0x6E, 0xD0, 0x5A },
			CipherText = new byte[] { 0xF4, 0xE1, 0x5B, 0xCF, 0x68, 0x35, 0x1, 0xB1, 0xD3, 0x43, 0x2C, 0xD5, 0x7D, 0x24, 0x6D, 0x89, 0xCC, 0xFC, 0xE6, 0x71, 0x42, 0x95, 0xA1, 0x61, 0x70, 0x6, 0x79, 0x81, 0xF4, 0xBB, 0xEB, 0xDA, 0x8C, 0x6B, 0x14, 0x4F, 0xA1, 0x2E, 0x3A, 0x58, 0xFF, 0x71, 0x13, 0xB8, 0xC9, 0x45, 0x33, 0x79, 0xF1, 0x4, 0xF3, 0x94, 0xDB, 0xC4, 0x16, 0xBB, 0x35, 0xAC, 0xB0, 0x36, 0x47, 0x9A, 0x26, 0x9, 0x58, 0xB2, 0xA, 0x97, 0xA1, 0x7B, 0xC3, 0x53, 0xCF, 0xC9, 0x2E, 0x62, 0x13, 0x91, 0x14, 0xDC, 0xE8, 0x1D, 0xD5, 0xF, 0xB8, 0x9A, 0x17, 0x8C, 0x2F, 0x2, 0xD, 0x3A, 0x6A, 0xFD, 0xC2, 0x3, 0x7A, 0xEA, 0x91, 0xCE, 0x32, 0x38, 0x2, 0xE1, 0xA1, 0xEC, 0x5C, 0x70, 0xEF, 0x17, 0x7E, 0xB6, 0xAB, 0x59, 0x21, 0xEE, 0x94, 0x15, 0x1F, 0x37, 0xA4, 0x89, 0x76, 0x99, 0x2E, 0x9, 0xB9, 0xFD, 0x75, 0x44, 0xF3, 0x46, 0x42, 0xB0, 0x5B, 0x7E, 0x58, 0xF, 0x1A, 0x9A, 0xC6, 0xA3, 0xD9, 0xC1 }
		},
		new TestVector
		{
			Key = new byte[] { 0x9B, 0x6F, 0x9F, 0xBA, 0x56, 0xE9, 0x6A, 0xEA, 0x53, 0x8B, 0xF8, 0x27, 0x2A, 0x9F, 0x39, 0x2D },
			PlainText = new byte[] { 0xF6, 0xDE, 0xCF, 0xAB, 0xFD, 0x89, 0xCE, 0xF4, 0x93, 0xB5, 0xC0, 0xF7, 0x3B, 0xE7, 0xED, 0x71, 0x10, 0xE0, 0xD9, 0x61, 0x63, 0xBA, 0xD, 0xBD, 0xA6, 0x34, 0x1A, 0x63, 0x88, 0x4B, 0xDC, 0x52, 0x62, 0xA, 0xFC, 0x1A, 0xD2, 0xA2, 0xB8, 0x91, 0xA5, 0xBD, 0xE7, 0xC8, 0xFB, 0x10, 0x37, 0x3D, 0xA5, 0x2F, 0xBA, 0x52, 0xD2, 0xA6, 0xA1, 0xFE, 0xEB, 0x45, 0x47, 0xC3, 0xBB, 0xBB, 0x71, 0xE0, 0xD3, 0x67, 0xD4, 0xC7, 0x2D, 0x6A, 0xD7, 0xD1, 0xF, 0x1, 0x9B, 0x31, 0x32, 0x12, 0x38, 0x27, 0x24, 0x4, 0x4A, 0x76, 0xEB, 0xD4, 0xAD, 0x17, 0xEB, 0x65, 0x84, 0x2F, 0xA, 0x18, 0x80, 0x3F, 0x11, 0x9D, 0x5F, 0x9A, 0x55, 0x9, 0xB2, 0x1D, 0x98, 0x28, 0xE4, 0x1A, 0x2A, 0x14, 0x78, 0x95, 0x53, 0x6, 0x92, 0xB3, 0xF6, 0x6D, 0xB9, 0x6F, 0x6E, 0x3D, 0xDB, 0x8F, 0xBC, 0x8A, 0x91, 0xD6, 0xE4, 0x55, 0xA5, 0x7C, 0x94, 0xA6, 0xD2, 0xDB, 0x7, 0xDB, 0xCA, 0x6B, 0x29, 0x3F, 0x7E, 0xF0, 0xFC, 0xDE, 0x99, 0xF2, 0x3A, 0x98, 0x4D, 0x6E, 0x3C, 0x75, 0x53, 0xCB, 0x1A, 0x38, 0x2D, 0xF },
			CipherText = new byte[] { 0x98, 0xD8, 0x5D, 0x7D, 0xD, 0x13, 0x6A, 0x80, 0xCE, 0x74, 0x86, 0x44, 0x69, 0xD7, 0x7A, 0x3, 0xEF, 0x56, 0xEC, 0x9B, 0x24, 0xA7, 0x11, 0x9D, 0xE0, 0x95, 0x8, 0xA0, 0x4D, 0x6F, 0x43, 0x7E, 0x67, 0xB, 0x54, 0xB3, 0x6E, 0x2C, 0xBD, 0xE5, 0x1C, 0xDB, 0xD0, 0x1E, 0x2C, 0xEA, 0x53, 0x33, 0x2C, 0x2A, 0x14, 0x87, 0x9F, 0xF7, 0x7E, 0x2, 0x0, 0xA, 0x0, 0xF1, 0x59, 0xFB, 0x18, 0x65, 0xE7, 0xDB, 0xED, 0x54, 0x33, 0x57, 0x91, 0x7D, 0x78, 0x3F, 0x18, 0xB0, 0x6F, 0xD8, 0xEF, 0xA6, 0x68, 0x6D, 0x2E, 0x36, 0x2B, 0xCE, 0xDE, 0x94, 0xBB, 0x76, 0x87, 0xEC, 0xFD, 0x75, 0x1, 0xB7, 0x9F, 0x91, 0x27, 0x40, 0x84, 0x6, 0x83, 0x72, 0x24, 0x66, 0x44, 0xD, 0x24, 0xE, 0xF0, 0x35, 0x56, 0x4, 0xBF, 0xCF, 0xBC, 0x30, 0xF1, 0x6F, 0x3, 0xD0, 0x5, 0x43, 0x58, 0x2A, 0x52, 0x71, 0x85, 0x26, 0x7, 0x93, 0x55, 0x16, 0x4E, 0x6B, 0x8C, 0xEC, 0x36, 0xE3, 0x46, 0xB9, 0x9, 0x2D, 0x97, 0x6, 0xC4, 0x89, 0x46, 0xC4, 0x97, 0x62, 0x9C, 0x9C, 0x90, 0x55, 0xD9, 0xD8, 0x97, 0x77 }
		}
	};

		[Fact]
		public void LEA256_ECB_Encryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.Lea.Ecb();

			for (var i = 0; i < lea256EcbTestVectors.Length; i++)
			{
				var testvector = lea256EcbTestVectors[i];

				// Act
				cipher.Init(Mode.ENCRYPT, testvector.Key);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-256-ECB encryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA256_ECB_Decryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.Lea.Ecb();

			for (var i = 0; i < lea256EcbTestVectors.Length; i++)
			{
				var testvector = lea256EcbTestVectors[i];

				// Act
				cipher.Init(Mode.DECRYPT, testvector.Key);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-256-ECB decryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA192_ECB_Encryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.Lea.Ecb();

			for (var i = 0; i < lea192EcbTestVectors.Length; i++)
			{
				var testvector = lea192EcbTestVectors[i];

				// Act
				cipher.Init(Mode.ENCRYPT, testvector.Key);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-192-ECB encryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA192_ECB_Decryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.Lea.Ecb();

			for (var i = 0; i < lea192EcbTestVectors.Length; i++)
			{
				var testvector = lea192EcbTestVectors[i];

				// Act
				cipher.Init(Mode.DECRYPT, testvector.Key);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-192-ECB decryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA128_ECB_Encryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.Lea.Ecb();

			for (var i = 0; i < lea128EcbTestVectors.Length; i++)
			{
				var testvector = lea128EcbTestVectors[i];

				// Act
				cipher.Init(Mode.ENCRYPT, testvector.Key);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.PlainText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.CipherText), "LEA-128-ECB encryption test case #" + (i + 1));
			}
		}

		[Fact]
		public void LEA128_ECB_Decryption_AllTestVectorsPassing()
		{
			// Arrange
			var cipher = new Symmetric.Lea.Ecb();

			for (var i = 0; i < lea128EcbTestVectors.Length; i++)
			{
				var testvector = lea128EcbTestVectors[i];

				// Act
				cipher.Init(Mode.DECRYPT, testvector.Key);
				ReadOnlySpan<byte> actual = cipher.DoFinal(testvector.CipherText);
				cipher.Reset();

				// Assert
				Assert.True(actual.SequenceEqual(testvector.PlainText), "LEA-128-ECB decryption test case #" + (i + 1));
			}
		}
	}
}